{
  "hash": "ffef8c60269c0dd58fd61f9f68de15c7",
  "result": {
    "markdown": "---\ntitle: Shinylive applications embedded in Quarto documents - trial\nformat: html\nfilters:\n  - shinylive\n---\n\nThis is a test to embed a Shiny app in Python in a Quarto document.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\ndf = pd.read_csv(\"pc_cov_pd.csv\")\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Compound name</th>\n      <th>Molecular weight</th>\n      <th>Polar surface area</th>\n      <th>Complexity</th>\n      <th>Partition coefficients</th>\n      <th>Heavy atom count</th>\n      <th>Hydrogen bond donor count</th>\n      <th>Hydrogen bond acceptor count</th>\n      <th>Rotatable bond count</th>\n      <th>...</th>\n      <th>Formal charge</th>\n      <th>Covalently-bonded unit count</th>\n      <th>Isotope atom count</th>\n      <th>Total atom stereocenter count</th>\n      <th>Defined atom stereocenter count</th>\n      <th>Undefined atoms stereocenter count</th>\n      <th>Total bond stereocenter count</th>\n      <th>Defined bond stereocenter count</th>\n      <th>Undefined bond stereocenter count</th>\n      <th>Part_coef_group</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>Calcitriol</td>\n      <td>416.60</td>\n      <td>60.7</td>\n      <td>688.0</td>\n      <td>5.1</td>\n      <td>30</td>\n      <td>3</td>\n      <td>3</td>\n      <td>6</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>6</td>\n      <td>6</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>0</td>\n      <td>Larger than 6</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>Ubiquinol</td>\n      <td>865.40</td>\n      <td>58.9</td>\n      <td>1600.0</td>\n      <td>20.2</td>\n      <td>63</td>\n      <td>2</td>\n      <td>4</td>\n      <td>31</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>9</td>\n      <td>0</td>\n      <td>Larger than 6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>Glutamine</td>\n      <td>146.14</td>\n      <td>106.0</td>\n      <td>146.0</td>\n      <td>-3.1</td>\n      <td>10</td>\n      <td>3</td>\n      <td>4</td>\n      <td>4</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Between -11 and 5</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>Aspirin</td>\n      <td>180.16</td>\n      <td>63.6</td>\n      <td>212.0</td>\n      <td>1.2</td>\n      <td>13</td>\n      <td>1</td>\n      <td>4</td>\n      <td>3</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Between -11 and 5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>1-Methylnicotinamide</td>\n      <td>137.16</td>\n      <td>47.0</td>\n      <td>136.0</td>\n      <td>-0.1</td>\n      <td>10</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Between -11 and 5</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 22 columns</p>\n</div>\n```\n:::\n:::\n\n\n```{shinylive-python}\n#| standalone: true\n#| components: [editor, viewer]\n#| layout: vertical\n#| viewerHeight: 420\n\n## file: app.py\n\n# ***Import all libraries or packages needed***\n# Import shiny ui, app\nfrom shiny import ui, App\n# Import shinywidgets\nfrom shinywidgets import output_widget, render_widget\n# Import shinyswatch to add themes\n#import shinyswatch\n# Import plotly express\nimport plotly.express as px\n# Import pandas\nimport pandas as pd\nfrom pathlib import Path\n# **Set up requirement.txt file - adding pandas, plotly & shinyswatch**\n\n\n# ***Specify data source***\n#df = pd.read_csv(\"pc_cov_pd.csv\")\n\n\n# User interface---\n# Add inputs & outputs\napp_ui = ui.page_fluid(\n        # Add theme\n        #shinyswatch.theme.superhero(),\n        # Add heading\n        ui.h3(\"Molecular properties of compounds used in COVID-19 clinical trials\"),\n        # Place selection boxes & texts in same row\n        ui.row(\n            # Divide the row into two columns\n            # Column 1 - selection drop-down boxes x 2\n            ui.column(\n                4, ui.input_select(\n                # Specify x variable input\n                \"x\", label = \"x axis:\", \n                choices = [\"Partition coefficients\", \n                           \"Complexity\",\n                           \"Heavy atom count\",\n                           \"Hydrogen bond donor count\",\n                           \"Hydrogen bond acceptor count\",\n                           \"Rotatable bond count\",\n                           \"Molecular weight\",\n                           \"Exact mass\", \n                           \"Polar surface area\", \n                           \"Total atom stereocenter count\", \n                           \"Total bond stereocenter count\"],\n                ), \n                ui.input_select(\n                # Specify y variable input\n                \"y\", label = \"y axis:\",\n                choices = [\"Partition coefficients\", \n                           \"Complexity\",\n                           \"Heavy atom count\",\n                           \"Hydrogen bond donor count\",\n                           \"Hydrogen bond acceptor count\",\n                           \"Rotatable bond count\", \n                           \"Molecular weight\",\n                           \"Exact mass\", \n                           \"Polar surface area\", \n                           \"Total atom stereocenter count\", \n                           \"Total bond stereocenter count\"]  \n                )),\n            # Column 2 - add texts regarding plots\n            ui.column(\n            8,\n            ui.p(\"Select different molecular properties as x and y axes to produce a scatter plot.\"),\n            ui.tags.ul(\n                ui.tags.li(\n                    \"\"\"\n                    Part_coef_group means groups of partition coefficient (xlogp) as shown in the legend on the right\"\"\" \n                ), \n                ui.tags.li(\n                    \"\"\"\n                    Toggle each partition coefficient category by clicking on the group names\"\"\"\n                ), \n                ui.tags.li(\n                    \"\"\"\n                    Hover over each data point to see compound name and relevant molecular properties\"\"\"\n                )\n            )),\n        # Output as a widget (interactive plot)\n        output_widget(\"my_widget\"), \n        # Add texts for data source\n        ui.row(\n            ui.p(\n                \"\"\"\n                Data curated by PubChem, accessed from: https://pubchem.ncbi.nlm.nih.gov/#tab=compound&query=covid-19%20clinicaltrials (last access date: 30th Apr 2023)\"\"\" \n            )         \n        ) \n    )\n)\n\n\n# Server---\n# Add plotting code within my_widget function within the server function\ndef server(input, output, session):\n    @output\n    @render_widget\n    def my_widget():\n        fig = px.scatter(\n            df, x = input.x(), y = input.y(),\n            color = \"Part_coef_group\", \n            hover_name = \"Compound name\"\n        )\n        fig.layout.height = 400\n        return fig\n        \n# Combine UI & server into Shiny app\napp = App(app_ui, server)\n\n\n## file: pc_cov_pd.csv\n#infile = Path(__file__).parent / \"pc_cov_pd.csv\"\n#df = pd.read_csv(\"pc_cov_pd.csv\")\ndf\n\n```\n\n",
    "supporting": [
      "ShinyAppPy_embed_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}