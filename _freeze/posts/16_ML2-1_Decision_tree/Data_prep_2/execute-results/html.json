{
  "hash": "5c987d2adaabcc779cbc1f40d57a5722",
  "result": {
    "markdown": "---\ntitle: Decision tree\nsubtitle: Series 2.1.2 - data preprocessing and transformation\nauthor: Jennifer HY Lin\ndate: 2023-9-19\ndraft: false\ncategories:\n  - Machine learning projects\n  - Tree models\n  - Data preprocessing\n  - Pandas\n  - ChEMBL database\nformat: html\nbibliography: references.bib\n---\n\n##### **Data source**\n\nThe data used in this post 2 for data preprocessing was extracted from ChEMBL database by using ChEMBL web resource client in Python. The details of all the steps taken to reach the final .csv file could be seen in **post 1**. \n\n<br>\n\n##### **Checklist for preprocessing ChEMBL compound data**\n\nBelow was a checklist summary for post 1 and post 2 (current post), and was highly inspired by this journal paper [@vantilborg2022] and also ChEMBL's FAQ on \"[Assay and Activity Questions](https://chembl.gitbook.io/chembl-interface-documentation/frequently-asked-questions/chembl-data-questions)\".\n\n*Note: not an exhaustive list, only a suggestion from my experience working on this series, may need to tailor to different scenarios*\n\nFor molecular data containing chemical compounds, check for:\n\n- duplicates\n- missing values\n- salts or mixture\n\nCheck the consistency of structural annotations:\n\n- molecular validity\n- molecular sanity\n- charge standardisation\n- stereochemistry\n\nCheck the reliability of reported experimental values (e.g. activity values like IC50, Ki, EC50 etc.):\n\n- annotated validity (data_validity_comment)\n- presence of outliers\n- confidence score (assays)\n- standard deviation of multiple entries (if applicable)\n\n<br>\n\n##### **Import libraries**\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# Import all libraries used\nimport pandas as pd\nimport math\nfrom rdkit.Chem import Descriptors\nimport datamol as dm\n# tqdm library used in datamol's batch descriptor code\nfrom tqdm import tqdm\nimport mols2grid\n```\n:::\n\n\n<br>\n\n##### **Re-import saved data**\n\nRe-imported the partly preprocessed data from the earlier post.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndtree_df = pd.read_csv(\"ache_chembl.csv\")\ndtree_df.head(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>molecule_chembl_id</th>\n      <th>Ki</th>\n      <th>units</th>\n      <th>data_validity_comment</th>\n      <th>max_phase</th>\n      <th>smiles</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>CHEMBL11805</td>\n      <td>0.104</td>\n      <td>nM</td>\n      <td>Potential transcription error</td>\n      <td>NaN</td>\n      <td>COc1ccccc1CN(C)CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>CHEMBL60745</td>\n      <td>1.630</td>\n      <td>nM</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>CC[N+](C)(C)c1cccc(O)c1.[Br-]</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>CHEMBL208599</td>\n      <td>0.026</td>\n      <td>nM</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>CCC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3[C@@H](C1)C2</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nThere was an extra index column (named \"Unnamed: 0\") here, which was likely inherited from how the .csv file was saved with the index already in place from part 1, so this column was dropped for now.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndtree_df = dtree_df.drop(\"Unnamed: 0\", axis = 1)\ndtree_df.head(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>molecule_chembl_id</th>\n      <th>Ki</th>\n      <th>units</th>\n      <th>data_validity_comment</th>\n      <th>max_phase</th>\n      <th>smiles</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CHEMBL11805</td>\n      <td>0.104</td>\n      <td>nM</td>\n      <td>Potential transcription error</td>\n      <td>NaN</td>\n      <td>COc1ccccc1CN(C)CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CHEMBL60745</td>\n      <td>1.630</td>\n      <td>nM</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>CC[N+](C)(C)c1cccc(O)c1.[Br-]</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CHEMBL208599</td>\n      <td>0.026</td>\n      <td>nM</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>CCC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3[C@@H](C1)C2</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<br>\n\n##### **Calculate pKi**\n\nThe distribution of Ki values were shown below via a simple statistical summary.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndtree_df[\"Ki\"].describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\ncount    5.400000e+02\nmean     2.544039e+05\nstd      4.103437e+06\nmin      1.700000e-03\n25%      2.437500e+01\n50%      1.995000e+02\n75%      3.100000e+03\nmax      9.496300e+07\nName: Ki, dtype: float64\n```\n:::\n:::\n\n\nFrom the above quick statistical summary and also the code below to find the minimum Ki value, it confirmed there were no zero Ki values recorded.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndtree_df[\"Ki\"].min()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n0.0017\n```\n:::\n:::\n\n\nNow the part about converting the Ki values to pKi values, which were the negative logs of Ki in molar units (a [PubChem example](https://pubchem.ncbi.nlm.nih.gov/bioassay/213088) might help to explain it a little). The key to understand pKi here was to treat pKi similarly to how we normally understand pH for our acids and bases. The formula to convert Ki to pKi for nanomolar (nM) units was: \n\n$$\n\\text{pKi} = 9 - log _{10}(Ki)\n$$\n\nSet up a small function to do the conversion.\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\ndef calc_pKi(Ki):\n    pKi_value = 9 - math.log10(Ki)\n    return pKi_value\n```\n:::\n\n\nApplying the calc_pKi function to convert all rows of the compound dataset for the \"Ki\" column.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n# Create a new column for pKi\n# Apply calc_pKi function to data in Ki column\ndtree_df[\"pKi\"] = dtree_df.apply(lambda x: calc_pKi(x.Ki), axis = 1)\n```\n:::\n\n\nThe dataframe would now look like this, with a new pKi column (scroll to the very right to see it).\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\ndtree_df.head(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>molecule_chembl_id</th>\n      <th>Ki</th>\n      <th>units</th>\n      <th>data_validity_comment</th>\n      <th>max_phase</th>\n      <th>smiles</th>\n      <th>pKi</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CHEMBL11805</td>\n      <td>0.104</td>\n      <td>nM</td>\n      <td>Potential transcription error</td>\n      <td>NaN</td>\n      <td>COc1ccccc1CN(C)CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)...</td>\n      <td>9.982967</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CHEMBL60745</td>\n      <td>1.630</td>\n      <td>nM</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>CC[N+](C)(C)c1cccc(O)c1.[Br-]</td>\n      <td>8.787812</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CHEMBL208599</td>\n      <td>0.026</td>\n      <td>nM</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>CCC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3[C@@H](C1)C2</td>\n      <td>10.585027</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<br>\n\n##### **Plan other data preprocessing steps**\n\nFor a decision tree model, a few more molecular descriptors were most likely needed rather than only Ki or pKi and SMILES, since I've now arrived at the step of planning other preprocessing steps. One way to do this could be through computations based on canonical SMILES of compounds by using RDKit, which would give the RDKit 2D descriptors. In this single tree model, I decided to stick with only RDKit 2D descriptors for now, before adding on fingerprints (as a side note: I have very lightly touched on generating fingerprints in this earlier post - [\"Molecular similarities in selected COVID-19 antivirals\"](https://jhylin.github.io/Data_in_life_blog/posts/07_Molecular_similarities_in_COVID-19_antivirals/Mol_sim_covid.html) in the subsection on \"Fingerprint generator\").\n\nAt this stage, a compound sanitisation step should also be applied to the compound column before starting any calculations to rule out compounds with questionable chemical validities. RDKit or Datamol (a Python wrapper library built based on RDKit) was also capable of doing this. \n\nI've added a quick step here to convert the data types of \"smiles\" and \"data_validity_comment\" columns to string (in case of running into problems later).\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\ndtree_df = dtree_df.astype({\"smiles\": \"string\", \"data_validity_comment\": \"string\"})\ndtree_df.dtypes\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\nmolecule_chembl_id        object\nKi                       float64\nunits                     object\ndata_validity_comment     string\nmax_phase                float64\nsmiles                    string\npKi                      float64\ndtype: object\n```\n:::\n:::\n\n\n<br>\n\n##### **Check data validity**\n\nAlso, before jumping straight to compound sanitisation, I needed to check the \"data_validity_comment\" column.\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\ndtree_df[\"data_validity_comment\"].unique()\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n<StringArray>\n['Potential transcription error', <NA>, 'Outside typical range']\nLength: 3, dtype: string\n```\n:::\n:::\n\n\nThere were 3 different types of data validity comments here, which were \"Potential transcription error\", \"NaN\"  and \"Outside typical range\". So, this meant compounds with comments as \"Potential transcription error\" and \"Outside typical range\" should be addressed first.\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\n# Find out number of compounds with \"outside typical range\" as data validity comment\ndtree_df_err = dtree_df[dtree_df[\"data_validity_comment\"] == \"Outside typical range\"]\nprint(dtree_df_err.shape)\ndtree_df_err.head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(58, 7)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>molecule_chembl_id</th>\n      <th>Ki</th>\n      <th>units</th>\n      <th>data_validity_comment</th>\n      <th>max_phase</th>\n      <th>smiles</th>\n      <th>pKi</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>111</th>\n      <td>CHEMBL225198</td>\n      <td>0.0090</td>\n      <td>nM</td>\n      <td>Outside typical range</td>\n      <td>NaN</td>\n      <td>O=C(CCc1c[nH]c2ccccc12)NCCCCCCCNc1c2c(nc3cc(Cl...</td>\n      <td>11.045757</td>\n    </tr>\n    <tr>\n      <th>114</th>\n      <td>CHEMBL225021</td>\n      <td>0.0017</td>\n      <td>nM</td>\n      <td>Outside typical range</td>\n      <td>NaN</td>\n      <td>O=C(CCCc1c[nH]c2ccccc12)NCCCCCNc1c2c(nc3cc(Cl)...</td>\n      <td>11.769551</td>\n    </tr>\n    <tr>\n      <th>118</th>\n      <td>CHEMBL402976</td>\n      <td>313700.0000</td>\n      <td>nM</td>\n      <td>Outside typical range</td>\n      <td>NaN</td>\n      <td>CN(C)CCOC(=O)Nc1ccncc1</td>\n      <td>3.503485</td>\n    </tr>\n    <tr>\n      <th>119</th>\n      <td>CHEMBL537454</td>\n      <td>140200.0000</td>\n      <td>nM</td>\n      <td>Outside typical range</td>\n      <td>NaN</td>\n      <td>CN(C)CCOC(=O)Nc1cc(Cl)nc(Cl)c1.Cl</td>\n      <td>3.853252</td>\n    </tr>\n    <tr>\n      <th>120</th>\n      <td>CHEMBL3216883</td>\n      <td>316400.0000</td>\n      <td>nM</td>\n      <td>Outside typical range</td>\n      <td>NaN</td>\n      <td>CN(C)CCOC(=O)Nc1ccncc1Br.Cl.Cl</td>\n      <td>3.499764</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nThere were a total of 58 compounds with Ki outside typical range. \n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\ndtree_df_err2 = dtree_df[dtree_df[\"data_validity_comment\"] == \"Potential transcription error\"]\ndtree_df_err2\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>molecule_chembl_id</th>\n      <th>Ki</th>\n      <th>units</th>\n      <th>data_validity_comment</th>\n      <th>max_phase</th>\n      <th>smiles</th>\n      <th>pKi</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CHEMBL11805</td>\n      <td>0.104</td>\n      <td>nM</td>\n      <td>Potential transcription error</td>\n      <td>NaN</td>\n      <td>COc1ccccc1CN(C)CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)...</td>\n      <td>9.982967</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nWith the other comment for potential transciption error, there seemed to be only one compound here.\n\nThese compounds with questionable Ki values were removed, as they could be potential sources of errors in ML models later on (error trickling effect). One of the ways to filter out data was to fill the empty cells within the \"data_validity_comment\" column first, so those ones to be kept could be selected.\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\n# Fill \"NaN\" entries with an actual name e.g. none\ndtree_df[\"data_validity_comment\"].fillna(\"none\", inplace=True)\ndtree_df.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>molecule_chembl_id</th>\n      <th>Ki</th>\n      <th>units</th>\n      <th>data_validity_comment</th>\n      <th>max_phase</th>\n      <th>smiles</th>\n      <th>pKi</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CHEMBL11805</td>\n      <td>0.104</td>\n      <td>nM</td>\n      <td>Potential transcription error</td>\n      <td>NaN</td>\n      <td>COc1ccccc1CN(C)CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)...</td>\n      <td>9.982967</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CHEMBL60745</td>\n      <td>1.630</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>NaN</td>\n      <td>CC[N+](C)(C)c1cccc(O)c1.[Br-]</td>\n      <td>8.787812</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CHEMBL208599</td>\n      <td>0.026</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>NaN</td>\n      <td>CCC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3[C@@H](C1)C2</td>\n      <td>10.585027</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>CHEMBL95</td>\n      <td>151.000</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>4.0</td>\n      <td>Nc1c2c(nc3ccccc13)CCCC2</td>\n      <td>6.821023</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>CHEMBL173309</td>\n      <td>12.200</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>NaN</td>\n      <td>CCN(CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)CCCCCN(CC)C...</td>\n      <td>7.913640</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nFiltered out only the compounds with nil data validity comments.\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\n#dtree_df[\"data_validity_comment\"].unique()\ndtree_df = dtree_df[dtree_df[\"data_validity_comment\"] == \"none\"]\n```\n:::\n\n\nChecking the dtree_df dataframe again and also whether if only the compounds with \"none\" labelled for \"data_validity_comment\" column were kept.\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nprint(dtree_df.shape)\ndtree_df[\"data_validity_comment\"].unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(481, 7)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\n<StringArray>\n['none']\nLength: 1, dtype: string\n```\n:::\n:::\n\n\n<br>\n\n##### **Sanitise compounds**\n\nThis [preprocessing molecules tutorial](https://docs.datamol.io/stable/tutorials/Preprocessing.html) and reference links provided by Datamol were very informative, and the preprocess function code by Datamol was used below. Each step of fix_mol(), sanitize_mol() and standardize_mol() was explained in this tutorial. I think the key was to select preprocessing options required to fit the purpose of the ML models, and the more experiences in doing this, the more likely it will help with the preprocessing step.\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\n# _preprocess function to sanitise compounds - adapted from datamol.io\n\nsmiles_column = \"smiles\"\n\ndm.disable_rdkit_log()\n\ndef _preprocess(row):\n    # Convert each compound to a RDKit molecule in the smiles column\n    mol = dm.to_mol(row[smiles_column], ordered=True)\n    # Fix common errors in the molecules\n    mol = dm.fix_mol(mol)\n    # Sanitise the molecules \n    mol = dm.sanitize_mol(mol, sanifix=True, charge_neutral=False)\n    # Standardise the molecules\n    mol = dm.standardize_mol(\n        mol,\n        # Switch on to disconnect metal ions\n        disconnect_metals=True,\n        normalize=True,\n        reionize=True,\n        # Switch on \"uncharge\" to neutralise charges\n        uncharge=True,\n        # Taking care of stereochemistries of compounds\n        stereo=True,\n    )\n\n    # Added a new column below for RDKit molecules\n    row[\"rdkit_mol\"] = dm.to_mol(mol)\n    row[\"standard_smiles\"] = dm.standardize_smiles(dm.to_smiles(mol))\n    row[\"selfies\"] = dm.to_selfies(mol)\n    row[\"inchi\"] = dm.to_inchi(mol)\n    row[\"inchikey\"] = dm.to_inchikey(mol)\n    return row\n```\n:::\n\n\nThen the compound sanitisation function was applied to the dtree_df.\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\ndtree_san_df = dtree_df.apply(_preprocess, axis = 1)\ndtree_san_df.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>molecule_chembl_id</th>\n      <th>Ki</th>\n      <th>units</th>\n      <th>data_validity_comment</th>\n      <th>max_phase</th>\n      <th>smiles</th>\n      <th>pKi</th>\n      <th>rdkit_mol</th>\n      <th>standard_smiles</th>\n      <th>selfies</th>\n      <th>inchi</th>\n      <th>inchikey</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>CHEMBL60745</td>\n      <td>1.630</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>NaN</td>\n      <td>CC[N+](C)(C)c1cccc(O)c1.[Br-]</td>\n      <td>8.787812</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x1217d67a0&gt;</td>\n      <td>CC[N+](C)(C)c1cccc(O)c1.[Br-]</td>\n      <td>[C][C][N+1][Branch1][C][C][Branch1][C][C][C][=...</td>\n      <td>InChI=1S/C10H15NO.BrH/c1-4-11(2,3)9-6-5-7-10(1...</td>\n      <td>CAEPIUXAUPYIIJ-UHFFFAOYSA-N</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CHEMBL208599</td>\n      <td>0.026</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>NaN</td>\n      <td>CCC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3[C@@H](C1)C2</td>\n      <td>10.585027</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x1217d6960&gt;</td>\n      <td>CCC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3[C@@H](C1)C2</td>\n      <td>[C][C][C][=C][C][C][C][=N][C][=C][C][Branch1][...</td>\n      <td>InChI=1S/C18H19ClN2/c1-2-10-5-11-7-12(6-10)17-...</td>\n      <td>QTPHSDHUHXUYFE-KIYNQFGBSA-N</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>CHEMBL95</td>\n      <td>151.000</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>4.0</td>\n      <td>Nc1c2c(nc3ccccc13)CCCC2</td>\n      <td>6.821023</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x1217d6650&gt;</td>\n      <td>Nc1c2c(nc3ccccc13)CCCC2</td>\n      <td>[N][C][=C][C][=Branch1][N][=N][C][=C][C][=C][C...</td>\n      <td>InChI=1S/C13H14N2/c14-13-9-5-1-3-7-11(9)15-12-...</td>\n      <td>YLJREFDVOIBQDA-UHFFFAOYSA-N</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>CHEMBL173309</td>\n      <td>12.200</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>NaN</td>\n      <td>CCN(CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)CCCCCN(CC)C...</td>\n      <td>7.913640</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x1217d6260&gt;</td>\n      <td>CCN(CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)CCCCCN(CC)C...</td>\n      <td>[C][C][N][Branch2][Branch1][Ring1][C][C][C][C]...</td>\n      <td>InChI=1S/C42H70N4O4/c1-7-45(35-37-25-17-19-27-...</td>\n      <td>VJXLWYGKZGTXAF-UHFFFAOYSA-N</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>CHEMBL1128</td>\n      <td>200.000</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>4.0</td>\n      <td>CC[N+](C)(C)c1cccc(O)c1.[Cl-]</td>\n      <td>6.698970</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x1217d69d0&gt;</td>\n      <td>CC[N+](C)(C)c1cccc(O)c1.[Cl-]</td>\n      <td>[C][C][N+1][Branch1][C][C][Branch1][C][C][C][=...</td>\n      <td>InChI=1S/C10H15NO.ClH/c1-4-11(2,3)9-6-5-7-10(1...</td>\n      <td>BXKDSDJJOVIHMX-UHFFFAOYSA-N</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nIf the dataset required for sanitisation is large, Datamol has suggested using their example code to add parallelisation as shown below.\n\n``` {{python}}\n# Code adapted from: https://docs.datamol.io/stable/tutorials/Preprocessing.html#references\ndata_clean = dm.parallelized(\n    _preprocess, \n    data.iterrows(), \n    arg_type=\"args\", \n    progress=True, \n    total=len(data)\n    )\ndata_clean = pd.DataFrame(data_clean)\n```\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\ndtree_san_df.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\n(481, 12)\n```\n:::\n:::\n\n\nIn this case, I tried using the preprocessing function without adding parallelisation, the whole process wasn't very long (since I had a small dataset), and was done within a minute or so.\n\nAlso, as a sanity check on the sanitised compounds in dtree_san_df, I just wanted to see if I could display all compounds in this dataframe as 2D images. I also had a look through each page just to see if there were any odd bonds or anything strange in general.\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\n# Create a list to store all cpds in dtree_san_df\nmol_list = dtree_san_df[\"rdkit_mol\"]\n# Convert to list\nmol_list = list(mol_list)\n# Check data type\ntype(mol_list)\n# Show 2D compound structures in grids\nmols2grid.display(mol_list)\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"application/vnd.jupyter.widget-view+json\">\n{\"model_id\":\"890a180f35d34813ae730810328a6072\",\"version_major\":2,\"version_minor\":0}\n</script>\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=19}\n```{=html}\n<iframe class=\"mols2grid-iframe\" frameborder=\"0\" width=\"100%\"\n\nheight=\"200\"\n\n\nallow=\"clipboard-write\"\n\nsrcdoc=\"&lt;html&gt;\n  &lt;meta charset=&quot;utf-8&quot;&gt;\n  &lt;head&gt;\n    &lt;style&gt;\n    #mols2grid.gridcontainer {\n    display: block;\n    padding-left: 1em;\n    max-width: 820px;\n    width: 820px;\n}\n#mols2grid .cell {\n    border: 1px solid #cccccc;\n    text-align: center;\n    vertical-align: top;\n    max-width: 160px;\n    width: 160px;\n    font-family: &#x27;DejaVu&#x27;, sans-serif;\n    font-size: 12pt;\n    padding: 0;\n    margin: 0px;\n    float: left;\n}\n#mols2grid .cell:hover {\n    background-color: #e7e7e7 !important;\n}\n#mols2grid .cell .data-img {\n    padding: 0;\n    margin: 0;\n}\n#mols2grid .cell img, #mols2grid .cell svg {\n    max-width: 100%;\n    height: auto;\n    padding: 0;\n}\n#mols2grid .data {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    display: block;\n}\n#mols2grid .arrow-asc:after {\n    content: &#x27;↑&#x27;;\n    text-align: right;\n    float:right;\n}\n#mols2grid .arrow-desc:after {\n    content: &#x27;↓&#x27;;\n    text-align: right;\n    float:right;\n}\n    /* custom CSS */\n    \n    &lt;/style&gt;\n    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/list.js/2.3.1/list.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot; integrity=&quot;sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;\n&lt;script&gt;\n    function fit_height(obj) {\n        obj.style.height = 0;\n        var height = obj.contentDocument.body.scrollHeight + 18 + &#x27;px&#x27;;\n        obj.style.height = height;\n    }\n&lt;/script&gt;\n&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css&quot; integrity=&quot;sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l&quot; crossorigin=&quot;anonymous&quot;&gt;\n&lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js&quot; integrity=&quot;sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://unpkg.com/@rdkit/rdkit@2022.3.1/Code/MinimalLib/dist/RDKit_minimal.js&quot;&gt;&lt;/script&gt;\n    &lt;!-- custom header --&gt;\n    \n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=&quot;mols2grid&quot; class=&quot;gridcontainer grid-default&quot;&gt;\n      &lt;div class=&quot;row mb-3&quot;&gt;\n        &lt;div class=&quot;list&quot;&gt;&lt;div class=&quot;cell&quot; data-mols2grid-id=&quot;0&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;position-relative float-left cached_checkbox&quot;&gt;&lt;div class=&quot;data data-mols2grid-id-copy&quot;&gt;&lt;/div&gt;&lt;a tabindex=&quot;0&quot; class=&quot;data data-img mols2grid-tooltip&quot; data-toggle=&quot;popover&quot; data-content=&quot;.&quot;&gt;&lt;/a&gt;&lt;div class=&quot;data data-SMILES&quot; style=&quot;display: none;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n      &lt;/div&gt;\n      &lt;div class=&quot;d-inline&quot;&gt;\n        &lt;ul class=&quot;pagination float-left&quot;&gt;&lt;/ul&gt;\n        &lt;div id=&quot;controls&quot; class=&quot;d-flex flex-row float-right&quot;&gt;\n          \n          &lt;div id=&quot;chkbox-dropdown&quot; class=&quot;dropdown&quot;&gt;\n    &lt;button class=&quot;btn btn-light dropdown-toggle&quot; type=&quot;button&quot; id=&quot;chkboxDropdown&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;☑&lt;/button&gt;\n    &lt;div class=&quot;dropdown-menu&quot; aria-labelledby=&quot;checkboxDropdownMenu&quot;&gt;\n        &lt;button id=&quot;btn-chkbox-all&quot; class=&quot;dropdown-item&quot; type=&quot;button&quot;&gt;Check all&lt;/button&gt;\n        &lt;button id=&quot;btn-chkbox-match&quot; class=&quot;dropdown-item&quot; type=&quot;button&quot;&gt;Check matching&lt;/button&gt;\n        &lt;button id=&quot;btn-chkbox-none&quot; class=&quot;dropdown-item&quot; type=&quot;button&quot;&gt;Uncheck all&lt;/button&gt;\n        &lt;button id=&quot;btn-chkbox-invert&quot; class=&quot;dropdown-item&quot; type=&quot;button&quot;&gt;Invert&lt;/button&gt;\n        &lt;div class=&quot;dropdown-divider&quot;&gt;&lt;/div&gt;\n        &lt;button id=&quot;btn-chkbox-copy&quot; class=&quot;dropdown-item&quot; type=&quot;button&quot;&gt;Copy to clipboard&lt;/button&gt;\n        &lt;button id=&quot;btn-chkbox-dlsmi&quot; class=&quot;dropdown-item&quot; type=&quot;button&quot;&gt;Save SMILES&lt;/button&gt;\n        &lt;button id=&quot;btn-chkbox-dlcsv&quot; class=&quot;dropdown-item&quot; type=&quot;button&quot;&gt;Save CSV&lt;/button&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n          \n          &lt;div id=&quot;sort-dropdown&quot; class=&quot;dropdown pl-2&quot;&gt;\n            &lt;button class=&quot;btn btn-light dropdown-toggle&quot; type=&quot;button&quot; id=&quot;sortDropdown&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;\n              Sort by\n            &lt;/button&gt;\n            &lt;div class=&quot;dropdown-menu&quot; aria-labelledby=&quot;sortDropdownMenu&quot;&gt;\n              \n              \n              \n              \n              \n              &lt;button class=&quot;dropdown-item sort-btn arrow-asc active&quot; type=&quot;button&quot; data-name=&quot;mols2grid-id&quot;&gt;Index&lt;/button&gt;\n              \n              \n              \n              \n              \n              &lt;button class=&quot;dropdown-item sort-btn arrow-asc active&quot; type=&quot;button&quot; data-name=&quot;data-mols2grid-id&quot;&gt;mols2grid-id&lt;/button&gt;\n              \n              \n              \n              \n              \n              &lt;button class=&quot;dropdown-item sort-btn &quot; type=&quot;button&quot; data-name=&quot;data-SMILES&quot;&gt;SMILES&lt;/button&gt;\n              \n              \n              \n              &lt;button class=&quot;dropdown-item sort-btn&quot; type=&quot;button&quot; data-name=&quot;checkbox&quot;&gt;Selected&lt;/button&gt;\n              \n            &lt;/div&gt;\n          &lt;/div&gt;\n          &lt;div class=&quot;input-group row pl-4&quot;&gt;\n            &lt;input type=&quot;text&quot; id=&quot;searchbar&quot; class=&quot;form-control&quot; placeholder=&quot;Search&quot; aria-label=&quot;Search&quot; aria-describedby=&quot;basic-addon1&quot;&gt;\n            &lt;div class=&quot;input-group-append&quot;&gt;\n              &lt;button id=&quot;searchBtn&quot; class=&quot;btn btn-light dropdown-toggle&quot; type=&quot;button&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;🔎&lt;/button&gt;\n              &lt;div class=&quot;dropdown-menu dropdown-menu-right&quot;&gt;\n                &lt;button id=&quot;txtSearch&quot; class=&quot;search-btn dropdown-item active&quot;&gt;Text&lt;/button&gt;\n                &lt;button id=&quot;smartsSearch&quot; class=&quot;search-btn dropdown-item&quot;&gt;SMARTS&lt;/button&gt;\n              &lt;/div&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;script&gt;\n    // list.js\nvar listObj = new List(&#x27;mols2grid&#x27;, {\n    valueNames: [{data: [&#x27;mols2grid-id&#x27;]}, &#x27;data-mols2grid-id&#x27;, &#x27;data-SMILES&#x27;, &#x27;data-img&#x27;, &#x27;data-mols2grid-id-copy&#x27;, {attr: &#x27;data-content&#x27;, name: &#x27;mols2grid-tooltip&#x27;}],\n    item: &#x27;&lt;div class=&quot;cell&quot; data-mols2grid-id=&quot;0&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;position-relative float-left cached_checkbox&quot;&gt;&lt;div class=&quot;data data-mols2grid-id-copy&quot;&gt;&lt;/div&gt;&lt;a tabindex=&quot;0&quot; class=&quot;data data-img mols2grid-tooltip&quot; data-toggle=&quot;popover&quot; data-content=&quot;.&quot;&gt;&lt;/a&gt;&lt;div class=&quot;data data-SMILES&quot; style=&quot;display: none;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;,\n    page: 15,\n    pagination: {\n        name: &quot;pagination&quot;,\n        item: &#x27;&lt;li class=&quot;page-item&quot;&gt;&lt;a class=&quot;page page-link&quot; href=&quot;#&quot; onclick=&quot;event.preventDefault()&quot;&gt;&lt;/a&gt;&lt;/li&gt;&#x27;,\n        innerWindow: 1,\n        outerWindow: 1,\n    },\n});\nlistObj.remove(&quot;mols2grid-id&quot;, &quot;0&quot;);\nlistObj.add([{&quot;mols2grid-id&quot;: 0, &quot;data-SMILES&quot;: &quot;CC[N+](C)(C)c1cccc(O)c1.[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 0, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC[N+](C)(C)c1cccc(O)c1.[Br-]&quot;}, {&quot;mols2grid-id&quot;: 1, &quot;data-SMILES&quot;: &quot;CCC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3[C@@H](C1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 1, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3[C@@H](C1)C2&quot;}, {&quot;mols2grid-id&quot;: 2, &quot;data-SMILES&quot;: &quot;Nc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 2, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Nc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 3, &quot;data-SMILES&quot;: &quot;CCN(CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)CCCCCN(CC)Cc1ccccc1OC)Cc1ccccc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 3, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)CCCCCN(CC)Cc1ccccc1OC)Cc1ccccc1OC&quot;}, {&quot;mols2grid-id&quot;: 4, &quot;data-SMILES&quot;: &quot;CC[N+](C)(C)c1cccc(O)c1.[Cl-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 4, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC[N+](C)(C)c1cccc(O)c1.[Cl-]&quot;}, {&quot;mols2grid-id&quot;: 5, &quot;data-SMILES&quot;: &quot;CCCCCCCSC(=O)OCC[N+](C)(C)C.[Cl-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 5, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCCCCSC(=O)OCC[N+](C)(C)C.[Cl-]&quot;}, {&quot;mols2grid-id&quot;: 6, &quot;data-SMILES&quot;: &quot;CCN(CC)CCNC(=O)c1ccc(N)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 6, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CC)CCNC(=O)c1ccc(N)cc1&quot;}, {&quot;mols2grid-id&quot;: 7, &quot;data-SMILES&quot;: &quot;CCCCCSC(=O)OCC[N+](C)(C)C.[Cl-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 7, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCCSC(=O)OCC[N+](C)(C)C.[Cl-]&quot;}, {&quot;mols2grid-id&quot;: 8, &quot;data-SMILES&quot;: &quot;COc1cc2cc(-c3ccc(CN(C)Cc4ccccc4)cc3)c(=O)oc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 8, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(-c3ccc(CN(C)Cc4ccccc4)cc3)c(=O)oc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 9, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(CC1CCN(Cc3ccccc3)CC1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 9, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(CC1CCN(Cc3ccccc3)CC1)C2&quot;}, {&quot;mols2grid-id&quot;: 10, &quot;data-SMILES&quot;: &quot;CC[N+](C)(CC)CCC[n+]1c(-c2ccccc2)c2cc(N)ccc2c2ccc(N)cc21.[I-].[I-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 10, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC[N+](C)(CC)CCC[n+]1c(-c2ccccc2)c2cc(N)ccc2c2ccc(N)cc21.[I-].[I-]&quot;}, {&quot;mols2grid-id&quot;: 11, &quot;data-SMILES&quot;: &quot;Nc1ccc2c(c1)c(-c1ccccc1)[n+](CCCNCCCNCCCNc1c3c(nc4ccccc14)CCCC3)c1cc(N)ccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 11, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Nc1ccc2c(c1)c(-c1ccccc1)[n+](CCCNCCCNCCCNc1c3c(nc4ccccc14)CCCC3)c1cc(N)ccc21&quot;}, {&quot;mols2grid-id&quot;: 12, &quot;data-SMILES&quot;: &quot;COc1ccccc1CN(C)CCCN(C)CCCNCCC[n+]1c(-c2ccccc2)c2cc(N)ccc2c2ccc(N)cc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 12, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccccc1CN(C)CCCN(C)CCCNCCC[n+]1c(-c2ccccc2)c2cc(N)ccc2c2ccc(N)cc21&quot;}, {&quot;mols2grid-id&quot;: 13, &quot;data-SMILES&quot;: &quot;COc1ccc(-c2cc3c(c(=O)o2)C[C@@]2(O)[C@@]4(C)CCC(=O)OC(C)(C)[C@@]4(O)CC[C@@]2(C)O3)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 13, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc(-c2cc3c(c(=O)o2)C[C@@]2(O)[C@@]4(C)CCC(=O)OC(C)(C)[C@@]4(O)CC[C@@]2(C)O3)cc1&quot;}, {&quot;mols2grid-id&quot;: 14, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCO&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 14, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCO&quot;}, {&quot;mols2grid-id&quot;: 15, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCCCCO&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 15, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCCCCO&quot;}, {&quot;mols2grid-id&quot;: 16, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCCCCCCCO&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 16, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCCCCCCCO&quot;}, {&quot;mols2grid-id&quot;: 17, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCCCCCCCCCO&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 17, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCCCCCCCCCO&quot;}, {&quot;mols2grid-id&quot;: 18, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCCCCCCCCCCCO&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 18, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCCCCCCCCCCCO&quot;}, {&quot;mols2grid-id&quot;: 19, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCCCCCCCCCCCCCO&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 19, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCCCCCCCCCCCCCO&quot;}, {&quot;mols2grid-id&quot;: 20, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCCCCCCCCCCCCCCCO&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 20, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCCCCCCCCCCCCCCCO&quot;}, {&quot;mols2grid-id&quot;: 21, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCOC(=O)NCCCC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 21, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCOC(=O)NCCCC&quot;}, {&quot;mols2grid-id&quot;: 22, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCCCCOC(=O)NCCCC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 22, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCCCCOC(=O)NCCCC&quot;}, {&quot;mols2grid-id&quot;: 23, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCCCCCCCOC(=O)NCCCC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 23, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCCCCCCCOC(=O)NCCCC&quot;}, {&quot;mols2grid-id&quot;: 24, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCCCCCCCCCOC(=O)NCCCC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 24, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCCCCCCCCCOC(=O)NCCCC&quot;}, {&quot;mols2grid-id&quot;: 25, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCCCCCCCCCCCOC(=O)NCCCC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 25, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCCCCCCCCCCCOC(=O)NCCCC&quot;}, {&quot;mols2grid-id&quot;: 26, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCCCCCCCCCCCCCOC(=O)NCCCC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 26, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCCCCCCCCCCCCCOC(=O)NCCCC&quot;}, {&quot;mols2grid-id&quot;: 27, &quot;data-SMILES&quot;: &quot;CCCCNC(=O)OCCCCCCCCCCCCCCCCOC(=O)NCCCC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 27, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCNC(=O)OCCCCCCCCCCCCCCCCOC(=O)NCCCC&quot;}, {&quot;mols2grid-id&quot;: 28, &quot;data-SMILES&quot;: &quot;c1ccc(CN2CCC(CCc3noc4ccccc34)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 28, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc(CN2CCC(CCc3noc4ccccc34)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 29, &quot;data-SMILES&quot;: &quot;Cc1ccc2onc(CCC3CCN(Cc4ccccc4)CC3)c2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 29, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc2onc(CCC3CCN(Cc4ccccc4)CC3)c2c1&quot;}, {&quot;mols2grid-id&quot;: 30, &quot;data-SMILES&quot;: &quot;COc1cc2onc(CCC3CCN(Cc4ccccc4)CC3)c2cc1C&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 30, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2onc(CCC3CCN(Cc4ccccc4)CC3)c2cc1C&quot;}, {&quot;mols2grid-id&quot;: 31, &quot;data-SMILES&quot;: &quot;COc1ccc2onc(CCC3CCN(Cc4ccccc4)CC3)c2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 31, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2onc(CCC3CCN(Cc4ccccc4)CC3)c2c1&quot;}, {&quot;mols2grid-id&quot;: 32, &quot;data-SMILES&quot;: &quot;COc1cccc2c(CCC3CCN(Cc4ccccc4)CC3)noc12&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 32, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cccc2c(CCC3CCN(Cc4ccccc4)CC3)noc12&quot;}, {&quot;mols2grid-id&quot;: 33, &quot;data-SMILES&quot;: &quot;CC(=O)Nc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 33, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)Nc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;}, {&quot;mols2grid-id&quot;: 34, &quot;data-SMILES&quot;: &quot;O=S(=O)(Nc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1)c1ccccc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 34, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=S(=O)(Nc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1)c1ccccc1&quot;}, {&quot;mols2grid-id&quot;: 35, &quot;data-SMILES&quot;: &quot;c1ccc(CN2CCC(CCc3noc4cc(N5CCOCC5)ccc34)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 35, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc(CN2CCC(CCc3noc4cc(N5CCOCC5)ccc34)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 36, &quot;data-SMILES&quot;: &quot;Nc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 36, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Nc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;}, {&quot;mols2grid-id&quot;: 37, &quot;data-SMILES&quot;: &quot;Brc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 37, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Brc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;}, {&quot;mols2grid-id&quot;: 38, &quot;data-SMILES&quot;: &quot;N#Cc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 38, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: N#Cc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;}, {&quot;mols2grid-id&quot;: 39, &quot;data-SMILES&quot;: &quot;NC(=O)c1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 39, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;}, {&quot;mols2grid-id&quot;: 40, &quot;data-SMILES&quot;: &quot;c1ccc(CN2CCC(CCCc3noc4ccccc34)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 40, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc(CN2CCC(CCCc3noc4ccccc34)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 41, &quot;data-SMILES&quot;: &quot;c1ccc(CN2CCC(COc3noc4ccccc34)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 41, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc(CN2CCC(COc3noc4ccccc34)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 42, &quot;data-SMILES&quot;: &quot;c1ccc(CN2CCC(CNc3noc4ccccc34)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 42, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc(CN2CCC(CNc3noc4ccccc34)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 43, &quot;data-SMILES&quot;: &quot;c1ccc(CN2CCC(CCc3nsc4ccccc34)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 43, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc(CN2CCC(CCc3nsc4ccccc34)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 44, &quot;data-SMILES&quot;: &quot;c1ccc(CN2CCC(CCc3nccc4ccccc34)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 44, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc(CN2CCC(CCc3nccc4ccccc34)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 45, &quot;data-SMILES&quot;: &quot;c1ccc(CN2CCC(CCc3n[nH]c4ccccc34)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 45, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc(CN2CCC(CCc3n[nH]c4ccccc34)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 46, &quot;data-SMILES&quot;: &quot;O=C1CCc2cc3c(CCC4CCN(Cc5ccccc5)CC4)noc3cc2N1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 46, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1CCc2cc3c(CCC4CCN(Cc5ccccc5)CC4)noc3cc2N1&quot;}, {&quot;mols2grid-id&quot;: 47, &quot;data-SMILES&quot;: &quot;O=C1Cc2cc3onc(CCC4CCN(Cc5ccccc5)CC4)c3cc2N1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 47, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1Cc2cc3onc(CCC4CCN(Cc5ccccc5)CC4)c3cc2N1&quot;}, {&quot;mols2grid-id&quot;: 48, &quot;data-SMILES&quot;: &quot;CN1C(=O)Cc2cc3onc(CCC4CCN(Cc5ccccc5)CC4)c3cc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 48, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN1C(=O)Cc2cc3onc(CCC4CCN(Cc5ccccc5)CC4)c3cc21&quot;}, {&quot;mols2grid-id&quot;: 49, &quot;data-SMILES&quot;: &quot;O=C1Cc2c(ccc3c(CCC4CCN(Cc5ccccc5)CC4)noc23)N1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 49, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1Cc2c(ccc3c(CCC4CCN(Cc5ccccc5)CC4)noc23)N1&quot;}, {&quot;mols2grid-id&quot;: 50, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(C1CC[N+](C)(Cc3ccccc3)CC1)=C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 50, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(C1CC[N+](C)(Cc3ccccc3)CC1)=C2&quot;}, {&quot;mols2grid-id&quot;: 51, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)C3CCC[N+](C)(Cc4ccccc4)CC3)sc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 51, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)C3CCC[N+](C)(Cc4ccccc4)CC3)sc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 52, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)C3CC[N+](C)(Cc4ccccc4)CCC3O)sc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 52, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)C3CC[N+](C)(Cc4ccccc4)CCC3O)sc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 53, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)CC3CCC(O)C[N+](C)(Cc4ccccc4)CC3)sc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 53, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)CC3CCC(O)C[N+](C)(Cc4ccccc4)CC3)sc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 54, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)CC3CCCC[N+](C)(Cc4ccccc4)CC3)sc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 54, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)CC3CCCC[N+](C)(Cc4ccccc4)CC3)sc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 55, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)C3CC[N+](C)(Cc4ccccc4)CCC3OC)sc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 55, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)C3CC[N+](C)(Cc4ccccc4)CCC3OC)sc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 56, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)C3=CC[N+](C)(Cc4ccccc4)CC3)sc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 56, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)C3=CC[N+](C)(Cc4ccccc4)CC3)sc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 57, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C3CC[N+](C)(Cc4ccccc4)CC3O)sc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 57, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C3CC[N+](C)(Cc4ccccc4)CC3O)sc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 58, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C3=CC[N+](C)(Cc4ccccc4)CC3)sc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 58, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C3=CC[N+](C)(Cc4ccccc4)CC3)sc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 59, &quot;data-SMILES&quot;: &quot;COCC[N+]1(C)CCCC(C(=O)c2cc3cc(OC)c(OC)cc3s2)CC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 59, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COCC[N+]1(C)CCCC(C(=O)c2cc3cc(OC)c(OC)cc3s2)CC1&quot;}, {&quot;mols2grid-id&quot;: 60, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)C3CCC[N+](C)(Cc4ccc([N+](=O)[O-])o4)CC3)sc2cc1OC.I&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 60, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)C3CCC[N+](C)(Cc4ccc([N+](=O)[O-])o4)CC3)sc2cc1OC.I&quot;}, {&quot;mols2grid-id&quot;: 61, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)C3CCC[N+](C)(CC4CCCCO4)CC3)sc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 61, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)C3CCC[N+](C)(CC4CCCCO4)CC3)sc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 62, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)C3CCC[N+](C)(CC(=O)OC(C)(C)C)CC3)sc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 62, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)C3CCC[N+](C)(CC(=O)OC(C)(C)C)CC3)sc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 63, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)C3CCC[N+](C)(CCOc4ccccc4)CC3)sc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 63, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)C3CCC[N+](C)(CCOc4ccccc4)CC3)sc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 64, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)C3CCC[N+](C)(CC#N)CC3)sc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 64, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)C3CCC[N+](C)(CC#N)CC3)sc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 65, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](C)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 65, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](C)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 66, &quot;data-SMILES&quot;: &quot;CC[n+]1ccc(CCC(=O)C2Cc3cc(OC)c(OC)cc3S2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 66, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC[n+]1ccc(CCC(=O)C2Cc3cc(OC)c(OC)cc3S2)cc1&quot;}, {&quot;mols2grid-id&quot;: 67, &quot;data-SMILES&quot;: &quot;C=CC[n+]1ccc(CCC(=O)C2Cc3cc(OC)c(OC)cc3S2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 67, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C=CC[n+]1ccc(CCC(=O)C2Cc3cc(OC)c(OC)cc3S2)cc1&quot;}, {&quot;mols2grid-id&quot;: 68, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](CC3CC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 68, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](CC3CC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 69, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](CC3CCC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 69, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](CC3CCC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 70, &quot;data-SMILES&quot;: &quot;CCOCC[n+]1ccc(CCC(=O)C2Cc3cc(OC)c(OC)cc3S2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 70, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCOCC[n+]1ccc(CCC(=O)C2Cc3cc(OC)c(OC)cc3S2)cc1&quot;}, {&quot;mols2grid-id&quot;: 71, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](Cc3ccc(F)cc3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 71, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](Cc3ccc(F)cc3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 72, &quot;data-SMILES&quot;: &quot;COC(=O)c1ccc(C[n+]2ccc(CCC(=O)C3Cc4cc(OC)c(OC)cc4S3)cc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 72, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COC(=O)c1ccc(C[n+]2ccc(CCC(=O)C3Cc4cc(OC)c(OC)cc4S3)cc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 73, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](Cc3ccsc3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 73, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](Cc3ccsc3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 74, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](Cc3coc([N+](=O)[O-])c3)cc1)C2.I&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 74, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](Cc3coc([N+](=O)[O-])c3)cc1)C2.I&quot;}, {&quot;mols2grid-id&quot;: 75, &quot;data-SMILES&quot;: &quot;C[N+]1(Cc2ccccc2)CCC(CCC(=O)c2ccc3c(c2)OCCO3)CC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 75, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C[N+]1(Cc2ccccc2)CCC(CCC(=O)c2ccc3c(c2)OCCO3)CC1&quot;}, {&quot;mols2grid-id&quot;: 76, &quot;data-SMILES&quot;: &quot;C[N+]1(Cc2ccccc2)CCC(CCC(=O)c2ccc3c(c2)OCO3)CC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 76, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C[N+]1(Cc2ccccc2)CCC(CCC(=O)c2ccc3c(c2)OCO3)CC1&quot;}, {&quot;mols2grid-id&quot;: 77, &quot;data-SMILES&quot;: &quot;C[N+]1(Cc2ccccc2)CCC(CCC(=O)c2ccc3c(c2)CCCCO3)CC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 77, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C[N+]1(Cc2ccccc2)CCC(CCC(=O)c2ccc3c(c2)CCCCO3)CC1&quot;}, {&quot;mols2grid-id&quot;: 78, &quot;data-SMILES&quot;: &quot;COc1ccc2cc(C(=O)CCC3CC[N+](C)(Cc4ccccc4)CC3)ccc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 78, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2cc(C(=O)CCC3CC[N+](C)(Cc4ccccc4)CC3)ccc2c1&quot;}, {&quot;mols2grid-id&quot;: 79, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)CCC3CC[N+](C)(Cc4ccccc4)CC3)n(C)c2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 79, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)CCC3CC[N+](C)(Cc4ccccc4)CC3)n(C)c2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 80, &quot;data-SMILES&quot;: &quot;Cc1cc(C(=O)CCC2CC[N+](C)(Cc3ccccc3)CC2)nn1-c1ccccc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 80, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1cc(C(=O)CCC2CC[N+](C)(Cc3ccccc3)CC2)nn1-c1ccccc1&quot;}, {&quot;mols2grid-id&quot;: 81, &quot;data-SMILES&quot;: &quot;COc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 81, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;}, {&quot;mols2grid-id&quot;: 82, &quot;data-SMILES&quot;: &quot;O=C(Nc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1)c1ccccc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 82, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(Nc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1)c1ccccc1&quot;}, {&quot;mols2grid-id&quot;: 83, &quot;data-SMILES&quot;: &quot;Oc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 83, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Oc1ccc2c(CCC3CCN(Cc4ccccc4)CC3)noc2c1&quot;}, {&quot;mols2grid-id&quot;: 84, &quot;data-SMILES&quot;: &quot;c1ccc(CN2CCC(CCNc3noc4ccccc34)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 84, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc(CN2CCC(CCNc3noc4ccccc34)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 85, &quot;data-SMILES&quot;: &quot;C=[N+]1N=C(CCC2CCN(Cc3ccccc3)CC2)c2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 85, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C=[N+]1N=C(CCC2CCN(Cc3ccccc3)CC2)c2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 86, &quot;data-SMILES&quot;: &quot;O=C1Cc2cc3c(CCC4CCN(Cc5ccccc5)CC4)noc3cc2N1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 86, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1Cc2cc3c(CCC4CCN(Cc5ccccc5)CC4)noc3cc2N1&quot;}, {&quot;mols2grid-id&quot;: 87, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)SC(C(=O)CC(O)C1CC[N+](C)(Cc3ccccc3)CC1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 87, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)SC(C(=O)CC(O)C1CC[N+](C)(Cc3ccccc3)CC1)C2&quot;}, {&quot;mols2grid-id&quot;: 88, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)SC(C(=O)CC1(O)CC[N+](C)(Cc3ccccc3)CC1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 88, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)SC(C(=O)CC1(O)CC[N+](C)(Cc3ccccc3)CC1)C2&quot;}, {&quot;mols2grid-id&quot;: 89, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)SC(C(=O)CC1C=CC[N+](C)(Cc3ccccc3)CC1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 89, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)SC(C(=O)CC1C=CC[N+](C)(Cc3ccccc3)CC1)C2&quot;}, {&quot;mols2grid-id&quot;: 90, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)SC(CC1CC[N+](C)(Cc3ccccc3)CC1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 90, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)SC(CC1CC[N+](C)(Cc3ccccc3)CC1)C2&quot;}, {&quot;mols2grid-id&quot;: 91, &quot;data-SMILES&quot;: &quot;COC(=O)C[N+]1(C)CCC(CCC(=O)C2Cc3cc(OC)c(OC)cc3S2)CC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 91, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COC(=O)C[N+]1(C)CCC(CCC(=O)C2Cc3cc(OC)c(OC)cc3S2)CC1&quot;}, {&quot;mols2grid-id&quot;: 92, &quot;data-SMILES&quot;: &quot;CCC[n+]1ccc(CCC(=O)C2Cc3cc(OC)c(OC)cc3S2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 92, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCC[n+]1ccc(CCC(=O)C2Cc3cc(OC)c(OC)cc3S2)cc1&quot;}, {&quot;mols2grid-id&quot;: 93, &quot;data-SMILES&quot;: &quot;COCC[n+]1ccc(CCC(=O)C2Cc3cc(OC)c(OC)cc3S2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 93, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COCC[n+]1ccc(CCC(=O)C2Cc3cc(OC)c(OC)cc3S2)cc1&quot;}, {&quot;mols2grid-id&quot;: 94, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](Cc3ccccc3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 94, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)SC(C(=O)CCc1cc[n+](Cc3ccccc3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 95, &quot;data-SMILES&quot;: &quot;O=C(CCc1cc[n+](Cc2ccccc2)cc1)c1ccc2c(c1)OCO2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 95, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(CCc1cc[n+](Cc2ccccc2)cc1)c1ccc2c(c1)OCO2&quot;}, {&quot;mols2grid-id&quot;: 96, &quot;data-SMILES&quot;: &quot;O=C1C=CC(=O)C=C1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 96, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1C=CC(=O)C=C1&quot;}, {&quot;mols2grid-id&quot;: 97, &quot;data-SMILES&quot;: &quot;O=C1C(=O)C(Cl)=C(Cl)C(Cl)=C1Cl&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 97, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1C(=O)C(Cl)=C(Cl)C(Cl)=C1Cl&quot;}, {&quot;mols2grid-id&quot;: 98, &quot;data-SMILES&quot;: &quot;O=C1C(Cl)=C(Cl)C(=O)C(Cl)=C1Cl&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 98, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1C(Cl)=C(Cl)C(=O)C(Cl)=C1Cl&quot;}, {&quot;mols2grid-id&quot;: 99, &quot;data-SMILES&quot;: &quot;C/C=C1\\\\C2C=C(C)C[C@]1(N)CC(NCCCCCCCNc1c3c(nc4ccccc14)CCCC3)C2(C)C&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 99, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C/C=C1\\\\C2C=C(C)C[C@]1(N)CC(NCCCCCCCNc1c3c(nc4ccccc14)CCCC3)C2(C)C&quot;}, {&quot;mols2grid-id&quot;: 100, &quot;data-SMILES&quot;: &quot;C/C=C1\\\\[C@H]2C=C(C)C[C@@]1(N)c1ccc(=O)[nH]c1C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 100, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C/C=C1\\\\[C@H]2C=C(C)C[C@@]1(N)c1ccc(=O)[nH]c1C2&quot;}, {&quot;mols2grid-id&quot;: 101, &quot;data-SMILES&quot;: &quot;C/C=C1\\\\C2C=C(C)C[C@]1(C(=O)OC)CC(NCCCCCCCNc1c3c(nc4ccccc14)CCCC3)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 101, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C/C=C1\\\\C2C=C(C)C[C@]1(C(=O)OC)CC(NCCCCCCCNc1c3c(nc4ccccc14)CCCC3)C2&quot;}, {&quot;mols2grid-id&quot;: 102, &quot;data-SMILES&quot;: &quot;C/C=C1\\\\C2C=C(C)C[C@]1(N)CC(NCCCCCCCNc1c3c(nc4ccccc14)CCCC3)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 102, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C/C=C1\\\\C2C=C(C)C[C@]1(N)CC(NCCCCCCCNc1c3c(nc4ccccc14)CCCC3)C2&quot;}, {&quot;mols2grid-id&quot;: 103, &quot;data-SMILES&quot;: &quot;CC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3C(C1)C2.Cl&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 103, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3C(C1)C2.Cl&quot;}, {&quot;mols2grid-id&quot;: 104, &quot;data-SMILES&quot;: &quot;O=C1C(=O)N(Cc2ccc(Cl)c(Cl)c2)c2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 104, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1C(=O)N(Cc2ccc(Cl)c(Cl)c2)c2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 105, &quot;data-SMILES&quot;: &quot;O=C1C(=O)N(Cc2ccc(Cc3ccc(CN4C(=O)C(=O)c5ccccc54)cc3)cc2)c2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 105, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1C(=O)N(Cc2ccc(Cc3ccc(CN4C(=O)C(=O)c5ccccc54)cc3)cc2)c2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 106, &quot;data-SMILES&quot;: &quot;COc1ccccc1CN(C)CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)CCCCCN(C)Cc1ccccc1OC.O=C(O)C(=O)O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 106, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccccc1CN(C)CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)CCCCCN(C)Cc1ccccc1OC.O=C(O)C(=O)O&quot;}, {&quot;mols2grid-id&quot;: 107, &quot;data-SMILES&quot;: &quot;CCN(CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)CCCCCN(CC)Cc1ccccc1OC)Cc1ccccc1OC.O=C(O)C(=O)O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 107, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CCCCCC(=O)N(C)CCCCCCCCN(C)C(=O)CCCCCN(CC)Cc1ccccc1OC)Cc1ccccc1OC.O=C(O)C(=O)O&quot;}, {&quot;mols2grid-id&quot;: 108, &quot;data-SMILES&quot;: &quot;CCN(CCCCCC(=O)N1CCC(C2CCN(C(=O)CCCCCN(CC)Cc3ccccc3OC)CC2)CC1)Cc1ccccc1OC.O=C(O)C(=O)O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 108, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CCCCCC(=O)N1CCC(C2CCN(C(=O)CCCCCN(CC)Cc3ccccc3OC)CC2)CC1)Cc1ccccc1OC.O=C(O)C(=O)O&quot;}, {&quot;mols2grid-id&quot;: 109, &quot;data-SMILES&quot;: &quot;O=C(CCc1c[nH]c2ccccc12)NCCCCCCNc1c2c(nc3cc(Cl)ccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 109, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(CCc1c[nH]c2ccccc12)NCCCCCCNc1c2c(nc3cc(Cl)ccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 110, &quot;data-SMILES&quot;: &quot;O=C(Cc1c[nH]c2ccccc12)NCCCCCCCNc1c2c(nc3cc(Cl)ccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 110, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(Cc1c[nH]c2ccccc12)NCCCCCCCNc1c2c(nc3cc(Cl)ccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 111, &quot;data-SMILES&quot;: &quot;O=C(Cc1c[nH]c2ccc(Br)cc12)NCCCCCCCNc1c2c(nc3cc(Cl)ccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 111, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(Cc1c[nH]c2ccc(Br)cc12)NCCCCCCCNc1c2c(nc3cc(Cl)ccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 112, &quot;data-SMILES&quot;: &quot;O=C1C(=O)c2cc([N+](=O)[O-])ccc2-c2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 112, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1C(=O)c2cc([N+](=O)[O-])ccc2-c2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 113, &quot;data-SMILES&quot;: &quot;O=C1C(=O)c2ccc([N+](=O)[O-])c3c([N+](=O)[O-])ccc1c23&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 113, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1C(=O)c2ccc([N+](=O)[O-])c3c([N+](=O)[O-])ccc1c23&quot;}, {&quot;mols2grid-id&quot;: 114, &quot;data-SMILES&quot;: &quot;O=C1C=Cc2ccccc2C1=O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 114, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1C=Cc2ccccc2C1=O&quot;}, {&quot;mols2grid-id&quot;: 115, &quot;data-SMILES&quot;: &quot;C[N+](C)(C)CCOC(=O)Nc1cc(Cl)nc(Cl)c1.[I-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 115, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C[N+](C)(C)CCOC(=O)Nc1cc(Cl)nc(Cl)c1.[I-]&quot;}, {&quot;mols2grid-id&quot;: 116, &quot;data-SMILES&quot;: &quot;CCN(CCCCCCNC1=CC(=O)C(NCCCCCCN(CC)Cc2ccccc2OC)=CC1=O)Cc1ccccc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 116, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CCCCCCNC1=CC(=O)C(NCCCCCCN(CC)Cc2ccccc2OC)=CC1=O)Cc1ccccc1OC&quot;}, {&quot;mols2grid-id&quot;: 117, &quot;data-SMILES&quot;: &quot;N[C@@H](Cc1ccccc1)C(=O)NCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 117, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: N[C@@H](Cc1ccccc1)C(=O)NCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 118, &quot;data-SMILES&quot;: &quot;CN[C@@H](Cc1ccccc1)C(=O)NCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 118, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN[C@@H](Cc1ccccc1)C(=O)NCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 119, &quot;data-SMILES&quot;: &quot;N[C@@H](Cc1ccc2ccccc2c1)C(=O)NCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 119, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: N[C@@H](Cc1ccc2ccccc2c1)C(=O)NCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 120, &quot;data-SMILES&quot;: &quot;O=C(CNC(=O)[C@@H]1Cc2ccccc2CN1)Nc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 120, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(CNC(=O)[C@@H]1Cc2ccccc2CN1)Nc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 121, &quot;data-SMILES&quot;: &quot;N[C@@H](Cc1c[nH]c2ccccc12)C(=O)NCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 121, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: N[C@@H](Cc1c[nH]c2ccccc12)C(=O)NCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 122, &quot;data-SMILES&quot;: &quot;CN[C@@H](Cc1c[nH]c2ccccc12)C(=O)NCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 122, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN[C@@H](Cc1c[nH]c2ccccc12)C(=O)NCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 123, &quot;data-SMILES&quot;: &quot;CC(C)(C)OC(=O)N[C@@H](Cc1c[nH]c2ccccc12)C(=O)NCCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 123, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)(C)OC(=O)N[C@@H](Cc1c[nH]c2ccccc12)C(=O)NCCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 124, &quot;data-SMILES&quot;: &quot;N[C@@H](Cc1c[nH]c2ccccc12)C(=O)NCCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 124, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: N[C@@H](Cc1c[nH]c2ccccc12)C(=O)NCCC(=O)Nc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 125, &quot;data-SMILES&quot;: &quot;CC(C)(C)OC(=O)N[C@@H](Cc1c[nH]c2ccccc12)C(=O)NCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 125, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)(C)OC(=O)N[C@@H](Cc1c[nH]c2ccccc12)C(=O)NCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 126, &quot;data-SMILES&quot;: &quot;N[C@@H](Cc1c[nH]c2ccccc12)C(=O)NCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 126, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: N[C@@H](Cc1c[nH]c2ccccc12)C(=O)NCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 127, &quot;data-SMILES&quot;: &quot;CC(C)(C)OC(=O)N[C@@H](CCC(=O)NCCNc1c2c(nc3ccccc13)CCCC2)C(=O)NCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 127, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)(C)OC(=O)N[C@@H](CCC(=O)NCCNc1c2c(nc3ccccc13)CCCC2)C(=O)NCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 128, &quot;data-SMILES&quot;: &quot;N[C@@H](CCC(=O)NCCNc1c2c(nc3ccccc13)CCCC2)C(=O)NCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 128, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: N[C@@H](CCC(=O)NCCNc1c2c(nc3ccccc13)CCCC2)C(=O)NCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 129, &quot;data-SMILES&quot;: &quot;O=C(NCCCCCNc1c2c(nc3ccccc13)CCCC2)[C@@H]1CCCN1CCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 129, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCCCCNc1c2c(nc3ccccc13)CCCC2)[C@@H]1CCCN1CCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 130, &quot;data-SMILES&quot;: &quot;c1ccc2c(NCCCCCCCCSc3c4c(nc5ccccc35)CCCC4)c3c(nc2c1)CCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 130, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc2c(NCCCCCCCCSc3c4c(nc5ccccc35)CCCC4)c3c(nc2c1)CCCC3&quot;}, {&quot;mols2grid-id&quot;: 131, &quot;data-SMILES&quot;: &quot;CCc1c2c(nc3ccc(OC(=O)N4CCC(N5CCCCC5)CC4)cc13)-c1cc3c(c(=O)n1C2)COC(=O)[C@]3(O)CC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 131, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCc1c2c(nc3ccc(OC(=O)N4CCC(N5CCCCC5)CC4)cc13)-c1cc3c(c(=O)n1C2)COC(=O)[C@]3(O)CC&quot;}, {&quot;mols2grid-id&quot;: 132, &quot;data-SMILES&quot;: &quot;C=CC[N+](C)(C)c1ccc(CCC(=O)CCc2ccc([N+](C)(C)CC=C)cc2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 132, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C=CC[N+](C)(C)c1ccc(CCC(=O)CCc2ccc([N+](C)(C)CC=C)cc2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 133, &quot;data-SMILES&quot;: &quot;CC[N+](CC)(CC)CCOc1cccc(OCC[N+](CC)(CC)CC)c1OCC[N+](CC)(CC)CC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 133, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC[N+](CC)(CC)CCOc1cccc(OCC[N+](CC)(CC)CC)c1OCC[N+](CC)(CC)CC&quot;}, {&quot;mols2grid-id&quot;: 134, &quot;data-SMILES&quot;: &quot;c1ccc2c(NCCc3ccc(CCNc4c5c(nc6ccccc46)CCCC5)cc3)c3c(nc2c1)CCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 134, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc2c(NCCc3ccc(CCNc4c5c(nc6ccccc46)CCCC5)cc3)c3c(nc2c1)CCCC3&quot;}, {&quot;mols2grid-id&quot;: 135, &quot;data-SMILES&quot;: &quot;Cc1cc(CCNc2c3c(nc4ccccc24)CCCC3)cc(CCNc2c3c(nc4ccccc24)CCCC3)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 135, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1cc(CCNc2c3c(nc4ccccc24)CCCC3)cc(CCNc2c3c(nc4ccccc24)CCCC3)c1&quot;}, {&quot;mols2grid-id&quot;: 136, &quot;data-SMILES&quot;: &quot;c1ccc2c(NCCc3cocc3CCNc3c4c(nc5ccccc35)CCCC4)c3c(nc2c1)CCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 136, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc2c(NCCc3cocc3CCNc3c4c(nc5ccccc35)CCCC4)c3c(nc2c1)CCCC3&quot;}, {&quot;mols2grid-id&quot;: 137, &quot;data-SMILES&quot;: &quot;c1cc(CCNc2c3c(nc4ccccc24)CCCC3)nc(CCNc2c3c(nc4ccccc24)CCCC3)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 137, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1cc(CCNc2c3c(nc4ccccc24)CCCC3)nc(CCNc2c3c(nc4ccccc24)CCCC3)c1&quot;}, {&quot;mols2grid-id&quot;: 138, &quot;data-SMILES&quot;: &quot;c1cc(CCNc2c3c(nc4ccccc24)CCCC3)cc(CCNc2c3c(nc4ccccc24)CCCC3)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 138, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1cc(CCNc2c3c(nc4ccccc24)CCCC3)cc(CCNc2c3c(nc4ccccc24)CCCC3)c1&quot;}, {&quot;mols2grid-id&quot;: 139, &quot;data-SMILES&quot;: &quot;c1ccc2c(NCCCN3CCN(CCCNc4c5c(nc6ccccc46)CCCC5)CC3)c3c(nc2c1)CCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 139, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc2c(NCCCN3CCN(CCCNc4c5c(nc6ccccc46)CCCC5)CC3)c3c(nc2c1)CCCC3&quot;}, {&quot;mols2grid-id&quot;: 140, &quot;data-SMILES&quot;: &quot;OCCN(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 140, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: OCCN(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 141, &quot;data-SMILES&quot;: &quot;CCN(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 141, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 142, &quot;data-SMILES&quot;: &quot;CN(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 142, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 143, &quot;data-SMILES&quot;: &quot;CC(=O)N(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 143, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)N(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 144, &quot;data-SMILES&quot;: &quot;c1ccc2c(NCCCCNCCCSc3c4c(nc5ccccc35)CCCC4)c3c(nc2c1)CCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 144, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc2c(NCCCCNCCCSc3c4c(nc5ccccc35)CCCC4)c3c(nc2c1)CCCC3&quot;}, {&quot;mols2grid-id&quot;: 145, &quot;data-SMILES&quot;: &quot;CC(=O)N(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCSc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 145, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)N(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCSc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 146, &quot;data-SMILES&quot;: &quot;CC(=O)N(CCCCSc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 146, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)N(CCCCSc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 147, &quot;data-SMILES&quot;: &quot;CN(CCCCSc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 147, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(CCCCSc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 148, &quot;data-SMILES&quot;: &quot;CC(=O)N(CCCNc1c2c(nc3ccccc13)CCCC2)CCCSc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 148, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)N(CCCNc1c2c(nc3ccccc13)CCCC2)CCCSc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 149, &quot;data-SMILES&quot;: &quot;CN(CCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 149, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(CCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 150, &quot;data-SMILES&quot;: &quot;C=CCN(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 150, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C=CCN(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 151, &quot;data-SMILES&quot;: &quot;CCOC(=O)C1=C(C)Nc2nc3c(c(N)c2C1c1ccc(OC)cc1)CCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 151, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCOC(=O)C1=C(C)Nc2nc3c(c(N)c2C1c1ccc(OC)cc1)CCCC3&quot;}, {&quot;mols2grid-id&quot;: 152, &quot;data-SMILES&quot;: &quot;Cl.Cl.Cl.Cl.O=C(NCCCCCCCCNc1c2c(nc3cc(Cl)ccc13)CCCC2)c1ccc2nc(-c3ccc(Cl)cc3)c3c(c2c1)OCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 152, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cl.Cl.Cl.Cl.O=C(NCCCCCCCCNc1c2c(nc3cc(Cl)ccc13)CCCC2)c1ccc2nc(-c3ccc(Cl)cc3)c3c(c2c1)OCCC3&quot;}, {&quot;mols2grid-id&quot;: 153, &quot;data-SMILES&quot;: &quot;O=c1c(O)c(-c2ccccc2)oc2cc(O)cc(O)c12&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 153, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=c1c(O)c(-c2ccccc2)oc2cc(O)cc(O)c12&quot;}, {&quot;mols2grid-id&quot;: 154, &quot;data-SMILES&quot;: &quot;O=c1c(O)c(-c2ccc(O)cc2)oc2cc(O)cc(O)c12&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 154, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=c1c(O)c(-c2ccc(O)cc2)oc2cc(O)cc(O)c12&quot;}, {&quot;mols2grid-id&quot;: 155, &quot;data-SMILES&quot;: &quot;O=c1c(O)c(-c2ccc(O)c(O)c2)oc2cc(O)cc(O)c12&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 155, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=c1c(O)c(-c2ccc(O)c(O)c2)oc2cc(O)cc(O)c12&quot;}, {&quot;mols2grid-id&quot;: 156, &quot;data-SMILES&quot;: &quot;O=c1c(O)c(-c2cc(O)c(O)c(O)c2)oc2cc(O)cc(O)c12&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 156, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=c1c(O)c(-c2cc(O)c(O)c(O)c2)oc2cc(O)cc(O)c12&quot;}, {&quot;mols2grid-id&quot;: 157, &quot;data-SMILES&quot;: &quot;O=c1cc(-c2ccc(O)c(O)c2)oc2cc(O)cc(O)c12&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 157, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=c1cc(-c2ccc(O)c(O)c2)oc2cc(O)cc(O)c12&quot;}, {&quot;mols2grid-id&quot;: 158, &quot;data-SMILES&quot;: &quot;CO[P@@]1(=O)CC[C@H]2COC(=O)C2=C(C)O1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 158, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CO[P@@]1(=O)CC[C@H]2COC(=O)C2=C(C)O1&quot;}, {&quot;mols2grid-id&quot;: 159, &quot;data-SMILES&quot;: &quot;COC(=O)C1=C(C)OP(=O)(OC)CCC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 159, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COC(=O)C1=C(C)OP(=O)(OC)CCC1&quot;}, {&quot;mols2grid-id&quot;: 160, &quot;data-SMILES&quot;: &quot;CC(C)OP(=O)(F)OC(C)C&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 160, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)OP(=O)(F)OC(C)C&quot;}, {&quot;mols2grid-id&quot;: 161, &quot;data-SMILES&quot;: &quot;CN(Cc1ccccc1)Cc1ccc(/C=C2\\\\CCc3cc(OCCCCCN4CCCCC4)ccc3C2=O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 161, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(Cc1ccccc1)Cc1ccc(/C=C2\\\\CCc3cc(OCCCCCN4CCCCC4)ccc3C2=O)cc1&quot;}, {&quot;mols2grid-id&quot;: 162, &quot;data-SMILES&quot;: &quot;NC(=O)N1c2ccccc2Sc2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 162, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)N1c2ccccc2Sc2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 163, &quot;data-SMILES&quot;: &quot;CNC(=O)N1c2ccccc2Sc2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 163, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CNC(=O)N1c2ccccc2Sc2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 164, &quot;data-SMILES&quot;: &quot;CCN(CC)CCNC(=O)N1c2ccccc2Sc2ccccc21.Cl&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 164, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CC)CCNC(=O)N1c2ccccc2Sc2ccccc21.Cl&quot;}, {&quot;mols2grid-id&quot;: 165, &quot;data-SMILES&quot;: &quot;CC(C)N(CCNC(=O)N1c2ccccc2Sc2ccccc21)C(C)C&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 165, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)N(CCNC(=O)N1c2ccccc2Sc2ccccc21)C(C)C&quot;}, {&quot;mols2grid-id&quot;: 166, &quot;data-SMILES&quot;: &quot;O=C(NCCN1CCCC1)N1c2ccccc2Sc2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 166, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCN1CCCC1)N1c2ccccc2Sc2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 167, &quot;data-SMILES&quot;: &quot;O=C(NCCN1CCCCC1)N1c2ccccc2Sc2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 167, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCN1CCCCC1)N1c2ccccc2Sc2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 168, &quot;data-SMILES&quot;: &quot;[Br-].[Br-].c1cc[n+](CCCCCCCCCCC[n+]2ccccc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 168, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: [Br-].[Br-].c1cc[n+](CCCCCCCCCCC[n+]2ccccc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 169, &quot;data-SMILES&quot;: &quot;[Br-].[Br-].c1cc[n+](Cc2ccc3ccc(C[n+]4ccccc4)cc3c2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 169, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: [Br-].[Br-].c1cc[n+](Cc2ccc3ccc(C[n+]4ccccc4)cc3c2)cc1&quot;}, {&quot;mols2grid-id&quot;: 170, &quot;data-SMILES&quot;: &quot;CCOC(=O)c1cc2c(N)c3c(nc2nc1C)CCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 170, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCOC(=O)c1cc2c(N)c3c(nc2nc1C)CCCC3&quot;}, {&quot;mols2grid-id&quot;: 171, &quot;data-SMILES&quot;: &quot;COc1ccc2c3c1O[C@H]1C[C@@H](O)C=C[C@@]31CCN(C)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 171, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2c3c1O[C@H]1C[C@@H](O)C=C[C@@]31CCN(C)C2&quot;}, {&quot;mols2grid-id&quot;: 172, &quot;data-SMILES&quot;: &quot;CC(C)(C)[Si](C)(C)O[C@H]1C=C2CCN3Cc4cc5c(cc4[C@H]([C@@H]1O)[C@@H]23)OCO5&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 172, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)(C)[Si](C)(C)O[C@H]1C=C2CCN3Cc4cc5c(cc4[C@H]([C@@H]1O)[C@@H]23)OCO5&quot;}, {&quot;mols2grid-id&quot;: 173, &quot;data-SMILES&quot;: &quot;CC(=O)O[C@H]1[C@H]2c3cc4c(cc3CN3CCC(=C[C@@H]1O[Si](C)(C)C(C)(C)C)[C@H]23)OCO4&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 173, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)O[C@H]1[C@H]2c3cc4c(cc3CN3CCC(=C[C@@H]1O[Si](C)(C)C(C)(C)C)[C@H]23)OCO4&quot;}, {&quot;mols2grid-id&quot;: 174, &quot;data-SMILES&quot;: &quot;CC(=O)O[C@H]1[C@H]2c3cc4c(cc3CN3CCC(=C[C@@H]1O)[C@H]23)OCO4&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 174, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)O[C@H]1[C@H]2c3cc4c(cc3CN3CCC(=C[C@@H]1O)[C@H]23)OCO4&quot;}, {&quot;mols2grid-id&quot;: 175, &quot;data-SMILES&quot;: &quot;CC(C)(C)[Si](C)(C)O[C@H]1C=C2CCN3Cc4cc5c(cc4[C@H]([C@@H]1OC(=O)c1ccccc1)[C@@H]23)OCO5&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 175, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)(C)[Si](C)(C)O[C@H]1C=C2CCN3Cc4cc5c(cc4[C@H]([C@@H]1OC(=O)c1ccccc1)[C@@H]23)OCO5&quot;}, {&quot;mols2grid-id&quot;: 176, &quot;data-SMILES&quot;: &quot;O=C(O[C@H]1[C@H]2c3cc4c(cc3CN3CCC(=C[C@@H]1O)[C@H]23)OCO4)c1ccccc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 176, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(O[C@H]1[C@H]2c3cc4c(cc3CN3CCC(=C[C@@H]1O)[C@H]23)OCO4)c1ccccc1&quot;}, {&quot;mols2grid-id&quot;: 177, &quot;data-SMILES&quot;: &quot;CC(=O)O[C@H]1C=C2CCN3Cc4cc5c(cc4[C@H]([C@@H]1OC(=O)c1ccccc1)[C@@H]23)OCO5&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 177, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)O[C@H]1C=C2CCN3Cc4cc5c(cc4[C@H]([C@@H]1OC(=O)c1ccccc1)[C@@H]23)OCO5&quot;}, {&quot;mols2grid-id&quot;: 178, &quot;data-SMILES&quot;: &quot;CC(C)(C)c1cc[n+](CCCCCCCC[n+]2ccc(C(C)(C)C)cc2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 178, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)(C)c1cc[n+](CCCCCCCC[n+]2ccc(C(C)(C)C)cc2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 179, &quot;data-SMILES&quot;: &quot;CC(C)(C)c1cc[n+](/C=C2\\\\C=CC3=CC/C(=C\\\\[n+]4ccc(C(C)(C)C)cc4)C=C3C2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 179, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)(C)c1cc[n+](/C=C2\\\\C=CC3=CC/C(=C\\\\[n+]4ccc(C(C)(C)C)cc4)C=C3C2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 180, &quot;data-SMILES&quot;: &quot;CCN(CC)C(C)CN1c2ccccc2Sc2ccccc21.Cl&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 180, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CC)C(C)CN1c2ccccc2Sc2ccccc21.Cl&quot;}, {&quot;mols2grid-id&quot;: 181, &quot;data-SMILES&quot;: &quot;C[N+](C)(CCNC(=O)C(=O)NCC[N+](C)(C)Cc1ccccc1Cl)Cc1ccccc1Cl.[Cl-].[Cl-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 181, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C[N+](C)(CCNC(=O)C(=O)NCC[N+](C)(C)Cc1ccccc1Cl)Cc1ccccc1Cl.[Cl-].[Cl-]&quot;}, {&quot;mols2grid-id&quot;: 182, &quot;data-SMILES&quot;: &quot;[Br-].[Br-].c1ccc2c[n+](CCCCCCCC[n+]3ccc4ccccc4c3)ccc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 182, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: [Br-].[Br-].c1ccc2c[n+](CCCCCCCC[n+]3ccc4ccccc4c3)ccc2c1&quot;}, {&quot;mols2grid-id&quot;: 183, &quot;data-SMILES&quot;: &quot;[Br-].[Br-].c1ccc2c[n+](Cc3ccc4ccc(C[n+]5ccc6ccccc6c5)cc4c3)ccc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 183, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: [Br-].[Br-].c1ccc2c[n+](Cc3ccc4ccc(C[n+]5ccc6ccccc6c5)cc4c3)ccc2c1&quot;}, {&quot;mols2grid-id&quot;: 184, &quot;data-SMILES&quot;: &quot;[Br-].[Br-].c1ccc2c(c1)ccc[n+]2CCCCCCCCCC[n+]1cccc2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 184, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: [Br-].[Br-].c1ccc2c(c1)ccc[n+]2CCCCCCCCCC[n+]1cccc2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 185, &quot;data-SMILES&quot;: &quot;[Br-].[Br-].c1ccc2c(c1)ccc[n+]2Cc1ccc2ccc(C[n+]3cccc4ccccc43)cc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 185, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: [Br-].[Br-].c1ccc2c(c1)ccc[n+]2Cc1ccc2ccc(C[n+]3cccc4ccccc43)cc2c1&quot;}, {&quot;mols2grid-id&quot;: 186, &quot;data-SMILES&quot;: &quot;O=C(c1c2ccccc2cc2ccccc12)N1c2ccccc2Sc2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 186, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(c1c2ccccc2cc2ccccc12)N1c2ccccc2Sc2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 187, &quot;data-SMILES&quot;: &quot;Clc1ccc2c(NCCCCCCCNc3c4c(nc5ccccc35)-c3ccccc3C4)c3c(nc2c1)CCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 187, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Clc1ccc2c(NCCCCCCCNc3c4c(nc5ccccc35)-c3ccccc3C4)c3c(nc2c1)CCCC3&quot;}, {&quot;mols2grid-id&quot;: 188, &quot;data-SMILES&quot;: &quot;COc1ccc([C@H]2Oc3cc(O)c(C/C=C(\\\\C)CCC=C(C)C)c(O)c3C(=O)[C@@H]2O)cc1O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 188, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc([C@H]2Oc3cc(O)c(C/C=C(\\\\C)CCC=C(C)C)c(O)c3C(=O)[C@@H]2O)cc1O&quot;}, {&quot;mols2grid-id&quot;: 189, &quot;data-SMILES&quot;: &quot;COc1cc([C@H]2Oc3cc(O)c(C/C=C(\\\\C)CCC=C(C)C)c(O)c3C(=O)[C@@H]2O)ccc1O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 189, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc([C@H]2Oc3cc(O)c(C/C=C(\\\\C)CCC=C(C)C)c(O)c3C(=O)[C@@H]2O)ccc1O&quot;}, {&quot;mols2grid-id&quot;: 190, &quot;data-SMILES&quot;: &quot;COc1c(O)cc(C2Oc3cc(O)c(C/C=C(\\\\C)CCC=C(C)C)c(O)c3C(=O)[C@@H]2O)cc1O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 190, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1c(O)cc(C2Oc3cc(O)c(C/C=C(\\\\C)CCC=C(C)C)c(O)c3C(=O)[C@@H]2O)cc1O&quot;}, {&quot;mols2grid-id&quot;: 191, &quot;data-SMILES&quot;: &quot;COc1ccc([C@@H]2CC(=O)c3c(cc(O)c(C/C=C(\\\\C)CCC=C(C)C)c3O)O2)cc1O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 191, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc([C@@H]2CC(=O)c3c(cc(O)c(C/C=C(\\\\C)CCC=C(C)C)c3O)O2)cc1O&quot;}, {&quot;mols2grid-id&quot;: 192, &quot;data-SMILES&quot;: &quot;COc1c(O)cc(C2CC(=O)c3c(cc(O)c(C/C=C(\\\\C)CCC=C(C)C)c3O)O2)cc1O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 192, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1c(O)cc(C2CC(=O)c3c(cc(O)c(C/C=C(\\\\C)CCC=C(C)C)c3O)O2)cc1O&quot;}, {&quot;mols2grid-id&quot;: 193, &quot;data-SMILES&quot;: &quot;CC(C)=CCC/C(C)=C/Cc1c(O)cc2c(c1O)C(=O)C[C@@H](c1ccc(O)c(O)c1)O2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 193, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)=CCC/C(C)=C/Cc1c(O)cc2c(c1O)C(=O)C[C@@H](c1ccc(O)c(O)c1)O2&quot;}, {&quot;mols2grid-id&quot;: 194, &quot;data-SMILES&quot;: &quot;COc1ccc2nc3c(c(N)c2c1)CCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 194, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2nc3c(c(N)c2c1)CCCC3&quot;}, {&quot;mols2grid-id&quot;: 195, &quot;data-SMILES&quot;: &quot;Cl.Nc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 195, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cl.Nc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 196, &quot;data-SMILES&quot;: &quot;CN(CCCN1CCN(CCNc2c3c(nc4ccccc24)CCCC3)CC1)c1ccccc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 196, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(CCCN1CCN(CCNc2c3c(nc4ccccc24)CCCC3)CC1)c1ccccc1&quot;}, {&quot;mols2grid-id&quot;: 197, &quot;data-SMILES&quot;: &quot;CN(CCCN1CCN(CCNc2c3c(nc4ccccc24)CCCC3)CC1)C1CCCCC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 197, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(CCCN1CCN(CCNc2c3c(nc4ccccc24)CCCC3)CC1)C1CCCCC1&quot;}, {&quot;mols2grid-id&quot;: 198, &quot;data-SMILES&quot;: &quot;CN(CCC(=O)N1CCN(CCNc2c3c(nc4ccccc24)CCCC3)CC1)c1ccccc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 198, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(CCC(=O)N1CCN(CCNc2c3c(nc4ccccc24)CCCC3)CC1)c1ccccc1&quot;}, {&quot;mols2grid-id&quot;: 199, &quot;data-SMILES&quot;: &quot;CCN(CCC(=O)N1CCN(CCNc2c3c(nc4ccccc24)CCCC3)CC1)C1CCCCC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 199, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CCC(=O)N1CCN(CCNc2c3c(nc4ccccc24)CCCC3)CC1)C1CCCCC1&quot;}, {&quot;mols2grid-id&quot;: 200, &quot;data-SMILES&quot;: &quot;CN(CCC(=O)N1CCN(CCNc2c3c(nc4ccccc24)CCCC3)CC1)C1CCCCC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 200, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(CCC(=O)N1CCN(CCNc2c3c(nc4ccccc24)CCCC3)CC1)C1CCCCC1&quot;}, {&quot;mols2grid-id&quot;: 201, &quot;data-SMILES&quot;: &quot;O=C(CCN1CCCCC1)N1CCN(CCNc2c3c(nc4ccccc24)CCCC3)CC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 201, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(CCN1CCCCC1)N1CCN(CCNc2c3c(nc4ccccc24)CCCC3)CC1&quot;}, {&quot;mols2grid-id&quot;: 202, &quot;data-SMILES&quot;: &quot;CC(=O)c1ccccc1NC(=O)c1ccc(OCCCCCC[n+]2ccccc2)cc1.[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 202, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)c1ccccc1NC(=O)c1ccc(OCCCCCC[n+]2ccccc2)cc1.[Br-]&quot;}, {&quot;mols2grid-id&quot;: 203, &quot;data-SMILES&quot;: &quot;CC(=O)c1ccccc1NC(=O)c1ccc(OCCCCC[n+]2ccccc2)cc1.[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 203, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)c1ccccc1NC(=O)c1ccc(OCCCCC[n+]2ccccc2)cc1.[Br-]&quot;}, {&quot;mols2grid-id&quot;: 204, &quot;data-SMILES&quot;: &quot;CC(=O)c1ccccc1NC(=O)c1ccc(OCCCCC[n+]2cccc3ccccc32)cc1.[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 204, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)c1ccccc1NC(=O)c1ccc(OCCCCC[n+]2cccc3ccccc32)cc1.[Br-]&quot;}, {&quot;mols2grid-id&quot;: 205, &quot;data-SMILES&quot;: &quot;CC(=O)c1ccccc1NC(=O)c1ccc(OCCCCCC[n+]2ccc3ccccc3c2)cc1.[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 205, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)c1ccccc1NC(=O)c1ccc(OCCCCCC[n+]2ccc3ccccc3c2)cc1.[Br-]&quot;}, {&quot;mols2grid-id&quot;: 206, &quot;data-SMILES&quot;: &quot;CC(=O)c1ccccc1NC(=O)c1ccc(OCCCCC[n+]2ccc3ccccc3c2)cc1.[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 206, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)c1ccccc1NC(=O)c1ccc(OCCCCC[n+]2ccc3ccccc3c2)cc1.[Br-]&quot;}, {&quot;mols2grid-id&quot;: 207, &quot;data-SMILES&quot;: &quot;CC(=O)c1ccccc1NC(=O)c1ccc(OCCCC[n+]2ccc3ccccc3c2)cc1.[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 207, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)c1ccccc1NC(=O)c1ccc(OCCCC[n+]2ccc3ccccc3c2)cc1.[Br-]&quot;}, {&quot;mols2grid-id&quot;: 208, &quot;data-SMILES&quot;: &quot;CC(=O)c1ccccc1NC(=O)c1ccc(OCCCC[n+]2cccc3ccccc32)cc1.[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 208, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)c1ccccc1NC(=O)c1ccc(OCCCC[n+]2cccc3ccccc32)cc1.[Br-]&quot;}, {&quot;mols2grid-id&quot;: 209, &quot;data-SMILES&quot;: &quot;O=C(NCCc1c[nH]c2ccccc12)c1ccc(OCCCC[n+]2cccc3ccccc32)cc1.[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 209, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCc1c[nH]c2ccccc12)c1ccc(OCCCC[n+]2cccc3ccccc32)cc1.[Br-]&quot;}, {&quot;mols2grid-id&quot;: 210, &quot;data-SMILES&quot;: &quot;CN(C)c1cc[n+](CCCCOc2ccc(C(=O)NCCc3c[nH]c4ccccc34)cc2)cc1.[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 210, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(C)c1cc[n+](CCCCOc2ccc(C(=O)NCCc3c[nH]c4ccccc34)cc2)cc1.[Br-]&quot;}, {&quot;mols2grid-id&quot;: 211, &quot;data-SMILES&quot;: &quot;O=C(NCCc1c[nH]c2ccccc12)c1ccc(OCCCCn2c3ccccc3c3ccccc32)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 211, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCc1c[nH]c2ccccc12)c1ccc(OCCCCn2c3ccccc3c3ccccc32)cc1&quot;}, {&quot;mols2grid-id&quot;: 212, &quot;data-SMILES&quot;: &quot;COc1ccc2c(c[n+](C)c3c4cc5c(cc4ccc23)OCO5)c1OC.[Cl-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 212, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2c(c[n+](C)c3c4cc5c(cc4ccc23)OCO5)c1OC.[Cl-]&quot;}, {&quot;mols2grid-id&quot;: 213, &quot;data-SMILES&quot;: &quot;CC(C)=CCc1c(-c2ccc(O)cc2O)oc2c(CC=C(C)C)c(O)cc(O)c2c1=O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 213, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)=CCc1c(-c2ccc(O)cc2O)oc2c(CC=C(C)C)c(O)cc(O)c2c1=O&quot;}, {&quot;mols2grid-id&quot;: 214, &quot;data-SMILES&quot;: &quot;CC1(C)C=Cc2c(cc(O)c3c(=O)c4c(oc23)-c2ccc(O)cc2OC(C(C)(C)O)C4)O1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 214, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC1(C)C=Cc2c(cc(O)c3c(=O)c4c(oc23)-c2ccc(O)cc2OC(C(C)(C)O)C4)O1&quot;}, {&quot;mols2grid-id&quot;: 215, &quot;data-SMILES&quot;: &quot;CC(C)=CC1Oc2cc(O)ccc2-c2oc3c4c(cc(O)c3c(=O)c21)OC(C)(C)C=C4&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 215, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)=CC1Oc2cc(O)ccc2-c2oc3c4c(cc(O)c3c(=O)c21)OC(C)(C)C=C4&quot;}, {&quot;mols2grid-id&quot;: 216, &quot;data-SMILES&quot;: &quot;CC(C)(O)CCc1c(-c2ccc(O)cc2O)oc2c3c(cc(O)c2c1=O)OC(C)(C)C=C3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 216, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)(O)CCc1c(-c2ccc(O)cc2O)oc2c3c(cc(O)c2c1=O)OC(C)(C)C=C3&quot;}, {&quot;mols2grid-id&quot;: 217, &quot;data-SMILES&quot;: &quot;CC(C)=CCc1c(-c2ccc(O)cc2O)oc2c3c(cc(O)c2c1=O)OC(C)(C)C=C3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 217, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)=CCc1c(-c2ccc(O)cc2O)oc2c3c(cc(O)c2c1=O)OC(C)(C)C=C3&quot;}, {&quot;mols2grid-id&quot;: 218, &quot;data-SMILES&quot;: &quot;CC(C)=CCC/C(C)=C/Cc1cc(C2CC(=O)c3c(O)cc(O)cc3O2)c(O)cc1O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 218, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)=CCC/C(C)=C/Cc1cc(C2CC(=O)c3c(O)cc(O)cc3O2)c(O)cc1O&quot;}, {&quot;mols2grid-id&quot;: 219, &quot;data-SMILES&quot;: &quot;COc1cc(O)c(C2CC(=O)c3c(O)cc(O)cc3O2)cc1C/C=C(\\\\C)CCC=C(C)C&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 219, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc(O)c(C2CC(=O)c3c(O)cc(O)cc3O2)cc1C/C=C(\\\\C)CCC=C(C)C&quot;}, {&quot;mols2grid-id&quot;: 220, &quot;data-SMILES&quot;: &quot;CC(C)=CCC/C(C)=C/Cc1cc(-c2cc(=O)c3c(O)cc(O)cc3o2)c(O)cc1O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 220, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)=CCC/C(C)=C/Cc1cc(-c2cc(=O)c3c(O)cc(O)cc3o2)c(O)cc1O&quot;}, {&quot;mols2grid-id&quot;: 221, &quot;data-SMILES&quot;: &quot;COc1cc(O)c(-c2cc(=O)c3c(O)cc(O)cc3o2)cc1C/C=C(\\\\C)CCC=C(C)C&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 221, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc(O)c(-c2cc(=O)c3c(O)cc(O)cc3o2)cc1C/C=C(\\\\C)CCC=C(C)C&quot;}, {&quot;mols2grid-id&quot;: 222, &quot;data-SMILES&quot;: &quot;O=c1c(Cl)c(N2CCN(c3ccc(C(F)(F)F)cn3)CC2)cnn1-c1c(Cl)cc(C(F)(F)F)cc1Cl&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 222, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=c1c(Cl)c(N2CCN(c3ccc(C(F)(F)F)cn3)CC2)cnn1-c1c(Cl)cc(C(F)(F)F)cc1Cl&quot;}, {&quot;mols2grid-id&quot;: 223, &quot;data-SMILES&quot;: &quot;O=C(CC1S/C(=N/c2ccc(C3CCCCC3)cc2)NC1=O)Nc1ccc(OC(F)(F)F)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 223, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(CC1S/C(=N/c2ccc(C3CCCCC3)cc2)NC1=O)Nc1ccc(OC(F)(F)F)cc1&quot;}, {&quot;mols2grid-id&quot;: 224, &quot;data-SMILES&quot;: &quot;CSc1cccc(/N=C2\\\\NC(=O)C(CC(=O)Nc3ccc(F)c(F)c3)S2)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 224, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CSc1cccc(/N=C2\\\\NC(=O)C(CC(=O)Nc3ccc(F)c(F)c3)S2)c1&quot;}, {&quot;mols2grid-id&quot;: 225, &quot;data-SMILES&quot;: &quot;O=C(Nc1ccc(OC(F)(F)F)cc1)OC1CN(C(c2ccccc2)c2ccccc2)C1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 225, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(Nc1ccc(OC(F)(F)F)cc1)OC1CN(C(c2ccccc2)c2ccccc2)C1&quot;}, {&quot;mols2grid-id&quot;: 226, &quot;data-SMILES&quot;: &quot;O=C(NC1CCN(Cc2ccccc2)CC1)c1ccc2c(c1)OCCCO2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 226, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NC1CCN(Cc2ccccc2)CC1)c1ccc2c(c1)OCCCO2&quot;}, {&quot;mols2grid-id&quot;: 227, &quot;data-SMILES&quot;: &quot;O=C(CN1CCN(Cc2ccccc2)CC1)Nc1ccc(C(F)(F)F)cc1Cl&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 227, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(CN1CCN(Cc2ccccc2)CC1)Nc1ccc(C(F)(F)F)cc1Cl&quot;}, {&quot;mols2grid-id&quot;: 228, &quot;data-SMILES&quot;: &quot;Cc1c(S(=O)(=O)c2ccc(Cl)cc2)csc1C(=O)NC1CCN(Cc2ccccc2)CC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 228, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1c(S(=O)(=O)c2ccc(Cl)cc2)csc1C(=O)NC1CCN(Cc2ccccc2)CC1&quot;}, {&quot;mols2grid-id&quot;: 229, &quot;data-SMILES&quot;: &quot;COc1ccc(C(=O)NC2CCN(Cc3c(F)cccc3Cl)CC2)cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 229, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc(C(=O)NC2CCN(Cc3c(F)cccc3Cl)CC2)cc1OC&quot;}, {&quot;mols2grid-id&quot;: 230, &quot;data-SMILES&quot;: &quot;O=C(Nc1ccc(OC(F)(F)F)cc1)N1CCCN(CCc2ccccc2)CC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 230, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(Nc1ccc(OC(F)(F)F)cc1)N1CCCN(CCc2ccccc2)CC1&quot;}, {&quot;mols2grid-id&quot;: 231, &quot;data-SMILES&quot;: &quot;N/C(=N\\\\OC(=O)c1cnn(-c2ccc([N+](=O)[O-])cc2)c1C(F)(F)F)c1ccc(Cl)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 231, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: N/C(=N\\\\OC(=O)c1cnn(-c2ccc([N+](=O)[O-])cc2)c1C(F)(F)F)c1ccc(Cl)cc1&quot;}, {&quot;mols2grid-id&quot;: 232, &quot;data-SMILES&quot;: &quot;CC(C)(C)c1ccc(/C(N)=N/OC(=O)c2cnn(-c3ccc([N+](=O)[O-])cc3)c2C(F)(F)F)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 232, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)(C)c1ccc(/C(N)=N/OC(=O)c2cnn(-c3ccc([N+](=O)[O-])cc3)c2C(F)(F)F)cc1&quot;}, {&quot;mols2grid-id&quot;: 233, &quot;data-SMILES&quot;: &quot;N/C(=N\\\\OC(=O)c1cnn(-c2ccc([N+](=O)[O-])cc2)c1C(F)(F)F)c1ccc(C(F)(F)F)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 233, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: N/C(=N\\\\OC(=O)c1cnn(-c2ccc([N+](=O)[O-])cc2)c1C(F)(F)F)c1ccc(C(F)(F)F)cc1&quot;}, {&quot;mols2grid-id&quot;: 234, &quot;data-SMILES&quot;: &quot;CC(CN1CCN(Cc2ccccc2)CC1)N(C(=O)c1cccc([N+](=O)[O-])c1)c1ccccn1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 234, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(CN1CCN(Cc2ccccc2)CC1)N(C(=O)c1cccc([N+](=O)[O-])c1)c1ccccn1&quot;}, {&quot;mols2grid-id&quot;: 235, &quot;data-SMILES&quot;: &quot;O=[N+]([O-])c1ccc(OCC(O)CN2CCCN(c3nc4ccc(Cl)cc4s3)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 235, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=[N+]([O-])c1ccc(OCC(O)CN2CCCN(c3nc4ccc(Cl)cc4s3)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 236, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Cc1ccc(CN3CCCCC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 236, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Cc1ccc(CN3CCCCC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 237, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Cc1cccc(CN3CCCCC3)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 237, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Cc1cccc(CN3CCCCC3)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 238, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Cc1ccc(CN3CCCC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 238, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Cc1ccc(CN3CCCC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 239, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Cc1cccc(CN3CCCC3)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 239, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Cc1cccc(CN3CCCC3)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 240, &quot;data-SMILES&quot;: &quot;CCN(CC)Cc1ccc(CC2Cc3cc(OC)c(OC)cc3C2=O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 240, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CC)Cc1ccc(CC2Cc3cc(OC)c(OC)cc3C2=O)cc1&quot;}, {&quot;mols2grid-id&quot;: 241, &quot;data-SMILES&quot;: &quot;CCN(CC)Cc1cccc(CC2Cc3cc(OC)c(OC)cc3C2=O)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 241, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CC)Cc1cccc(CC2Cc3cc(OC)c(OC)cc3C2=O)c1&quot;}, {&quot;mols2grid-id&quot;: 242, &quot;data-SMILES&quot;: &quot;CCN(C)Cc1ccc(CC2Cc3cc(OC)c(OC)cc3C2=O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 242, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(C)Cc1ccc(CC2Cc3cc(OC)c(OC)cc3C2=O)cc1&quot;}, {&quot;mols2grid-id&quot;: 243, &quot;data-SMILES&quot;: &quot;CCN(C)Cc1cccc(CC2Cc3cc(OC)c(OC)cc3C2=O)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 243, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(C)Cc1cccc(CC2Cc3cc(OC)c(OC)cc3C2=O)c1&quot;}, {&quot;mols2grid-id&quot;: 244, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Cc1ccc(CN(C)C)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 244, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Cc1ccc(CN(C)C)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 245, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Cc1cccc(CN(C)C)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 245, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Cc1cccc(CN(C)C)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 246, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)/C(=C/c1ccc(CN3CCCCC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 246, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)/C(=C/c1ccc(CN3CCCCC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 247, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)/C(=C/c1cccc(CN3CCCCC3)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 247, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)/C(=C/c1cccc(CN3CCCCC3)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 248, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)/C(=C/c1ccc(CN3CCCC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 248, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)/C(=C/c1ccc(CN3CCCC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 249, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)/C(=C/c1cccc(CN3CCCC3)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 249, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)/C(=C/c1cccc(CN3CCCC3)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 250, &quot;data-SMILES&quot;: &quot;CCN(CC)Cc1ccc(/C=C2\\\\Cc3cc(OC)c(OC)cc3C2=O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 250, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CC)Cc1ccc(/C=C2\\\\Cc3cc(OC)c(OC)cc3C2=O)cc1&quot;}, {&quot;mols2grid-id&quot;: 251, &quot;data-SMILES&quot;: &quot;CCN(CC)Cc1cccc(/C=C2\\\\Cc3cc(OC)c(OC)cc3C2=O)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 251, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CC)Cc1cccc(/C=C2\\\\Cc3cc(OC)c(OC)cc3C2=O)c1&quot;}, {&quot;mols2grid-id&quot;: 252, &quot;data-SMILES&quot;: &quot;CCN(C)Cc1ccc(/C=C2\\\\Cc3cc(OC)c(OC)cc3C2=O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 252, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(C)Cc1ccc(/C=C2\\\\Cc3cc(OC)c(OC)cc3C2=O)cc1&quot;}, {&quot;mols2grid-id&quot;: 253, &quot;data-SMILES&quot;: &quot;CCN(C)Cc1cccc(/C=C2\\\\Cc3cc(OC)c(OC)cc3C2=O)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 253, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(C)Cc1cccc(/C=C2\\\\Cc3cc(OC)c(OC)cc3C2=O)c1&quot;}, {&quot;mols2grid-id&quot;: 254, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)/C(=C/c1ccc(CN(C)C)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 254, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)/C(=C/c1ccc(CN(C)C)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 255, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)/C(=C/c1cccc(CN(C)C)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 255, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)/C(=C/c1cccc(CN(C)C)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 256, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1ccc(C(C)N3CCN(C)CC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 256, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1ccc(C(C)N3CCN(C)CC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 257, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1ccc(CN3CCN(C)CC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 257, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1ccc(CN3CCN(C)CC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 258, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1cccc(C(C)N3CCN(C)CC3)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 258, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1cccc(C(C)N3CCN(C)CC3)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 259, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1cccc(CN3CCN(C)CC3)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 259, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1cccc(CN3CCN(C)CC3)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 260, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1ccc(C(C)N3CCOCC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 260, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1ccc(C(C)N3CCOCC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 261, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1ccc(CN3CCOCC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 261, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1ccc(CN3CCOCC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 262, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1cccc(C(C)N3CCOCC3)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 262, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1cccc(C(C)N3CCOCC3)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 263, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1cccc(CN3CCOCC3)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 263, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1cccc(CN3CCOCC3)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 264, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1ccc(C(C)N3CCCCC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 264, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1ccc(C(C)N3CCCCC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 265, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1ccc(CN3CCCCC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 265, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1ccc(CN3CCCCC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 266, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1cccc(C(C)N3CCCCC3)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 266, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1cccc(C(C)N3CCCCC3)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 267, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1cccc(CN3CCCCC3)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 267, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1cccc(CN3CCCCC3)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 268, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1ccc(C(C)N3CCCC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 268, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1ccc(C(C)N3CCCC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 269, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1ccc(CN3CCCC3)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 269, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1ccc(CN3CCCC3)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 270, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1cccc(C(C)N3CCCC3)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 270, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1cccc(C(C)N3CCCC3)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 271, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1cccc(CN3CCCC3)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 271, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1cccc(CN3CCCC3)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 272, &quot;data-SMILES&quot;: &quot;CCN(CC)C(C)c1ccc(OC2Cc3cc(OC)c(OC)cc3C2=O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 272, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CC)C(C)c1ccc(OC2Cc3cc(OC)c(OC)cc3C2=O)cc1&quot;}, {&quot;mols2grid-id&quot;: 273, &quot;data-SMILES&quot;: &quot;CCN(CC)Cc1ccc(OC2Cc3cc(OC)c(OC)cc3C2=O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 273, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CC)Cc1ccc(OC2Cc3cc(OC)c(OC)cc3C2=O)cc1&quot;}, {&quot;mols2grid-id&quot;: 274, &quot;data-SMILES&quot;: &quot;CCN(CC)C(C)c1cccc(OC2Cc3cc(OC)c(OC)cc3C2=O)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 274, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CC)C(C)c1cccc(OC2Cc3cc(OC)c(OC)cc3C2=O)c1&quot;}, {&quot;mols2grid-id&quot;: 275, &quot;data-SMILES&quot;: &quot;CCN(CC)Cc1cccc(OC2Cc3cc(OC)c(OC)cc3C2=O)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 275, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CC)Cc1cccc(OC2Cc3cc(OC)c(OC)cc3C2=O)c1&quot;}, {&quot;mols2grid-id&quot;: 276, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1ccc(C(C)N(C)C)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 276, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1ccc(C(C)N(C)C)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 277, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1ccc(CN(C)C)cc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 277, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1ccc(CN(C)C)cc1)C2&quot;}, {&quot;mols2grid-id&quot;: 278, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1cccc(C(C)N(C)C)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 278, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1cccc(C(C)N(C)C)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 279, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)C(Oc1cccc(CN(C)C)c1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 279, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)C(Oc1cccc(CN(C)C)c1)C2&quot;}, {&quot;mols2grid-id&quot;: 280, &quot;data-SMILES&quot;: &quot;COc1ccc([C@@H]2CC(c3c4ccccc4cc4ccccc34)=NN2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 280, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc([C@@H]2CC(c3c4ccccc4cc4ccccc34)=NN2)cc1&quot;}, {&quot;mols2grid-id&quot;: 281, &quot;data-SMILES&quot;: &quot;O=[N+]([O-])c1cccc([C@@H]2CC(c3c4ccccc4cc4ccccc34)=NN2)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 281, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=[N+]([O-])c1cccc([C@@H]2CC(c3c4ccccc4cc4ccccc34)=NN2)c1&quot;}, {&quot;mols2grid-id&quot;: 282, &quot;data-SMILES&quot;: &quot;c1ccc([C@@H]2CC(c3c4ccccc4cc4ccccc34)=NN2)nc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 282, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc([C@@H]2CC(c3c4ccccc4cc4ccccc34)=NN2)nc1&quot;}, {&quot;mols2grid-id&quot;: 283, &quot;data-SMILES&quot;: &quot;Oc1ccc([C@@H]2CC(c3c4ccccc4cc4ccccc34)=NN2)c(O)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 283, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Oc1ccc([C@@H]2CC(c3c4ccccc4cc4ccccc34)=NN2)c(O)c1&quot;}, {&quot;mols2grid-id&quot;: 284, &quot;data-SMILES&quot;: &quot;Oc1ccccc1[C@@H]1CC(c2c3ccccc3cc3ccccc23)=NN1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 284, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Oc1ccccc1[C@@H]1CC(c2c3ccccc3cc3ccccc23)=NN1&quot;}, {&quot;mols2grid-id&quot;: 285, &quot;data-SMILES&quot;: &quot;c1ccc([C@@H]2CC(c3c4ccccc4cc4ccccc34)=NN2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 285, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc([C@@H]2CC(c3c4ccccc4cc4ccccc34)=NN2)cc1&quot;}, {&quot;mols2grid-id&quot;: 286, &quot;data-SMILES&quot;: &quot;Clc1ccc([C@@H]2CC(c3c4ccccc4cc4ccccc34)=NN2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 286, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Clc1ccc([C@@H]2CC(c3c4ccccc4cc4ccccc34)=NN2)cc1&quot;}, {&quot;mols2grid-id&quot;: 287, &quot;data-SMILES&quot;: &quot;CCOc1ccc(/C=N/NC(=O)CN2CCC(Cc3ccccc3)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 287, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCOc1ccc(/C=N/NC(=O)CN2CCC(Cc3ccccc3)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 288, &quot;data-SMILES&quot;: &quot;COc1ccc(/C=N/NC(=O)CN2CCC(Cc3ccccc3)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 288, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc(/C=N/NC(=O)CN2CCC(Cc3ccccc3)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 289, &quot;data-SMILES&quot;: &quot;C[C@H]1COC2=C1C(=O)C(=O)c1c2ccc2c1CCCC2(C)C&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 289, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C[C@H]1COC2=C1C(=O)C(=O)c1c2ccc2c1CCCC2(C)C&quot;}, {&quot;mols2grid-id&quot;: 290, &quot;data-SMILES&quot;: &quot;Cc1cccc2c3c(ccc12)C1=C(C(=O)C3=O)[C@@H](C)CO1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 290, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1cccc2c3c(ccc12)C1=C(C(=O)C3=O)[C@@H](C)CO1&quot;}, {&quot;mols2grid-id&quot;: 291, &quot;data-SMILES&quot;: &quot;[Br-].[Br-].c1cc[n+](CCCCCCCCCCCC[n+]2cccc3ccccc32)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 291, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: [Br-].[Br-].c1cc[n+](CCCCCCCCCCCC[n+]2cccc3ccccc32)cc1&quot;}, {&quot;mols2grid-id&quot;: 292, &quot;data-SMILES&quot;: &quot;[Br-].[Br-].c1cc[n+](CCCCCCCCCC[n+]2cccc3ccccc32)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 292, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: [Br-].[Br-].c1cc[n+](CCCCCCCCCC[n+]2cccc3ccccc32)cc1&quot;}, {&quot;mols2grid-id&quot;: 293, &quot;data-SMILES&quot;: &quot;COc1cc(-c2cc3c(c(=O)o2)C[C@]2(O)[C@@]4(C)C(=O)C=CC(C)(C)[C@]4(O)CC[C@@]2(C)O3)cc(OC)c1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 293, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc(-c2cc3c(c(=O)o2)C[C@]2(O)[C@@]4(C)C(=O)C=CC(C)(C)[C@]4(O)CC[C@@]2(C)O3)cc(OC)c1OC&quot;}, {&quot;mols2grid-id&quot;: 294, &quot;data-SMILES&quot;: &quot;CN(CCCCNc1c2c(nc3c(NC(=O)CNC(=O)CC[C@H](NC(=O)CNC(=O)OCc4ccccc4)C(=O)N[C@@H](Cc4ccccc4)C(=O)OCc4ccccc4)cccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 294, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(CCCCNc1c2c(nc3c(NC(=O)CNC(=O)CC[C@H](NC(=O)CNC(=O)OCc4ccccc4)C(=O)N[C@@H](Cc4ccccc4)C(=O)OCc4ccccc4)cccc13)CCCC2)CCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 295, &quot;data-SMILES&quot;: &quot;CN(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3c(NC(=O)CNC(=O)CC[C@H](NC(=O)CNC(=O)OCc4ccccc4)C(=O)N[C@@H](Cc4ccccc4)C(=O)OCc4ccccc4)cccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 295, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(CCCCNc1c2c(nc3ccccc13)CCCC2)CCCNc1c2c(nc3c(NC(=O)CNC(=O)CC[C@H](NC(=O)CNC(=O)OCc4ccccc4)C(=O)N[C@@H](Cc4ccccc4)C(=O)OCc4ccccc4)cccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 296, &quot;data-SMILES&quot;: &quot;O=C(CC[C@H](NC(=O)CNC(=O)OCc1ccccc1)C(=O)N[C@@H](Cc1ccccc1)C(=O)OCc1ccccc1)NCC(=O)Nc1cccc2c(NCCCCCCCCNc3c4c(nc5ccccc35)CCCC4)c3c(nc12)CCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 296, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(CC[C@H](NC(=O)CNC(=O)OCc1ccccc1)C(=O)N[C@@H](Cc1ccccc1)C(=O)OCc1ccccc1)NCC(=O)Nc1cccc2c(NCCCCCCCCNc3c4c(nc5ccccc35)CCCC4)c3c(nc12)CCCC3&quot;}, {&quot;mols2grid-id&quot;: 297, &quot;data-SMILES&quot;: &quot;Nc1cccc2c(NCCCCCCCCNc3c4c(nc5ccccc35)CCCC4)c3c(nc12)CCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 297, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Nc1cccc2c(NCCCCCCCCNc3c4c(nc5ccccc35)CCCC4)c3c(nc12)CCCC3&quot;}, {&quot;mols2grid-id&quot;: 298, &quot;data-SMILES&quot;: &quot;O=[N+]([O-])c1cccc2c(NCCCCCCCCNc3c4c(nc5ccccc35)CCCC4)c3c(nc12)CCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 298, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=[N+]([O-])c1cccc2c(NCCCCCCCCNc3c4c(nc5ccccc35)CCCC4)c3c(nc12)CCCC3&quot;}, {&quot;mols2grid-id&quot;: 299, &quot;data-SMILES&quot;: &quot;CN1CC[C@@H](C(=O)N2C/C(=C\\\\c3ccc(F)cc3)C(=O)[C@@]3(C2)[C@H](c2ccc(F)cc2)CN(C)[C@]32C(=O)Nc3ccccc32)[C@@]12C(=O)Nc1ccccc12&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 299, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN1CC[C@@H](C(=O)N2C/C(=C\\\\c3ccc(F)cc3)C(=O)[C@@]3(C2)[C@H](c2ccc(F)cc2)CN(C)[C@]32C(=O)Nc3ccccc32)[C@@]12C(=O)Nc1ccccc12&quot;}, {&quot;mols2grid-id&quot;: 300, &quot;data-SMILES&quot;: &quot;CCNC(=O)c1ccc2nc(-c3ccc(Cl)cc3)c3c(c2c1)NCCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 300, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCNC(=O)c1ccc2nc(-c3ccc(Cl)cc3)c3c(c2c1)NCCC3&quot;}, {&quot;mols2grid-id&quot;: 301, &quot;data-SMILES&quot;: &quot;CCNC(=O)c1ccc2nc(-c3ccc(Cl)cc3)c3c(c2c1)N(Cc1ccccc1)CCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 301, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCNC(=O)c1ccc2nc(-c3ccc(Cl)cc3)c3c(c2c1)N(Cc1ccccc1)CCC3&quot;}, {&quot;mols2grid-id&quot;: 302, &quot;data-SMILES&quot;: &quot;Cl.O=C(/C=N/O)NCCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 302, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cl.O=C(/C=N/O)NCCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 303, &quot;data-SMILES&quot;: &quot;O=C(/C=N/O)NCCCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 303, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(/C=N/O)NCCCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 304, &quot;data-SMILES&quot;: &quot;N#C/C(=N\\\\O)C(=O)NCCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 304, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: N#C/C(=N\\\\O)C(=O)NCCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 305, &quot;data-SMILES&quot;: &quot;O=C(/C=N/O)NCCCCCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 305, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(/C=N/O)NCCCCCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 306, &quot;data-SMILES&quot;: &quot;O=C(/C=N/O)c1ccc(OCC2CCN(Cc3ccccc3)CC2)nc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 306, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(/C=N/O)c1ccc(OCC2CCN(Cc3ccccc3)CC2)nc1&quot;}, {&quot;mols2grid-id&quot;: 307, &quot;data-SMILES&quot;: &quot;O=C(/C=N/O)c1cnc(OCC2CCN(Cc3ccccc3)CC2)nc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 307, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(/C=N/O)c1cnc(OCC2CCN(Cc3ccccc3)CC2)nc1&quot;}, {&quot;mols2grid-id&quot;: 308, &quot;data-SMILES&quot;: &quot;CC1=C[C@@H]2Cc3nc4cc(Cl)ccc4c(NCCCCCCCCCNC(=O)c4cc(O)c5c(c4)C(=O)c4cccc(O)c4C5=O)c3[C@H](C1)C2.Cl&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 308, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC1=C[C@@H]2Cc3nc4cc(Cl)ccc4c(NCCCCCCCCCNC(=O)c4cc(O)c5c(c4)C(=O)c4cccc(O)c4C5=O)c3[C@H](C1)C2.Cl&quot;}, {&quot;mols2grid-id&quot;: 309, &quot;data-SMILES&quot;: &quot;O=C(NCCCCCCCNc1c2c(nc3ccccc13)CCCC2)c1cc2cc(OC(F)(F)F)ccc2oc1=O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 309, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCCCCCCNc1c2c(nc3ccccc13)CCCC2)c1cc2cc(OC(F)(F)F)ccc2oc1=O&quot;}, {&quot;mols2grid-id&quot;: 310, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)NCCCCCCCNc3c4c(nc5ccccc35)CCCC4)c(=O)oc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 310, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)NCCCCCCCNc3c4c(nc5ccccc35)CCCC4)c(=O)oc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 311, &quot;data-SMILES&quot;: &quot;Cc1ccc2oc(=O)c(C(=O)NCCCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 311, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc2oc(=O)c(C(=O)NCCCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;}, {&quot;mols2grid-id&quot;: 312, &quot;data-SMILES&quot;: &quot;COc1ccc2oc(=O)c(C(=O)NCCCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 312, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2oc(=O)c(C(=O)NCCCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;}, {&quot;mols2grid-id&quot;: 313, &quot;data-SMILES&quot;: &quot;COc1ccc2cc(C(=O)NCCCCCCCNc3c4c(nc5ccccc35)CCCC4)c(=O)oc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 313, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2cc(C(=O)NCCCCCCCNc3c4c(nc5ccccc35)CCCC4)c(=O)oc2c1&quot;}, {&quot;mols2grid-id&quot;: 314, &quot;data-SMILES&quot;: &quot;O=C(NCCCCCCCNc1c2c(nc3ccccc13)CCCC2)c1cc2ccccc2oc1=O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 314, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCCCCCCNc1c2c(nc3ccccc13)CCCC2)c1cc2ccccc2oc1=O&quot;}, {&quot;mols2grid-id&quot;: 315, &quot;data-SMILES&quot;: &quot;O=C(NCCCCCCNc1c2c(nc3ccccc13)CCCC2)c1cc2cc(OC(F)(F)F)ccc2oc1=O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 315, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCCCCCNc1c2c(nc3ccccc13)CCCC2)c1cc2cc(OC(F)(F)F)ccc2oc1=O&quot;}, {&quot;mols2grid-id&quot;: 316, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)NCCCCCCNc3c4c(nc5ccccc35)CCCC4)c(=O)oc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 316, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)NCCCCCCNc3c4c(nc5ccccc35)CCCC4)c(=O)oc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 317, &quot;data-SMILES&quot;: &quot;Cc1ccc2oc(=O)c(C(=O)NCCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 317, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc2oc(=O)c(C(=O)NCCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;}, {&quot;mols2grid-id&quot;: 318, &quot;data-SMILES&quot;: &quot;COc1ccc2oc(=O)c(C(=O)NCCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 318, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2oc(=O)c(C(=O)NCCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;}, {&quot;mols2grid-id&quot;: 319, &quot;data-SMILES&quot;: &quot;COc1ccc2cc(C(=O)NCCCCCCNc3c4c(nc5ccccc35)CCCC4)c(=O)oc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 319, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2cc(C(=O)NCCCCCCNc3c4c(nc5ccccc35)CCCC4)c(=O)oc2c1&quot;}, {&quot;mols2grid-id&quot;: 320, &quot;data-SMILES&quot;: &quot;O=C(NCCCCCCNc1c2c(nc3ccccc13)CCCC2)c1cc2ccccc2oc1=O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 320, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCCCCCNc1c2c(nc3ccccc13)CCCC2)c1cc2ccccc2oc1=O&quot;}, {&quot;mols2grid-id&quot;: 321, &quot;data-SMILES&quot;: &quot;O=C(NCCCCCNc1c2c(nc3ccccc13)CCCC2)c1cc2cc(OC(F)(F)F)ccc2oc1=O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 321, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCCCCNc1c2c(nc3ccccc13)CCCC2)c1cc2cc(OC(F)(F)F)ccc2oc1=O&quot;}, {&quot;mols2grid-id&quot;: 322, &quot;data-SMILES&quot;: &quot;COc1cc2cc(C(=O)NCCCCCNc3c4c(nc5ccccc35)CCCC4)c(=O)oc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 322, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(C(=O)NCCCCCNc3c4c(nc5ccccc35)CCCC4)c(=O)oc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 323, &quot;data-SMILES&quot;: &quot;Cc1ccc2oc(=O)c(C(=O)NCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 323, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc2oc(=O)c(C(=O)NCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;}, {&quot;mols2grid-id&quot;: 324, &quot;data-SMILES&quot;: &quot;COc1ccc2oc(=O)c(C(=O)NCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 324, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2oc(=O)c(C(=O)NCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;}, {&quot;mols2grid-id&quot;: 325, &quot;data-SMILES&quot;: &quot;COc1ccc2cc(C(=O)NCCCCCNc3c4c(nc5ccccc35)CCCC4)c(=O)oc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 325, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2cc(C(=O)NCCCCCNc3c4c(nc5ccccc35)CCCC4)c(=O)oc2c1&quot;}, {&quot;mols2grid-id&quot;: 326, &quot;data-SMILES&quot;: &quot;O=C(NCCCCCNc1c2c(nc3ccccc13)CCCC2)c1cc2ccccc2oc1=O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 326, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCCCCNc1c2c(nc3ccccc13)CCCC2)c1cc2ccccc2oc1=O&quot;}, {&quot;mols2grid-id&quot;: 327, &quot;data-SMILES&quot;: &quot;CCN(CCC(=O)NCCCNc1c2c(nc3ccccc13)CCCC2)C1CCCCC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 327, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CCC(=O)NCCCNc1c2c(nc3ccccc13)CCCC2)C1CCCCC1&quot;}, {&quot;mols2grid-id&quot;: 328, &quot;data-SMILES&quot;: &quot;CCN(CCC(=O)NCCCCNc1c2c(nc3ccccc13)CCCC2)C1CCCCC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 328, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CCC(=O)NCCCCNc1c2c(nc3ccccc13)CCCC2)C1CCCCC1&quot;}, {&quot;mols2grid-id&quot;: 329, &quot;data-SMILES&quot;: &quot;O=C(Cc1cc(=O)oc2cc(O)ccc12)NCCCCNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 329, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(Cc1cc(=O)oc2cc(O)ccc12)NCCCCNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 330, &quot;data-SMILES&quot;: &quot;O=C(Cc1cc(=O)oc2cc(O)ccc12)NNC(=S)Nc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 330, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(Cc1cc(=O)oc2cc(O)ccc12)NNC(=S)Nc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 331, &quot;data-SMILES&quot;: &quot;O=C(Cc1cc(=O)oc2cc(O)ccc12)N/N=C1\\\\SCC(=O)N1c1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 331, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(Cc1cc(=O)oc2cc(O)ccc12)N/N=C1\\\\SCC(=O)N1c1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 332, &quot;data-SMILES&quot;: &quot;CN(C)CCOc1ccc(C(=O)/C=C/c2ccccc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 332, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(C)CCOc1ccc(C(=O)/C=C/c2ccccc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 333, &quot;data-SMILES&quot;: &quot;CC(=O)O[C@H]1CC[C@@]2(C)[C@@H](CC[C@@]3(C)C[C@@]4(O)CC[C@H]5C(C)(C)[C@@H](OC(C)=O)CC[C@]5(C)[C@H]4CC[C@@H]32)C1(C)C&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 333, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)O[C@H]1CC[C@@]2(C)[C@@H](CC[C@@]3(C)C[C@@]4(O)CC[C@H]5C(C)(C)[C@@H](OC(C)=O)CC[C@]5(C)[C@H]4CC[C@@H]32)C1(C)C&quot;}, {&quot;mols2grid-id&quot;: 334, &quot;data-SMILES&quot;: &quot;C[C@@]12CC[C@@H]3[C@](C)(CC[C@H](OC(=O)CCc4ccc(O)cc4)[C@]3(C)C(=O)O)[C@H]1CC[C@H]1C(=CC[C@@H]3[C@]1(C)CC[C@@H](O)[C@]3(C)CO)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 334, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C[C@@]12CC[C@@H]3[C@](C)(CC[C@H](OC(=O)CCc4ccc(O)cc4)[C@]3(C)C(=O)O)[C@H]1CC[C@H]1C(=CC[C@@H]3[C@]1(C)CC[C@@H](O)[C@]3(C)CO)C2&quot;}, {&quot;mols2grid-id&quot;: 335, &quot;data-SMILES&quot;: &quot;CCCC[C@@H](O)/C=C/C=C/C(=O)O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 335, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCC[C@@H](O)/C=C/C=C/C(=O)O&quot;}, {&quot;mols2grid-id&quot;: 336, &quot;data-SMILES&quot;: &quot;COc1ccc(OC)c(C(C)NS(=O)(=O)NC(=O)OCc2ccccc2)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 336, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc(OC)c(C(C)NS(=O)(=O)NC(=O)OCc2ccccc2)c1&quot;}, {&quot;mols2grid-id&quot;: 337, &quot;data-SMILES&quot;: &quot;COc1cccc(OC)c1C(C)NS(=O)(=O)NC(=O)OCc1ccccc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 337, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cccc(OC)c1C(C)NS(=O)(=O)NC(=O)OCc1ccccc1&quot;}, {&quot;mols2grid-id&quot;: 338, &quot;data-SMILES&quot;: &quot;COc1ccccc1C(C)NS(N)(=O)=O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 338, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccccc1C(C)NS(N)(=O)=O&quot;}, {&quot;mols2grid-id&quot;: 339, &quot;data-SMILES&quot;: &quot;Br.Br.CC[N+](CC)(CCCCCn1c(C)cc(=O)n(CCCCC[N+](CC)(CC)Cc2ccccc2[N+](=O)[O-])c1=O)Cc1ccccc1[N+](=O)[O-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 339, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Br.Br.CC[N+](CC)(CCCCCn1c(C)cc(=O)n(CCCCC[N+](CC)(CC)Cc2ccccc2[N+](=O)[O-])c1=O)Cc1ccccc1[N+](=O)[O-]&quot;}, {&quot;mols2grid-id&quot;: 340, &quot;data-SMILES&quot;: &quot;Br.Br.CC[N+]1(Cc2ccccc2[N+](=O)[O-])CCCCCn2c(C)cc(=O)n(c2=O)CCCCC[N+](CC)(Cc2ccccc2[N+](=O)[O-])Cc2ccc(cc2)C1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 340, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Br.Br.CC[N+]1(Cc2ccccc2[N+](=O)[O-])CCCCCn2c(C)cc(=O)n(c2=O)CCCCC[N+](CC)(Cc2ccccc2[N+](=O)[O-])Cc2ccc(cc2)C1&quot;}, {&quot;mols2grid-id&quot;: 341, &quot;data-SMILES&quot;: &quot;Cc1c(C)c2c(c(C)c1O)CCC(C)(C(=O)NCCCCCCCCNc1c3c(nc4cc(Cl)ccc14)CCCC3)O2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 341, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1c(C)c2c(c(C)c1O)CCC(C)(C(=O)NCCCCCCCCNc1c3c(nc4cc(Cl)ccc14)CCCC3)O2&quot;}, {&quot;mols2grid-id&quot;: 342, &quot;data-SMILES&quot;: &quot;CO[P@]1(=O)OC[C@H]2COC(=O)C2=C(C)O1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 342, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CO[P@]1(=O)OC[C@H]2COC(=O)C2=C(C)O1&quot;}, {&quot;mols2grid-id&quot;: 343, &quot;data-SMILES&quot;: &quot;c1ccc2oc(CNCCCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 343, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc2oc(CNCCCCCCCNc3c4c(nc5ccccc35)CCCC4)cc2c1&quot;}, {&quot;mols2grid-id&quot;: 344, &quot;data-SMILES&quot;: &quot;COc1cccc2c1CC[C@H](NC(=O)N(C)C)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 344, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cccc2c1CC[C@H](NC(=O)N(C)C)C2&quot;}, {&quot;mols2grid-id&quot;: 345, &quot;data-SMILES&quot;: &quot;COc1ccc2c(c1)CCC(NC(=O)N(C)C)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 345, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2c(c1)CCC(NC(=O)N(C)C)C2&quot;}, {&quot;mols2grid-id&quot;: 346, &quot;data-SMILES&quot;: &quot;COc1ccc2c(c1)C[C@@H](NC(=O)N(C)C)CC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 346, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2c(c1)C[C@@H](NC(=O)N(C)C)CC2&quot;}, {&quot;mols2grid-id&quot;: 347, &quot;data-SMILES&quot;: &quot;COc1cccc2c1CCC(NS(=O)(=O)N(C)C)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 347, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cccc2c1CCC(NS(=O)(=O)N(C)C)C2&quot;}, {&quot;mols2grid-id&quot;: 348, &quot;data-SMILES&quot;: &quot;COc1ccc2c(c1)CCC(NS(=O)(=O)N(C)C)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 348, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2c(c1)CCC(NS(=O)(=O)N(C)C)C2&quot;}, {&quot;mols2grid-id&quot;: 349, &quot;data-SMILES&quot;: &quot;COc1ccc2c(c1)CC(NS(=O)(=O)N(C)C)CC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 349, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2c(c1)CC(NS(=O)(=O)N(C)C)CC2&quot;}, {&quot;mols2grid-id&quot;: 350, &quot;data-SMILES&quot;: &quot;CN(C)C(=O)N[C@H]1CCc2c(O)cccc2C1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 350, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(C)C(=O)N[C@H]1CCc2c(O)cccc2C1&quot;}, {&quot;mols2grid-id&quot;: 351, &quot;data-SMILES&quot;: &quot;CN(C)C(=O)NC1CCc2cc(O)ccc2C1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 351, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(C)C(=O)NC1CCc2cc(O)ccc2C1&quot;}, {&quot;mols2grid-id&quot;: 352, &quot;data-SMILES&quot;: &quot;CN(C)C(=O)N[C@H]1CCc2ccc(O)cc2C1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 352, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(C)C(=O)N[C@H]1CCc2ccc(O)cc2C1&quot;}, {&quot;mols2grid-id&quot;: 353, &quot;data-SMILES&quot;: &quot;CN(C)S(=O)(=O)NC1CCc2c(O)cccc2C1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 353, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(C)S(=O)(=O)NC1CCc2c(O)cccc2C1&quot;}, {&quot;mols2grid-id&quot;: 354, &quot;data-SMILES&quot;: &quot;CN(C)S(=O)(=O)N[C@H]1CCc2cc(O)ccc2C1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 354, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(C)S(=O)(=O)N[C@H]1CCc2cc(O)ccc2C1&quot;}, {&quot;mols2grid-id&quot;: 355, &quot;data-SMILES&quot;: &quot;CN(C)S(=O)(=O)NC1CCc2ccc(O)cc2C1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 355, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(C)S(=O)(=O)NC1CCc2ccc(O)cc2C1&quot;}, {&quot;mols2grid-id&quot;: 356, &quot;data-SMILES&quot;: &quot;O=C1/C(=C/C2CCN(Cc3ccccc3)CC2)Cc2cc3c(cc21)OCO3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 356, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1/C(=C/C2CCN(Cc3ccccc3)CC2)Cc2cc3c(cc21)OCO3&quot;}, {&quot;mols2grid-id&quot;: 357, &quot;data-SMILES&quot;: &quot;COc1ccc2c(c1)C(=O)/C(=C/C1CCN(Cc3ccc4c(c3)OCO4)CC1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 357, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2c(c1)C(=O)/C(=C/C1CCN(Cc3ccc4c(c3)OCO4)CC1)C2&quot;}, {&quot;mols2grid-id&quot;: 358, &quot;data-SMILES&quot;: &quot;COc1cccc2c1C(=O)/C(=C/C1CCN(Cc3ccc4c(c3)OCO4)CC1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 358, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cccc2c1C(=O)/C(=C/C1CCN(Cc3ccc4c(c3)OCO4)CC1)C2&quot;}, {&quot;mols2grid-id&quot;: 359, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1O)C(=O)/C(=C/C1CCN(Cc3ccccc3)CC1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 359, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1O)C(=O)/C(=C/C1CCN(Cc3ccccc3)CC1)C2&quot;}, {&quot;mols2grid-id&quot;: 360, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1O)C/C(=C\\\\C1CCN(Cc3ccccc3)CC1)C2=O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 360, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1O)C/C(=C\\\\C1CCN(Cc3ccccc3)CC1)C2=O&quot;}, {&quot;mols2grid-id&quot;: 361, &quot;data-SMILES&quot;: &quot;O=C1/C(=C/C2CCN(Cc3ccccc3)CC2)Cc2ccc(O)cc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 361, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1/C(=C/C2CCN(Cc3ccccc3)CC2)Cc2ccc(O)cc21&quot;}, {&quot;mols2grid-id&quot;: 362, &quot;data-SMILES&quot;: &quot;O=C1/C(=C/C2CCN(Cc3ccccc3)CC2)Cc2cccc(O)c21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 362, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1/C(=C/C2CCN(Cc3ccccc3)CC2)Cc2cccc(O)c21&quot;}, {&quot;mols2grid-id&quot;: 363, &quot;data-SMILES&quot;: &quot;O=C1/C(=C/C2CCN(Cc3ccccc3)CC2)Cc2cc(O)ccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 363, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1/C(=C/C2CCN(Cc3ccccc3)CC2)Cc2cc(O)ccc21&quot;}, {&quot;mols2grid-id&quot;: 364, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)/C(=C/C1CCN(Cc3ccccc3)CC1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 364, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)/C(=C/C1CCN(Cc3ccccc3)CC1)C2&quot;}, {&quot;mols2grid-id&quot;: 365, &quot;data-SMILES&quot;: &quot;COc1ccc2c(c1)C(=O)/C(=C/C1CCN(Cc3ccccc3)CC1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 365, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2c(c1)C(=O)/C(=C/C1CCN(Cc3ccccc3)CC1)C2&quot;}, {&quot;mols2grid-id&quot;: 366, &quot;data-SMILES&quot;: &quot;COc1cccc2c1C(=O)/C(=C/C1CCN(Cc3ccccc3)CC1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 366, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cccc2c1C(=O)/C(=C/C1CCN(Cc3ccccc3)CC1)C2&quot;}, {&quot;mols2grid-id&quot;: 367, &quot;data-SMILES&quot;: &quot;COc1ccc2c(c1)C/C(=C\\\\C1CCN(Cc3ccccc3)CC1)C2=O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 367, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2c(c1)C/C(=C\\\\C1CCN(Cc3ccccc3)CC1)C2=O&quot;}, {&quot;mols2grid-id&quot;: 368, &quot;data-SMILES&quot;: &quot;COc1cccc(CN2CCC(/C=C3\\\\Cc4cc(OC)ccc4C3=O)CC2)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 368, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cccc(CN2CCC(/C=C3\\\\Cc4cc(OC)ccc4C3=O)CC2)c1&quot;}, {&quot;mols2grid-id&quot;: 369, &quot;data-SMILES&quot;: &quot;COc1cccc(CN2CCC(/C=C3\\\\Cc4cccc(OC)c4C3=O)CC2)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 369, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cccc(CN2CCC(/C=C3\\\\Cc4cccc(OC)c4C3=O)CC2)c1&quot;}, {&quot;mols2grid-id&quot;: 370, &quot;data-SMILES&quot;: &quot;O=C(CCCCCCCCc1ccc(O)cc1)c1c(O)cccc1O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 370, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(CCCCCCCCc1ccc(O)cc1)c1c(O)cccc1O&quot;}, {&quot;mols2grid-id&quot;: 371, &quot;data-SMILES&quot;: &quot;O=C(CCCCCCCCc1ccc(O)c(O)c1)c1c(O)cccc1O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 371, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(CCCCCCCCc1ccc(O)c(O)c1)c1c(O)cccc1O&quot;}, {&quot;mols2grid-id&quot;: 372, &quot;data-SMILES&quot;: &quot;C#CCN(Cc1ccc2cccc(O)c2n1)C(C#N)CCC1CCN(Cc2ccccc2)CC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 372, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C#CCN(Cc1ccc2cccc(O)c2n1)C(C#N)CCC1CCN(Cc2ccccc2)CC1&quot;}, {&quot;mols2grid-id&quot;: 373, &quot;data-SMILES&quot;: &quot;CN(C)C(=O)Oc1cccc(C(=O)/C=C/c2ccc(O)cc2)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 373, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(C)C(=O)Oc1cccc(C(=O)/C=C/c2ccc(O)cc2)c1&quot;}, {&quot;mols2grid-id&quot;: 374, &quot;data-SMILES&quot;: &quot;CC(=O)/C(=N\\\\O)C(=O)Nc1cnc2c(c1)CC(N(C)CCc1ccccc1)CC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 374, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(=O)/C(=N\\\\O)C(=O)Nc1cnc2c(c1)CC(N(C)CCc1ccccc1)CC2&quot;}, {&quot;mols2grid-id&quot;: 375, &quot;data-SMILES&quot;: &quot;COc1ccc(CN2CCCCC2COc2ccc(C(=O)/C=N\\\\O)cn2)cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 375, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc(CN2CCCCC2COc2ccc(C(=O)/C=N\\\\O)cn2)cc1OC&quot;}, {&quot;mols2grid-id&quot;: 376, &quot;data-SMILES&quot;: &quot;O=C(/C=N\\\\O)c1ccc(OCC2CCN(Cc3ccccc3)CC2)nc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 376, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(/C=N\\\\O)c1ccc(OCC2CCN(Cc3ccccc3)CC2)nc1&quot;}, {&quot;mols2grid-id&quot;: 377, &quot;data-SMILES&quot;: &quot;COc1cc(/C=C/C(=O)Nc2ccccc2)ccc1OCCCCCCN1CCCCC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 377, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc(/C=C/C(=O)Nc2ccccc2)ccc1OCCCCCCN1CCCCC1&quot;}, {&quot;mols2grid-id&quot;: 378, &quot;data-SMILES&quot;: &quot;COc1cccc(C2c3ccc4cccnc4c3Oc3nc4c(c(N)c32)CCCC4)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 378, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cccc(C2c3ccc4cccnc4c3Oc3nc4c(c(N)c32)CCCC4)c1&quot;}, {&quot;mols2grid-id&quot;: 379, &quot;data-SMILES&quot;: &quot;CCO[P@](=O)(SCC)c1ccccc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 379, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCO[P@](=O)(SCC)c1ccccc1&quot;}, {&quot;mols2grid-id&quot;: 380, &quot;data-SMILES&quot;: &quot;C[n+]1c2ccccc2c(-c2ccc(N)cc2)c2ccccc21.F[B-](F)(F)F&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 380, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: C[n+]1c2ccccc2c(-c2ccc(N)cc2)c2ccccc21.F[B-](F)(F)F&quot;}, {&quot;mols2grid-id&quot;: 381, &quot;data-SMILES&quot;: &quot;CCN(CC)c1ccc(-c2c3ccccc3[n+](C)c3ccccc23)cc1.F[B-](F)(F)F&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 381, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CC)c1ccc(-c2c3ccccc3[n+](C)c3ccccc23)cc1.F[B-](F)(F)F&quot;}, {&quot;mols2grid-id&quot;: 382, &quot;data-SMILES&quot;: &quot;CN1c2ccccc2C(N2CCOCC2)c2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 382, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN1c2ccccc2C(N2CCOCC2)c2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 383, &quot;data-SMILES&quot;: &quot;CN1c2ccccc2C(N2CCSCC2)c2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 383, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN1c2ccccc2C(N2CCSCC2)c2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 384, &quot;data-SMILES&quot;: &quot;CN1c2ccccc2C(n2cncn2)c2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 384, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN1c2ccccc2C(n2cncn2)c2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 385, &quot;data-SMILES&quot;: &quot;CN1c2ccccc2C(n2nnc3ccccc32)c2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 385, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN1c2ccccc2C(n2nnc3ccccc32)c2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 386, &quot;data-SMILES&quot;: &quot;O=C1SCc2ccccc21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 386, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1SCc2ccccc21&quot;}, {&quot;mols2grid-id&quot;: 387, &quot;data-SMILES&quot;: &quot;O=C1SCc2cccc([N+](=O)[O-])c21&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 387, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C1SCc2cccc([N+](=O)[O-])c21&quot;}, {&quot;mols2grid-id&quot;: 388, &quot;data-SMILES&quot;: &quot;O=C(O)C(F)(F)F.O=C1CC[C@@]2(C=CNC3=C2C2=NCCc4c[nH]c(c42)C3=O)C=C1Br&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 388, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(O)C(F)(F)F.O=C1CC[C@@]2(C=CNC3=C2C2=NCCc4c[nH]c(c42)C3=O)C=C1Br&quot;}, {&quot;mols2grid-id&quot;: 389, &quot;data-SMILES&quot;: &quot;O=C(O)C(F)(F)F.O=C1C2=C(C3=NCCc4c[nH]c1c43)C1(C=CN2)C=C(Br)C(O)C(Br)=C1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 389, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(O)C(F)(F)F.O=C1C2=C(C3=NCCc4c[nH]c1c43)C1(C=CN2)C=C(Br)C(O)C(Br)=C1&quot;}, {&quot;mols2grid-id&quot;: 390, &quot;data-SMILES&quot;: &quot;O=C(O)C(F)(F)F.O=C1C=C2S[C@H]3C[C@]2(C=C1Br)C1=C(N3)C(=O)c2[nH]cc3c2C1=NCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 390, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(O)C(F)(F)F.O=C1C=C2S[C@H]3C[C@]2(C=C1Br)C1=C(N3)C(=O)c2[nH]cc3c2C1=NCC3&quot;}, {&quot;mols2grid-id&quot;: 391, &quot;data-SMILES&quot;: &quot;Cc1cc(=O)oc2cc(OCCCCSC(=S)N3CCCCC3)ccc12&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 391, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1cc(=O)oc2cc(OCCCCSC(=S)N3CCCCC3)ccc12&quot;}, {&quot;mols2grid-id&quot;: 392, &quot;data-SMILES&quot;: &quot;COc1cccc(C2NC(=S)Nc3nc4c(c(N)c32)CCCC4)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 392, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cccc(C2NC(=S)Nc3nc4c(c(N)c32)CCCC4)c1&quot;}, {&quot;mols2grid-id&quot;: 393, &quot;data-SMILES&quot;: &quot;Nc1c2c(nc3c1C(c1cccc(Br)c1)NC(=S)N3)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 393, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Nc1c2c(nc3c1C(c1cccc(Br)c1)NC(=S)N3)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 394, &quot;data-SMILES&quot;: &quot;O=C(CNCc1cc(F)cc(F)c1)Nc1ccc2nc3n(c(=O)c2c1)CCC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 394, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(CNCc1cc(F)cc(F)c1)Nc1ccc2nc3n(c(=O)c2c1)CCC3&quot;}, {&quot;mols2grid-id&quot;: 395, &quot;data-SMILES&quot;: &quot;COc1ccc(Cn2cc(C(=O)NCCCNc3c4c(nc5cc(Cl)ccc35)CCCC4)c(=O)c3ccccc32)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 395, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc(Cn2cc(C(=O)NCCCNc3c4c(nc5cc(Cl)ccc35)CCCC4)c(=O)c3ccccc32)cc1&quot;}, {&quot;mols2grid-id&quot;: 396, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](CCC[n+]2ccc(/C=N/O)c(Cl)c2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 396, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](CCC[n+]2ccc(/C=N/O)c(Cl)c2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 397, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](CCCC[n+]2ccc(/C=N/O)c(Cl)c2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 397, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](CCCC[n+]2ccc(/C=N/O)c(Cl)c2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 398, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](C/C=C/C[n+]2ccc(/C=N/O)c(Cl)c2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 398, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](C/C=C/C[n+]2ccc(/C=N/O)c(Cl)c2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 399, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](CCC[n+]2cc(Cl)c(/C=N/O)c(Cl)c2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 399, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](CCC[n+]2cc(Cl)c(/C=N/O)c(Cl)c2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 400, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](CCCC[n+]2cc(Cl)c(/C=N/O)c(Cl)c2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 400, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](CCCC[n+]2cc(Cl)c(/C=N/O)c(Cl)c2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 401, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](C/C=C/C[n+]2cc(Cl)c(/C=N/O)c(Cl)c2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 401, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](C/C=C/C[n+]2cc(Cl)c(/C=N/O)c(Cl)c2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 402, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](COC[n+]2ccccc2/C=N/O)cc1.[Cl-].[Cl-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 402, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](COC[n+]2ccccc2/C=N/O)cc1.[Cl-].[Cl-]&quot;}, {&quot;mols2grid-id&quot;: 403, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](CCC[n+]2ccc(/C=N/O)cc2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 403, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](CCC[n+]2ccc(/C=N/O)cc2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 404, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](C/C=C/C[n+]2ccc(/C=N/O)cc2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 404, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](C/C=C/C[n+]2ccc(/C=N/O)cc2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 405, &quot;data-SMILES&quot;: &quot;Cc1ccc(NC(=O)c2cc(=O)c3cc(/C=C/C(=O)OCCN(C)C)ccc3o2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 405, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc(NC(=O)c2cc(=O)c3cc(/C=C/C(=O)OCCN(C)C)ccc3o2)cc1&quot;}, {&quot;mols2grid-id&quot;: 406, &quot;data-SMILES&quot;: &quot;COc1cc2oc(C(=O)OCCC3CCN(Cc4ccccc4)CC3)cc(=O)c2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 406, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2oc(C(=O)OCCC3CCN(Cc4ccccc4)CC3)cc(=O)c2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 407, &quot;data-SMILES&quot;: &quot;O=C(NCCC1CCN(Cc2ccccc2)CC1)c1cc(=O)c2ccccc2o1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 407, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCC1CCN(Cc2ccccc2)CC1)c1cc(=O)c2ccccc2o1&quot;}, {&quot;mols2grid-id&quot;: 408, &quot;data-SMILES&quot;: &quot;O=C(NCCC1CCN(Cc2ccccc2)CC1)c1cc(=O)c2cc([N+](=O)[O-])ccc2o1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 408, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCC1CCN(Cc2ccccc2)CC1)c1cc(=O)c2cc([N+](=O)[O-])ccc2o1&quot;}, {&quot;mols2grid-id&quot;: 409, &quot;data-SMILES&quot;: &quot;Nc1ccc2oc(C(=O)NCCC3CCN(Cc4ccccc4)CC3)cc(=O)c2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 409, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Nc1ccc2oc(C(=O)NCCC3CCN(Cc4ccccc4)CC3)cc(=O)c2c1&quot;}, {&quot;mols2grid-id&quot;: 410, &quot;data-SMILES&quot;: &quot;COc1cc2oc(C(=O)NCCC3CCN(Cc4ccccc4)CC3)cc(=O)c2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 410, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2oc(C(=O)NCCC3CCN(Cc4ccccc4)CC3)cc(=O)c2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 411, &quot;data-SMILES&quot;: &quot;O=C(NCCCC1CCN(Cc2ccccc2)CC1)c1cc(=O)c2cc(O)ccc2o1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 411, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(NCCCC1CCN(Cc2ccccc2)CC1)c1cc(=O)c2cc(O)ccc2o1&quot;}, {&quot;mols2grid-id&quot;: 412, &quot;data-SMILES&quot;: &quot;COc1cc2oc(C(=O)NCCCC3CCN(Cc4ccccc4)CC3)cc(=O)c2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 412, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2oc(C(=O)NCCCC3CCN(Cc4ccccc4)CC3)cc(=O)c2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 413, &quot;data-SMILES&quot;: &quot;COc1cc2[nH]c(C(=O)NCCC3CCN(Cc4ccccc4)CC3)cc(=O)c2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 413, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2[nH]c(C(=O)NCCC3CCN(Cc4ccccc4)CC3)cc(=O)c2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 414, &quot;data-SMILES&quot;: &quot;CC(C)(C)c1cc(/C=C/C(=O)NCCC2CCN(Cc3ccccc3)CC2)cc(C(C)(C)C)c1O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 414, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)(C)c1cc(/C=C/C(=O)NCCC2CCN(Cc3ccccc3)CC2)cc(C(C)(C)C)c1O&quot;}, {&quot;mols2grid-id&quot;: 415, &quot;data-SMILES&quot;: &quot;CC(C)(C)c1cc(/C=C/C(=O)NCCC2CCN(Cc3ccccc3F)CC2)cc(C(C)(C)C)c1O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 415, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)(C)c1cc(/C=C/C(=O)NCCC2CCN(Cc3ccccc3F)CC2)cc(C(C)(C)C)c1O&quot;}, {&quot;mols2grid-id&quot;: 416, &quot;data-SMILES&quot;: &quot;CC1(C)C=Cc2c(ccc(C(=O)/C=C/c3ccc(O)cc3)c2O)O1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 416, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC1(C)C=Cc2c(ccc(C(=O)/C=C/c3ccc(O)cc3)c2O)O1&quot;}, {&quot;mols2grid-id&quot;: 417, &quot;data-SMILES&quot;: &quot;COc1cc(N)c(Cl)cc1C(=O)CCC1CCN(CC2CCCCC2)CC1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 417, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc(N)c(Cl)cc1C(=O)CCC1CCN(CC2CCCCC2)CC1&quot;}, {&quot;mols2grid-id&quot;: 418, &quot;data-SMILES&quot;: &quot;COc1ccc(C2=NN(C(C)=O)C(c3ccc(N4CCN(C)CC4)cc3)C2)cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 418, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc(C2=NN(C(C)=O)C(c3ccc(N4CCN(C)CC4)cc3)C2)cc1OC&quot;}, {&quot;mols2grid-id&quot;: 419, &quot;data-SMILES&quot;: &quot;S=C(NCc1ccccc1)NNc1c2c(nc3ccccc13)CCCC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 419, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: S=C(NCc1ccccc1)NNc1c2c(nc3ccccc13)CCCC2&quot;}, {&quot;mols2grid-id&quot;: 420, &quot;data-SMILES&quot;: &quot;COc1cc(NCc2ccc(Oc3c(N)cccc3Cl)cc2)cc(OC)c1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 420, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc(NCc2ccc(Oc3c(N)cccc3Cl)cc2)cc(OC)c1OC&quot;}, {&quot;mols2grid-id&quot;: 421, &quot;data-SMILES&quot;: &quot;NS(=O)(=O)c1ccc(C(=O)n2[nH]c(=O)c3c(F)cccc3c2=O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 421, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NS(=O)(=O)c1ccc(C(=O)n2[nH]c(=O)c3c(F)cccc3c2=O)cc1&quot;}, {&quot;mols2grid-id&quot;: 422, &quot;data-SMILES&quot;: &quot;NS(=O)(=O)c1ccc(C(=O)n2[nH]c(=O)c3cc(F)ccc3c2=O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 422, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NS(=O)(=O)c1ccc(C(=O)n2[nH]c(=O)c3cc(F)ccc3c2=O)cc1&quot;}, {&quot;mols2grid-id&quot;: 423, &quot;data-SMILES&quot;: &quot;NS(=O)(=O)c1ccc(C(=O)n2[nH]c(=O)c3c([N+](=O)[O-])cccc3c2=O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 423, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NS(=O)(=O)c1ccc(C(=O)n2[nH]c(=O)c3c([N+](=O)[O-])cccc3c2=O)cc1&quot;}, {&quot;mols2grid-id&quot;: 424, &quot;data-SMILES&quot;: &quot;NS(=O)(=O)c1ccc(C(=O)n2[nH]c(=O)c3cc([N+](=O)[O-])ccc3c2=O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 424, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NS(=O)(=O)c1ccc(C(=O)n2[nH]c(=O)c3cc([N+](=O)[O-])ccc3c2=O)cc1&quot;}, {&quot;mols2grid-id&quot;: 425, &quot;data-SMILES&quot;: &quot;NS(=O)(=O)c1ccc(C(=O)n2[nH]c(=O)c3ccc(C(=O)O)cc3c2=O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 425, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NS(=O)(=O)c1ccc(C(=O)n2[nH]c(=O)c3ccc(C(=O)O)cc3c2=O)cc1&quot;}, {&quot;mols2grid-id&quot;: 426, &quot;data-SMILES&quot;: &quot;CCOc1ccc(Cc2nc3cc(C(=O)N(CC)CC)ccc3n2CCCCCCNc2c3c(nc4ccccc24)CCCC3)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 426, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCOc1ccc(Cc2nc3cc(C(=O)N(CC)CC)ccc3n2CCCCCCNc2c3c(nc4ccccc24)CCCC3)cc1&quot;}, {&quot;mols2grid-id&quot;: 427, &quot;data-SMILES&quot;: &quot;CCOc1ccc(Cc2nc3cc(C(=O)NCCCNc4c5c(nc6ccccc46)CCCC5)ccc3n2CCC(C)C)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 427, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCOc1ccc(Cc2nc3cc(C(=O)NCCCNc4c5c(nc6ccccc46)CCCC5)ccc3n2CCC(C)C)cc1&quot;}, {&quot;mols2grid-id&quot;: 428, &quot;data-SMILES&quot;: &quot;CCOc1ccc(Cc2nc3cc(C(=O)NCCSSCCNc4c5c(nc6ccccc46)CCCC5)ccc3n2CCC(C)C)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 428, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCOc1ccc(Cc2nc3cc(C(=O)NCCSSCCNc4c5c(nc6ccccc46)CCCC5)ccc3n2CCC(C)C)cc1&quot;}, {&quot;mols2grid-id&quot;: 429, &quot;data-SMILES&quot;: &quot;Cc1ccc2oc(-c3ccc(OCCCCCCN4CCCCC4)cc3)cc(=O)c2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 429, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc2oc(-c3ccc(OCCCCCCN4CCCCC4)cc3)cc(=O)c2c1&quot;}, {&quot;mols2grid-id&quot;: 430, &quot;data-SMILES&quot;: &quot;FC(F)(F)c1ccc(CNC2CCN(Cc3ccccc3)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 430, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: FC(F)(F)c1ccc(CNC2CCN(Cc3ccccc3)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 431, &quot;data-SMILES&quot;: &quot;COc1cc2cc(NC(=O)[C@@H]3CCC[C@H](NCc4ccccc4)C3)c(=O)oc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 431, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(NC(=O)[C@@H]3CCC[C@H](NCc4ccccc4)C3)c(=O)oc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 432, &quot;data-SMILES&quot;: &quot;COc1cc2cc(NC(=O)[C@H]3CCC[C@@H](NCc4ccccc4)C3)c(=O)oc2cc1OC&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 432, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2cc(NC(=O)[C@H]3CCC[C@@H](NCc4ccccc4)C3)c(=O)oc2cc1OC&quot;}, {&quot;mols2grid-id&quot;: 433, &quot;data-SMILES&quot;: &quot;Fc1ccc(-c2nnc(N3CCN(c4ccccn4)CC3)o2)c(F)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 433, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Fc1ccc(-c2nnc(N3CCN(c4ccccn4)CC3)o2)c(F)c1&quot;}, {&quot;mols2grid-id&quot;: 434, &quot;data-SMILES&quot;: &quot;CN1CCCC[C@H]1c1ccc(-c2cccnc2)nc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 434, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN1CCCC[C@H]1c1ccc(-c2cccnc2)nc1&quot;}, {&quot;mols2grid-id&quot;: 435, &quot;data-SMILES&quot;: &quot;c1cnc(Nc2nnc(-c3cccc4ccccc34)o2)nc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 435, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1cnc(Nc2nnc(-c3cccc4ccccc34)o2)nc1&quot;}, {&quot;mols2grid-id&quot;: 436, &quot;data-SMILES&quot;: &quot;FC(F)(F)Oc1ccc(CNC2CCN(Cc3ccccc3)C2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 436, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: FC(F)(F)Oc1ccc(CNC2CCN(Cc3ccccc3)C2)cc1&quot;}, {&quot;mols2grid-id&quot;: 437, &quot;data-SMILES&quot;: &quot;COc1ccc2cc3[n+](cc2c1OCc1ccc(C(F)(F)F)cc1)CCc1cc2c(cc1-3)OCO2.[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 437, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2cc3[n+](cc2c1OCc1ccc(C(F)(F)F)cc1)CCc1cc2c(cc1-3)OCO2.[Br-]&quot;}, {&quot;mols2grid-id&quot;: 438, &quot;data-SMILES&quot;: &quot;COc1ccc2cc(C(=O)NCCC3CCN(Cc4ccccc4)CC3)ccc2c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 438, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc2cc(C(=O)NCCC3CCN(Cc4ccccc4)CC3)ccc2c1&quot;}, {&quot;mols2grid-id&quot;: 439, &quot;data-SMILES&quot;: &quot;COc1cc(CNC(=O)CCCCCCNc2c3c(nc4cc(Cl)ccc24)CC2C=C(C)CC3C2)ccc1O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 439, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc(CNC(=O)CCCCCCNc2c3c(nc4cc(Cl)ccc24)CC2C=C(C)CC3C2)ccc1O&quot;}, {&quot;mols2grid-id&quot;: 440, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1O)CCC(C)(CCNCCCCCCCCNc1c3c(nc4cc(Cl)ccc14)CCCC3)O2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 440, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1O)CCC(C)(CCNCCCCCCCCNc1c3c(nc4cc(Cl)ccc14)CCCC3)O2&quot;}, {&quot;mols2grid-id&quot;: 441, &quot;data-SMILES&quot;: &quot;CCOC(=O)c1c(C)nc(N2CCN(S(=O)(=O)c3ccc(NC(C)=O)c(Cl)c3)CC2)nc1-c1ccc(OC)c(OC)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 441, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCOC(=O)c1c(C)nc(N2CCN(S(=O)(=O)c3ccc(NC(C)=O)c(Cl)c3)CC2)nc1-c1ccc(OC)c(OC)c1&quot;}, {&quot;mols2grid-id&quot;: 442, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)/C(=C/c1ccc(N3CC[N+](C)(Cc4ccccc4)CC3)cc1)C2.[Cl-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 442, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)/C(=C/c1ccc(N3CC[N+](C)(Cc4ccccc4)CC3)cc1)C2.[Cl-]&quot;}, {&quot;mols2grid-id&quot;: 443, &quot;data-SMILES&quot;: &quot;COc1cc2c(cc1OC)C(=O)/C(=C/c1ccc(N3CC[N+](C)(Cc4cccc(Cl)c4)CC3)cc1)C2.[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 443, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(cc1OC)C(=O)/C(=C/c1ccc(N3CC[N+](C)(Cc4cccc(Cl)c4)CC3)cc1)C2.[Br-]&quot;}, {&quot;mols2grid-id&quot;: 444, &quot;data-SMILES&quot;: &quot;CCN(CCCCOc1ccc(-c2cc(=O)c3c(O)cc(OCCCCN(CC)Cc4ccccc4)cc3o2)cc1)Cc1ccccc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 444, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CCCCOc1ccc(-c2cc(=O)c3c(O)cc(OCCCCN(CC)Cc4ccccc4)cc3o2)cc1)Cc1ccccc1&quot;}, {&quot;mols2grid-id&quot;: 445, &quot;data-SMILES&quot;: &quot;COC(=O)/C(=N\\\\Nc1ccc(C)cc1)C(=O)C(F)(F)F&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 445, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COC(=O)/C(=N\\\\Nc1ccc(C)cc1)C(=O)C(F)(F)F&quot;}, {&quot;mols2grid-id&quot;: 446, &quot;data-SMILES&quot;: &quot;Cc1ccc(S(=O)(=O)SCc2ccccc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 446, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc(S(=O)(=O)SCc2ccccc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 447, &quot;data-SMILES&quot;: &quot;Cc1ccc(S(=O)(=O)SCc2ccc(F)cc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 447, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc(S(=O)(=O)SCc2ccc(F)cc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 448, &quot;data-SMILES&quot;: &quot;Cc1ccc(S(=O)(=O)SCc2ccc(Cl)cc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 448, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc(S(=O)(=O)SCc2ccc(Cl)cc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 449, &quot;data-SMILES&quot;: &quot;Cc1ccc(S(=O)(=O)SCc2ccc([N+](=O)[O-])cc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 449, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc(S(=O)(=O)SCc2ccc([N+](=O)[O-])cc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 450, &quot;data-SMILES&quot;: &quot;Cc1ccc(S(=O)(=O)SCc2ccc(C#N)cc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 450, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc(S(=O)(=O)SCc2ccc(C#N)cc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 451, &quot;data-SMILES&quot;: &quot;Cc1ccc(S(=O)(=O)SCc2ccc(C(F)(F)F)cc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 451, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc(S(=O)(=O)SCc2ccc(C(F)(F)F)cc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 452, &quot;data-SMILES&quot;: &quot;Cc1ccc(S(=O)(=O)SCc2ccc(OC(F)(F)F)cc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 452, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc(S(=O)(=O)SCc2ccc(OC(F)(F)F)cc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 453, &quot;data-SMILES&quot;: &quot;COc1ccc(CSS(=O)(=O)c2ccc(C)cc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 453, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1ccc(CSS(=O)(=O)c2ccc(C)cc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 454, &quot;data-SMILES&quot;: &quot;Cc1ccc(S(=O)(=O)SCc2ccc(C(C)C)cc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 454, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc(S(=O)(=O)SCc2ccc(C(C)C)cc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 455, &quot;data-SMILES&quot;: &quot;Cc1ccc(S(=O)(=O)SCc2ccc(C(C)(C)C)cc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 455, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: Cc1ccc(S(=O)(=O)SCc2ccc(C(C)(C)C)cc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 456, &quot;data-SMILES&quot;: &quot;CC1=CC2Cc3nc4cc(Cl)ccc4c(NCCCCCCNC(=O)[C@@H](N)Cc4c[nH]c5ccccc45)c3C(C1)C2.Cl.Cl&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 456, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC1=CC2Cc3nc4cc(Cl)ccc4c(NCCCCCCNC(=O)[C@@H](N)Cc4c[nH]c5ccccc45)c3C(C1)C2.Cl.Cl&quot;}, {&quot;mols2grid-id&quot;: 457, &quot;data-SMILES&quot;: &quot;c1ccc(CN2CCC(CCNc3cc4c(nn3)-c3ccccc3CCCC4)CC2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 457, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: c1ccc(CN2CCC(CCNc3cc4c(nn3)-c3ccccc3CCCC4)CC2)cc1&quot;}, {&quot;mols2grid-id&quot;: 458, &quot;data-SMILES&quot;: &quot;COc1cc2c(c(CO)c1OC)C[C@H]1c3c(cc4c(c3OC)OCO4)CC[N+]1=C2.O=C([O-])C(F)(F)F&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 458, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(c(CO)c1OC)C[C@H]1c3c(cc4c(c3OC)OCO4)CC[N+]1=C2.O=C([O-])C(F)(F)F&quot;}, {&quot;mols2grid-id&quot;: 459, &quot;data-SMILES&quot;: &quot;COc1cc2c(c3c1OCOC3)C[C@H]1c3c(cc4c(c3OC)OCO4)CC[N+]1=C2.O=C([O-])C(F)(F)F&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 459, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(c3c1OCOC3)C[C@H]1c3c(cc4c(c3OC)OCO4)CC[N+]1=C2.O=C([O-])C(F)(F)F&quot;}, {&quot;mols2grid-id&quot;: 460, &quot;data-SMILES&quot;: &quot;COc1cc2c[n+]3c(cc2c(CO)c1OC)-c1c(cc2c(c1OC)OCO2)CC3&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 460, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c[n+]3c(cc2c(CO)c1OC)-c1c(cc2c(c1OC)OCO2)CC3&quot;}, {&quot;mols2grid-id&quot;: 461, &quot;data-SMILES&quot;: &quot;COc1cc2c(c3c1OCOC3)C[C@H]1c3c(cc4c(c3OC)OCO4)CCN1C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 461, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(c3c1OCOC3)C[C@H]1c3c(cc4c(c3OC)OCO4)CCN1C2&quot;}, {&quot;mols2grid-id&quot;: 462, &quot;data-SMILES&quot;: &quot;CN(CCCC(F)F)Cc1ccc(COc2ccc3c(CO)cc(=O)oc3c2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 462, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CN(CCCC(F)F)Cc1ccc(COc2ccc3c(CO)cc(=O)oc3c2)cc1&quot;}, {&quot;mols2grid-id&quot;: 463, &quot;data-SMILES&quot;: &quot;NS(=O)(=O)c1ccc(N2N=C(c3cccs3)CC2c2ccc(Br)cc2)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 463, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NS(=O)(=O)c1ccc(N2N=C(c3cccs3)CC2c2ccc(Br)cc2)cc1&quot;}, {&quot;mols2grid-id&quot;: 464, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](CCC[n+]2ccc(/C=N/O)c(F)c2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 464, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](CCC[n+]2ccc(/C=N/O)c(F)c2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 465, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](CCC[n+]2cc(F)c(/C=N/O)c(F)c2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 465, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](CCC[n+]2cc(F)c(/C=N/O)c(F)c2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 466, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](CCCC[n+]2ccc(/C=N/O)c(F)c2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 466, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](CCCC[n+]2ccc(/C=N/O)c(F)c2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 467, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](CCCC[n+]2cc(F)c(/C=N/O)c(F)c2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 467, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](CCCC[n+]2cc(F)c(/C=N/O)c(F)c2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 468, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](C/C=C/C[n+]2ccc(/C=N/O)c(F)c2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 468, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](C/C=C/C[n+]2ccc(/C=N/O)c(F)c2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 469, &quot;data-SMILES&quot;: &quot;NC(=O)c1cc[n+](C/C=C/C[n+]2cc(F)c(/C=N/O)c(F)c2)cc1.[Br-].[Br-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 469, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NC(=O)c1cc[n+](C/C=C/C[n+]2cc(F)c(/C=N/O)c(F)c2)cc1.[Br-].[Br-]&quot;}, {&quot;mols2grid-id&quot;: 470, &quot;data-SMILES&quot;: &quot;NS(=O)(=O)c1ccc(/N=C/c2cc(Br)cc(Br)c2O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 470, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NS(=O)(=O)c1ccc(/N=C/c2cc(Br)cc(Br)c2O)cc1&quot;}, {&quot;mols2grid-id&quot;: 471, &quot;data-SMILES&quot;: &quot;NS(=O)(=O)c1ccc(NCc2cccc(Br)c2O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 471, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NS(=O)(=O)c1ccc(NCc2cccc(Br)c2O)cc1&quot;}, {&quot;mols2grid-id&quot;: 472, &quot;data-SMILES&quot;: &quot;NS(=O)(=O)c1ccc(/N=C/c2cc(Br)cc(Cl)c2O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 472, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NS(=O)(=O)c1ccc(/N=C/c2cc(Br)cc(Cl)c2O)cc1&quot;}, {&quot;mols2grid-id&quot;: 473, &quot;data-SMILES&quot;: &quot;NS(=O)(=O)c1ccc(NCc2cccc(Cl)c2O)cc1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 473, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: NS(=O)(=O)c1ccc(NCc2cccc(Cl)c2O)cc1&quot;}, {&quot;mols2grid-id&quot;: 474, &quot;data-SMILES&quot;: &quot;CCCCCCCNC(=O)Oc1ccc2c(c1)[C@]1(C)CCN(C)[C@@H]1N2C&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 474, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCCCCCCNC(=O)Oc1ccc2c(c1)[C@]1(C)CCN(C)[C@@H]1N2C&quot;}, {&quot;mols2grid-id&quot;: 475, &quot;data-SMILES&quot;: &quot;COc1cc2c(c(OC)c1)CC(NC(=O)OCc1ccccc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 475, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cc2c(c(OC)c1)CC(NC(=O)OCc1ccccc1)C2&quot;}, {&quot;mols2grid-id&quot;: 476, &quot;data-SMILES&quot;: &quot;CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 476, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1&quot;}, {&quot;mols2grid-id&quot;: 477, &quot;data-SMILES&quot;: &quot;CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 477, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O&quot;}, {&quot;mols2grid-id&quot;: 478, &quot;data-SMILES&quot;: &quot;COc1cccc2c1CCC(NC(=O)OCc1ccccc1)C2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 478, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: COc1cccc2c1CCC(NC(=O)OCc1ccccc1)C2&quot;}, {&quot;mols2grid-id&quot;: 479, &quot;data-SMILES&quot;: &quot;CCN(CC)C(=O)OC1C[N+]2(C)CCC1CC2.[I-]&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 479, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: CCN(CC)C(=O)OC1C[N+]2(C)CCC1CC2.[I-]&quot;}, {&quot;mols2grid-id&quot;: 480, &quot;data-SMILES&quot;: &quot;O=C(Nc1ccccc1)OC1CN2CCC1CC2&quot;, &quot;data-img&quot;: null, &quot;data-mols2grid-id-copy&quot;: 480, &quot;mols2grid-tooltip&quot;: &quot;&lt;strong&gt;SMILES&lt;/strong&gt;: O=C(Nc1ccccc1)OC1CN2CCC1CC2&quot;}]);\n// filter\nif (window.parent.mols2grid_lists === undefined) {\n    window.parent.mols2grid_lists = {};\n}\nwindow.parent.mols2grid_lists[&quot;default&quot;] = listObj;\n\n\n// selection\nclass MolStorage extends Map {\n    multi_set(_id, _smiles) {\n        for (let i=0; i &lt; _id.length; i++) {\n            this.set(_id[i], _smiles[i]);\n        }\n    }\n    multi_del(_id) {\n        for (let i=0; i &lt; _id.length; i++) {\n            this.delete(_id[i]);\n        };\n    }\n    to_dict() {\n        var content = &quot;{&quot;;\n        for (let [key, value] of this) {\n            content += key + &quot;:&quot; + JSON.stringify(value) + &quot;,&quot;;\n        }\n        content = content.length &gt; 1 ? content.slice(0, -1) : content;\n        content += &quot;}&quot;;\n        return content\n    }\n    download_smi(fileName) {\n        var content = &quot;&quot;;\n        for (let [key, value] of this) {\n            content += value + &quot; &quot; + key + &quot;\\n&quot;;\n        }\n        var a = document.createElement(&quot;a&quot;);\n        var file = new Blob([content], {type: &quot;text/plain&quot;});\n        a.href = URL.createObjectURL(file);\n        a.download = fileName;\n        a.click();\n        a.remove();\n    }\n}\nvar SELECTION = new MolStorage();\n\n\n\n// kernel\nfunction add_selection(grid_id, _id, smiles) {\n    SELECTION.multi_set(_id, smiles);\n    let model = window.parent[&quot;_MOLS2GRID_&quot; + grid_id];\n    if (model) {\n        model.set(&quot;selection&quot;, SELECTION.to_dict());\n        model.save_changes();\n    }\n}\nfunction del_selection(grid_id, _id) {\n    SELECTION.multi_del(_id);\n    let model = window.parent[&quot;_MOLS2GRID_&quot; + grid_id];\n    if (model) {\n        model.set(&quot;selection&quot;, SELECTION.to_dict());\n        model.save_changes();\n    }\n}\nif (window.parent.IPython !== undefined) {\n    // Jupyter notebook\n    var kernel_env = &quot;jupyter&quot;;\n} else if (window.parent.google !== undefined) {\n    // Google colab\n    var kernel_env = &quot;colab&quot;;\n} else {\n    var kernel_env = null;\n}\n\n\n\n\n// sort\nvar sort_field = &quot;mols2grid-id&quot;;\nvar sort_order = &quot;asc&quot;;\nfunction mols2gridSortFunction(itemA, itemB, options) {\n    var x = itemA.values()[options.valueName];\n    var y = itemB.values()[options.valueName];\n    if (typeof x === &quot;number&quot;) {\n        if (isFinite(x - y)) {\n            return x - y; \n        } else {\n            return isFinite(x) ? -1 : 1;\n        }\n    } else {\n        x = x.toLowerCase();\n        y = y.toLowerCase();\n        return (x &lt; y) ? -1: (x &gt; y) ? 1: 0;\n    }\n}\nfunction checkboxSort(itemA, itemB, options) {\n    if (itemA.elm !== undefined) {\n        var checkedA = itemA.elm.firstChild.checked;\n        if (itemB.elm !== undefined) {\n            var checkedB = itemB.elm.firstChild.checked;\n            if (checkedA &amp;&amp; !checkedB) {\n                return -1;\n            } else if (!checkedA &amp;&amp; checkedB) {\n                return 1;\n            } else {\n                return 0;\n            }\n        } else {\n            return -1;\n        }\n    } else if (itemB.elm !== undefined) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n$(&#x27;#mols2grid button.sort-btn&#x27;).click(function(e) {\n    var _field = $(this).attr(&quot;data-name&quot;);\n    if (_field == sort_field) {\n        $(this).removeClass(&quot;arrow-&quot; + sort_order)\n        sort_order = (sort_order === &quot;desc&quot;) ? &quot;asc&quot; : &quot;desc&quot;;\n    } else {\n        $(&#x27;#mols2grid button.sort-btn.active&#x27;).removeClass(&quot;active arrow-&quot; + sort_order);\n        sort_order = &quot;asc&quot;;\n        sort_field = _field;\n        $(this).addClass(&quot;active&quot;);\n    }\n    $(this).addClass(&quot;arrow-&quot; + sort_order)\n    if (sort_field == &quot;checkbox&quot;) {\n        listObj.sort(&quot;mols2grid-id&quot;, {order: sort_order, sortFunction: checkboxSort});\n    } else {\n        listObj.sort(_field, {order: sort_order, sortFunction: mols2gridSortFunction});\n    }\n});\n\n\n\n\n// tooltips\n$.fn.tooltip.Constructor.Default.whiteList.span = [&#x27;style&#x27;]\nlistObj.on(&quot;updated&quot;, function (list) {\n    $(function () {\n        // hide previous popovers\n        $(&#x27;#mols2grid a.page-link&#x27;).click(function(e) {\n            $(&#x27;.mols2grid-tooltip[data-toggle=&quot;popover&quot;]&#x27;).popover(&#x27;hide&#x27;)\n        });\n        // create new popover\n        $(&#x27;.mols2grid-tooltip[data-toggle=&quot;popover&quot;]&#x27;).popover({\n            placement: &#x27;bottom&#x27;,\n            trigger: &#x27;click hover&#x27;,\n            html: true,\n            sanitize: false,\n        });\n    })\n});\n\n\n\n// selection modifyers and export options\n// check all\n$(&#x27;#btn-chkbox-all&#x27;).click(function (e) {\n    var _id = [];\n    var _smiles = [];\n    listObj.items.forEach(function (item) {\n        if (item.elm) {\n            item.elm.getElementsByTagName(&quot;input&quot;)[0].checked = true;\n        } else {\n            item.show()\n            item.elm.getElementsByTagName(&quot;input&quot;)[0].checked = true;\n            item.hide()\n        }\n        _id.push(item.values()[&quot;mols2grid-id&quot;]);\n        _smiles.push(item.values()[&quot;data-SMILES&quot;]);\n    });\n    add_selection(&quot;default&quot;, _id, _smiles);\n});\n// check matching\n$(&#x27;#btn-chkbox-match&#x27;).click(function (e) {\n    var _id = [];\n    var _smiles = [];\n    listObj.matchingItems.forEach(function (item) {\n        if (item.elm) {\n            item.elm.getElementsByTagName(&quot;input&quot;)[0].checked = true;\n        } else {\n            item.show()\n            item.elm.getElementsByTagName(&quot;input&quot;)[0].checked = true;\n            item.hide()\n        }\n        _id.push(item.values()[&quot;mols2grid-id&quot;]);\n        _smiles.push(item.values()[&quot;data-SMILES&quot;]);\n    });\n    add_selection(&quot;default&quot;, _id, _smiles);\n});\n// uncheck all\n$(&#x27;#btn-chkbox-none&#x27;).click(function (e) {\n    var _id = [];\n    listObj.items.forEach(function (item) {\n        if (item.elm) {\n            item.elm.getElementsByTagName(&quot;input&quot;)[0].checked = false;\n        } else {\n            item.show()\n            item.elm.getElementsByTagName(&quot;input&quot;)[0].checked = false;\n            item.hide()\n        }\n        _id.push(item.values()[&quot;mols2grid-id&quot;]);\n    });\n    del_selection(&quot;default&quot;, _id);\n});\n// invert\n$(&#x27;#btn-chkbox-invert&#x27;).click(function (e) {\n    var _id_add = [];\n    var _id_del = [];\n    var _smiles = [];\n    listObj.items.forEach(function (item) {\n        if (item.elm) {\n            var chkbox = item.elm.getElementsByTagName(&quot;input&quot;)[0]\n            chkbox.checked = !chkbox.checked;\n        } else {\n            item.show()\n            var chkbox = item.elm.getElementsByTagName(&quot;input&quot;)[0]\n            chkbox.checked = !chkbox.checked;\n            item.hide()\n        }\n        if (chkbox.checked) {\n            _id_add.push(item.values()[&quot;mols2grid-id&quot;]);\n            _smiles.push(item.values()[&quot;data-SMILES&quot;]);\n        } else {\n            _id_del.push(item.values()[&quot;mols2grid-id&quot;]);\n        }\n    });\n    del_selection(&quot;default&quot;, _id_del);\n    add_selection(&quot;default&quot;, _id_add, _smiles);\n});\n// copy to clipboard\n$(&quot;#btn-chkbox-copy&quot;).click(function(e) {\n    navigator.clipboard.writeText(SELECTION.to_dict());\n});\n// export smiles\n$(&quot;#btn-chkbox-dlsmi&quot;).click(function(e) {\n    SELECTION.download_smi(&quot;selection.smi&quot;);\n});\n// export CSV\n$(&quot;#btn-chkbox-dlcsv&quot;).click(function(e) {\n    var sep = &quot;\\t&quot;\n    // same order as subset + tooltip\n    var columns = Array.from(listObj.items[0].elm.querySelectorAll(&quot;div.data&quot;))\n                       .map(elm =&gt; elm.classList[1]);\n    // remove &#x27;data-&#x27;\n    var header = columns.map(name =&gt; name.slice(5));\n    // csv content\n    header = [&quot;index&quot;].concat(header).join(sep);\n    var content = header + &quot;\\n&quot;;\n    for (let [index, smiles] of SELECTION.entries()) {\n        var data = listObj.items[index].values();\n        content += index;\n        columns.forEach((key) =&gt; {\n            content += sep + data[key];\n        })\n        content += &quot;\\n&quot;;\n    }\n    var a = document.createElement(&quot;a&quot;);\n    var file = new Blob([content], {type: &quot;text/csv&quot;});\n    a.href = URL.createObjectURL(file);\n    a.download = &quot;selection.csv&quot;;\n    a.click();\n    a.remove();\n});\n// update selection on checkbox click\nlistObj.on(&quot;updated&quot;, function (list) {\n    $(&quot;input:checkbox&quot;).change(function() {\n        var _id = parseInt($(this).closest(&quot;.cell&quot;).attr(&quot;data-mols2grid-id&quot;));\n        if (this.checked) {\n            var _smiles = $($(this).siblings(&quot;.data-SMILES&quot;)[0]).text();\n            add_selection(&quot;default&quot;, [_id], [_smiles]);\n        } else {\n            del_selection(&quot;default&quot;, [_id]);\n        }\n    }); \n});\n\n\n\n\n\n// generate images for the currently displayed molecules\nvar draw_opts = {&quot;width&quot;: 160, &quot;height&quot;: 120};\nvar json_draw_opts = JSON.stringify(draw_opts);\n\nvar smarts_matches = {};\n\n// Load RDKit\nwindow\n.initRDKitModule()\n.then(function(RDKit) {\n    console.log(&#x27;RDKit version: &#x27;, RDKit.version());\n    window.RDKit = RDKit;\n    window.RDKitModule = RDKit;\n\n    // search bar\n    function SmartsSearch(query, columns) {\n    var smiles_col = columns[0];\n    smarts_matches = {};\n    var query = $(&#x27;#mols2grid #searchbar&#x27;).val();\n    var qmol = RDKit.get_qmol(query);\n    if (qmol.is_valid()) {\n        listObj.items.forEach(function (item) {\n            var smiles = item.values()[smiles_col]\n            var mol = RDKit.get_mol(smiles, &#x27;{&quot;removeHs&quot;: false }&#x27;);\n            if (mol.is_valid()) {\n                var results = mol.get_substruct_matches(qmol);\n                if (results === &quot;\\{\\}&quot;) {\n                    item.found = false;\n                } else {\n                    item.found = true;\n                    \n                    results = JSON.parse(results);\n                    \n                    var highlights = {&quot;atoms&quot;: [], &quot;bonds&quot;: []};\n                    results.forEach(function (match) {\n                        highlights[&quot;atoms&quot;].push(...match.atoms)\n                        highlights[&quot;bonds&quot;].push(...match.bonds)\n                    });\n                    \n                    var index = item.values()[&quot;mols2grid-id&quot;];\n                    smarts_matches[index] = highlights;\n                    \n                }\n            } else {\n                item.found = false;\n            }\n            mol.delete();\n        });\n    }\n    qmol.delete();\n}\nvar search_type = &quot;Text&quot;;\n$(&#x27;#mols2grid .search-btn&#x27;).click(function() {\n    search_type = $(this).text();\n    $(&#x27;#mols2grid button.search-btn.active&#x27;).removeClass(&quot;active&quot;);\n    $(this).addClass(&quot;active&quot;);\n});\n$(&#x27;#mols2grid #searchbar&#x27;).on(&quot;keyup&quot;, function(e) {\n    var query = e.target.value;\n    if (search_type === &quot;Text&quot;) {\n        smarts_matches = {};\n        listObj.search(query, [&#x27;data-mols2grid-id&#x27;, &#x27;data-SMILES&#x27;]);\n    } else {\n        listObj.search(query, [&quot;data-SMILES&quot;], SmartsSearch);\n    }\n});\n\n    \n    // generate images for the currently displayed molecules\nRDKit.prefer_coordgen(true);\nfunction draw_mol(smiles, index, template_mol) {\n    var mol = RDKit.get_mol(smiles, &#x27;{&quot;removeHs&quot;: false }&#x27;);\n    var svg = &quot;&quot;;\n    if (mol.is_valid()) {\n        var highlights = smarts_matches[index];\n        if (highlights) {\n            var details = Object.assign({}, draw_opts, highlights);\n            details = JSON.stringify(details);\n            mol.generate_aligned_coords(template_mol, true);\n        } else {\n            var details = json_draw_opts;\n        }\n        svg = mol.get_svg_with_highlights(details);\n    }\n    mol.delete();\n    if (svg == &quot;&quot;) {\n        return &#x27;&lt;svg width=&quot;160&quot; height=&quot;120&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 160 120&quot;&gt;&lt;/svg&gt;&#x27;;\n    }\n    return svg;\n}\nlistObj.on(&quot;updated&quot;, function (list) {\n    var query = $(&#x27;#mols2grid #searchbar&#x27;).val();\n    var template_mol;\n    if (query === &quot;&quot;) {\n        smarts_matches = {};\n        template_mol = null;\n    } else {\n        template_mol = RDKit.get_qmol(query);\n        template_mol.set_new_coords(true);\n    }\n    $(&#x27;#mols2grid .cell&#x27;).each(function() {\n        var $t = $(this);\n        var smiles = $t.children(&quot;.data-SMILES&quot;).first().text();\n        var index = parseInt(this.getAttribute(&quot;data-mols2grid-id&quot;));\n        var svg = draw_mol(smiles, index, template_mol);\n        $t.children(&quot;.data-img&quot;).html(svg);\n    });\n    if (template_mol) {\n        template_mol.delete();\n    }\n});\n    \n\n    // trigger update to activate tooltips, draw images, setup callbacks...\n    listObj.update();\n    // resize iframe to fit content\n    if (window.frameElement) {\n        fit_height(window.frameElement);\n    }\n});\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\">\n</iframe>\n```\n:::\n:::\n\n\n<br>\n\n##### **Detect outliers**\n\nPlotting a histogram to see the distribution of pKi values first.\n\n::: {.cell execution_count=20}\n``` {.python .cell-code}\ndtree_san_df.hist(column = \"pKi\")\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```\narray([[<AxesSubplot: title={'center': 'pKi'}>]], dtype=object)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](Data_prep_2_files/figure-html/cell-21-output-2.png){width=575 height=431}\n:::\n:::\n\n\nI read a bit about Dixon's Q test and realised that there were a few required assumptions prior to using this test, and the current dataset used here (dtree_san_df) might not fit the requirements, which were:\n\n-   normally distributed data\n-   a small sample size e.g. between 3 and 10, which was originally stated in this paper [@dean1951].\n\nI've also decided that rather than showing Python code for Dixon's Q test myself, I would attach a few examples from others instead, for example, [Q test from Plotly](https://plotly.com/python/v3/outlier-test/) and [Dixon's Q test for outlier identification -- a questionable practice](https://sebastianraschka.com/Articles/2014_dixon_test.html), since this dataset here wasn't quite normally distributed as shown from the histogram above.\n\n::: {.cell execution_count=21}\n``` {.python .cell-code}\ndtree_san_df.boxplot(column = \"pKi\")\n\n# the boxplot version below shows a blank background\n# rather than above version with horizontal grid lines\n#dtree_san_df.plot.box(column = \"pKi\")\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```\n<AxesSubplot: >\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](Data_prep_2_files/figure-html/cell-22-output-2.png){width=566 height=411}\n:::\n:::\n\n\nI also used Pandas' built-in boxplot in addition to the histogram to show the possible outliers within the pKi values. Clearly, the outliers for pKi values appeared to be above 10. I also didn't remove these outliers completely due to the dataset itself wasn't quite in a Gaussian distribution (they might not be true outliers).\n\n<br>\n\n##### **Calculate RDKit 2D molecular descriptors**\n\nI've explored a few different ways to compute molecular descriptors, essentially RDKit was used as the main library to do this (there might be other options via other programming languages, but I was only exploring RDKit-based methods via Python for now). A [blog post](https://drzinph.com/rdkit_2d-descriptors-in-python-part-4/) I've come across on calculating RDKit 2D molecular descriptors has explained it well, it gave details about how to bundle the functions together in a class (the idea of building a small library yourself to be used in projects was quite handy). I've also read RDKit's documentations and also the ones from Datamol. So rather than re-inventing the wheels of all the RDKit code, I've opted to use only a small chunk of RDKit code as a demonstration, then followed by Datamol's version to compute the 2D descriptors, since there were already a few really well-explained blog posts about this. One of the examples was this useful [descriptor calculation tutorial](https://greglandrum.github.io/rdkit-blog/posts/2022-12-23-descriptor-tutorial.html) by Greg Landrum.\n\n\n\n<br>\n\n###### **RDKit code**\n\nWith the lastest format of the dtree_san_df, it already included a RDKit molecule column (named \"rdkit_mol\"), so this meant I could go ahead with the calculations. So here I used RDKit's Descriptors.CalcMolDescriptors() to calculate the 2D descriptors - note: there might be more code variations depending on needs, this was just a small example.\n\n::: {.cell execution_count=22}\n``` {.python .cell-code}\n# Run descriptor calculations on mol_list (created earlier)\n# and save as a new list\nmol_rdkit_ls = [Descriptors.CalcMolDescriptors(mol) for mol in mol_list]\n\n# Convert the list into a dataframe\ndf_rdkit_2d = pd.DataFrame(mol_rdkit_ls)\nprint(df_rdkit_2d.shape)\ndf_rdkit_2d.head(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(481, 209)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>MaxAbsEStateIndex</th>\n      <th>MaxEStateIndex</th>\n      <th>MinAbsEStateIndex</th>\n      <th>MinEStateIndex</th>\n      <th>qed</th>\n      <th>MolWt</th>\n      <th>HeavyAtomMolWt</th>\n      <th>ExactMolWt</th>\n      <th>NumValenceElectrons</th>\n      <th>NumRadicalElectrons</th>\n      <th>...</th>\n      <th>fr_sulfide</th>\n      <th>fr_sulfonamd</th>\n      <th>fr_sulfone</th>\n      <th>fr_term_acetylene</th>\n      <th>fr_tetrazole</th>\n      <th>fr_thiazole</th>\n      <th>fr_thiocyan</th>\n      <th>fr_thiophene</th>\n      <th>fr_unbrch_alkane</th>\n      <th>fr_urea</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>9.261910</td>\n      <td>9.261910</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.662462</td>\n      <td>246.148</td>\n      <td>230.020</td>\n      <td>245.041526</td>\n      <td>74</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6.509708</td>\n      <td>6.509708</td>\n      <td>0.547480</td>\n      <td>0.547480</td>\n      <td>0.763869</td>\n      <td>298.817</td>\n      <td>279.665</td>\n      <td>298.123676</td>\n      <td>108</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6.199769</td>\n      <td>6.199769</td>\n      <td>0.953981</td>\n      <td>0.953981</td>\n      <td>0.706488</td>\n      <td>198.269</td>\n      <td>184.157</td>\n      <td>198.115698</td>\n      <td>76</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows × 209 columns</p>\n</div>\n```\n:::\n:::\n\n\nIn total, it generated 209 descriptors. \n\n<br>\n\n###### **Datamol code**\n\nThen I tested Datamol's code on this as shown below.\n\n::: {.cell execution_count=23}\n``` {.python .cell-code}\n# Datamol's batch descriptor code for a list of compounds\ndtree_san_df_dm = dm.descriptors.batch_compute_many_descriptors(mol_list)\nprint(dtree_san_df_dm.shape)\ndtree_san_df_dm.head(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(481, 22)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=23}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>mw</th>\n      <th>fsp3</th>\n      <th>n_lipinski_hba</th>\n      <th>n_lipinski_hbd</th>\n      <th>n_rings</th>\n      <th>n_hetero_atoms</th>\n      <th>n_heavy_atoms</th>\n      <th>n_rotatable_bonds</th>\n      <th>n_radical_electrons</th>\n      <th>tpsa</th>\n      <th>...</th>\n      <th>sas</th>\n      <th>n_aliphatic_carbocycles</th>\n      <th>n_aliphatic_heterocyles</th>\n      <th>n_aliphatic_rings</th>\n      <th>n_aromatic_carbocycles</th>\n      <th>n_aromatic_heterocyles</th>\n      <th>n_aromatic_rings</th>\n      <th>n_saturated_carbocycles</th>\n      <th>n_saturated_heterocyles</th>\n      <th>n_saturated_rings</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>245.041526</td>\n      <td>0.400000</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>13</td>\n      <td>2</td>\n      <td>0</td>\n      <td>20.23</td>\n      <td>...</td>\n      <td>3.185866</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>298.123676</td>\n      <td>0.388889</td>\n      <td>2</td>\n      <td>2</td>\n      <td>4</td>\n      <td>3</td>\n      <td>21</td>\n      <td>1</td>\n      <td>0</td>\n      <td>38.91</td>\n      <td>...</td>\n      <td>4.331775</td>\n      <td>2</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>198.115698</td>\n      <td>0.307692</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>2</td>\n      <td>15</td>\n      <td>0</td>\n      <td>0</td>\n      <td>38.91</td>\n      <td>...</td>\n      <td>2.014719</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows × 22 columns</p>\n</div>\n```\n:::\n:::\n\n\nThere were a total of 22 molecular descriptors generated, which seemed more like what I might use for the decision tree model. The limitation with this batch descriptor code was that the molecular features were pre-selected, so if other types were needed, it would be the best to go for RDKit code or look into other Datamol descriptor code that allow users to specify features. The types of descriptors were shown below.\n\n::: {.cell execution_count=24}\n``` {.python .cell-code}\ndtree_san_df_dm.columns\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```\nIndex(['mw', 'fsp3', 'n_lipinski_hba', 'n_lipinski_hbd', 'n_rings',\n       'n_hetero_atoms', 'n_heavy_atoms', 'n_rotatable_bonds',\n       'n_radical_electrons', 'tpsa', 'qed', 'clogp', 'sas',\n       'n_aliphatic_carbocycles', 'n_aliphatic_heterocyles',\n       'n_aliphatic_rings', 'n_aromatic_carbocycles', 'n_aromatic_heterocyles',\n       'n_aromatic_rings', 'n_saturated_carbocycles',\n       'n_saturated_heterocyles', 'n_saturated_rings'],\n      dtype='object')\n```\n:::\n:::\n\n\n<br>\n\n##### **Combine dataframes**\n\nThe trickier part for data preprocessing was actually trying to merge, join or concatenate dataframes of the preprocessed dataframe (dtree_san_df) and the dataframe from Datamol's descriptor code (dtree_san_df_dm). \n\nInitially, I tried using all of Pandas' code of merge/join/concat() dataframes. They all failed to create the correct final combined dataframe with too many rows generated, with one run actually created more than 500 rows (maximum should be 481 rows). One of the possible reasons for this could be that some of the descriptors had zeros generated as results for some of the compounds, and when combining dataframes using Pandas code like the ones mentioned here, they might cause unexpected results (as suggested by Pandas, these code were not exactly equivalent to SQL joins). So I looked into different ways, and while there were no other common columns for both dataframes, the index column seemed to be the only one that correlated both.\n\nI also found out after going back to the previous steps that when I applied the compound preprocessing function from Datamol, the index of the resultant dataframe was changed to start from 1 (rather than zero). Because of this, I tried re-setting the index of dtree_san_df first, then dropped the index column, followed by re-setting the index again to ensure it started at zero, which has worked. So now the dtree_san_df would have exactly the same index as the one for dtree_san_df_dm.\n\n::: {.cell execution_count=25}\n``` {.python .cell-code}\n# 1st index re-set\ndtree_san_df = dtree_san_df.reset_index()\n# Drop the index column\ndtree_san_df = dtree_san_df.drop([\"index\"], axis = 1)\ndtree_san_df.head(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>molecule_chembl_id</th>\n      <th>Ki</th>\n      <th>units</th>\n      <th>data_validity_comment</th>\n      <th>max_phase</th>\n      <th>smiles</th>\n      <th>pKi</th>\n      <th>rdkit_mol</th>\n      <th>standard_smiles</th>\n      <th>selfies</th>\n      <th>inchi</th>\n      <th>inchikey</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CHEMBL60745</td>\n      <td>1.630</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>NaN</td>\n      <td>CC[N+](C)(C)c1cccc(O)c1.[Br-]</td>\n      <td>8.787812</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x1217d67a0&gt;</td>\n      <td>CC[N+](C)(C)c1cccc(O)c1.[Br-]</td>\n      <td>[C][C][N+1][Branch1][C][C][Branch1][C][C][C][=...</td>\n      <td>InChI=1S/C10H15NO.BrH/c1-4-11(2,3)9-6-5-7-10(1...</td>\n      <td>CAEPIUXAUPYIIJ-UHFFFAOYSA-N</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CHEMBL208599</td>\n      <td>0.026</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>NaN</td>\n      <td>CCC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3[C@@H](C1)C2</td>\n      <td>10.585027</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x1217d6960&gt;</td>\n      <td>CCC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3[C@@H](C1)C2</td>\n      <td>[C][C][C][=C][C][C][C][=N][C][=C][C][Branch1][...</td>\n      <td>InChI=1S/C18H19ClN2/c1-2-10-5-11-7-12(6-10)17-...</td>\n      <td>QTPHSDHUHXUYFE-KIYNQFGBSA-N</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CHEMBL95</td>\n      <td>151.000</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>4.0</td>\n      <td>Nc1c2c(nc3ccccc13)CCCC2</td>\n      <td>6.821023</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x1217d6650&gt;</td>\n      <td>Nc1c2c(nc3ccccc13)CCCC2</td>\n      <td>[N][C][=C][C][=Branch1][N][=N][C][=C][C][=C][C...</td>\n      <td>InChI=1S/C13H14N2/c14-13-9-5-1-3-7-11(9)15-12-...</td>\n      <td>YLJREFDVOIBQDA-UHFFFAOYSA-N</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=26}\n``` {.python .cell-code}\n# 2nd index re-set\ndtree_san_df = dtree_san_df.reset_index()\nprint(dtree_san_df.shape)\ndtree_san_df.head(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(481, 13)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=26}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>index</th>\n      <th>molecule_chembl_id</th>\n      <th>Ki</th>\n      <th>units</th>\n      <th>data_validity_comment</th>\n      <th>max_phase</th>\n      <th>smiles</th>\n      <th>pKi</th>\n      <th>rdkit_mol</th>\n      <th>standard_smiles</th>\n      <th>selfies</th>\n      <th>inchi</th>\n      <th>inchikey</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>CHEMBL60745</td>\n      <td>1.630</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>NaN</td>\n      <td>CC[N+](C)(C)c1cccc(O)c1.[Br-]</td>\n      <td>8.787812</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x1217d67a0&gt;</td>\n      <td>CC[N+](C)(C)c1cccc(O)c1.[Br-]</td>\n      <td>[C][C][N+1][Branch1][C][C][Branch1][C][C][C][=...</td>\n      <td>InChI=1S/C10H15NO.BrH/c1-4-11(2,3)9-6-5-7-10(1...</td>\n      <td>CAEPIUXAUPYIIJ-UHFFFAOYSA-N</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>CHEMBL208599</td>\n      <td>0.026</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>NaN</td>\n      <td>CCC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3[C@@H](C1)C2</td>\n      <td>10.585027</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x1217d6960&gt;</td>\n      <td>CCC1=CC2Cc3nc4cc(Cl)ccc4c(N)c3[C@@H](C1)C2</td>\n      <td>[C][C][C][=C][C][C][C][=N][C][=C][C][Branch1][...</td>\n      <td>InChI=1S/C18H19ClN2/c1-2-10-5-11-7-12(6-10)17-...</td>\n      <td>QTPHSDHUHXUYFE-KIYNQFGBSA-N</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>CHEMBL95</td>\n      <td>151.000</td>\n      <td>nM</td>\n      <td>none</td>\n      <td>4.0</td>\n      <td>Nc1c2c(nc3ccccc13)CCCC2</td>\n      <td>6.821023</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x1217d6650&gt;</td>\n      <td>Nc1c2c(nc3ccccc13)CCCC2</td>\n      <td>[N][C][=C][C][=Branch1][N][=N][C][=C][C][=C][C...</td>\n      <td>InChI=1S/C13H14N2/c14-13-9-5-1-3-7-11(9)15-12-...</td>\n      <td>YLJREFDVOIBQDA-UHFFFAOYSA-N</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nAlso re-setting the index of the dtree_san_df_dm.\n\n::: {.cell execution_count=27}\n``` {.python .cell-code}\ndtree_san_df_dm = dtree_san_df_dm.reset_index()\nprint(dtree_san_df_dm.shape)\ndtree_san_df_dm.head(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(481, 23)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=27}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>index</th>\n      <th>mw</th>\n      <th>fsp3</th>\n      <th>n_lipinski_hba</th>\n      <th>n_lipinski_hbd</th>\n      <th>n_rings</th>\n      <th>n_hetero_atoms</th>\n      <th>n_heavy_atoms</th>\n      <th>n_rotatable_bonds</th>\n      <th>n_radical_electrons</th>\n      <th>...</th>\n      <th>sas</th>\n      <th>n_aliphatic_carbocycles</th>\n      <th>n_aliphatic_heterocyles</th>\n      <th>n_aliphatic_rings</th>\n      <th>n_aromatic_carbocycles</th>\n      <th>n_aromatic_heterocyles</th>\n      <th>n_aromatic_rings</th>\n      <th>n_saturated_carbocycles</th>\n      <th>n_saturated_heterocyles</th>\n      <th>n_saturated_rings</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>245.041526</td>\n      <td>0.400000</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>13</td>\n      <td>2</td>\n      <td>0</td>\n      <td>...</td>\n      <td>3.185866</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>298.123676</td>\n      <td>0.388889</td>\n      <td>2</td>\n      <td>2</td>\n      <td>4</td>\n      <td>3</td>\n      <td>21</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>4.331775</td>\n      <td>2</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>198.115698</td>\n      <td>0.307692</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>2</td>\n      <td>15</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>2.014719</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows × 23 columns</p>\n</div>\n```\n:::\n:::\n\n\nMerged both dataframes of dtree_san_df and dtree_san_df_dm based on their indices.\n\n::: {.cell execution_count=28}\n``` {.python .cell-code}\n# merge dtree_san_df & dtree_san_df_dm\ndtree_f_df = pd.merge(\n    dtree_san_df[[\"index\", \"molecule_chembl_id\", \"pKi\", \"max_phase\"]],\n    dtree_san_df_dm,\n    left_index=True,\n    right_index=True\n)\n```\n:::\n\n\nChecking final dataframe to make sure there were 481 rows (also that index_x and index_y were identical) and also there was an increased number of columns (columns combined from both dataframes). So this finally seemed to work.\n\n::: {.cell execution_count=29}\n``` {.python .cell-code}\nprint(dtree_f_df.shape)\ndtree_f_df.head(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(481, 27)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=29}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>index_x</th>\n      <th>molecule_chembl_id</th>\n      <th>pKi</th>\n      <th>max_phase</th>\n      <th>index_y</th>\n      <th>mw</th>\n      <th>fsp3</th>\n      <th>n_lipinski_hba</th>\n      <th>n_lipinski_hbd</th>\n      <th>n_rings</th>\n      <th>...</th>\n      <th>sas</th>\n      <th>n_aliphatic_carbocycles</th>\n      <th>n_aliphatic_heterocyles</th>\n      <th>n_aliphatic_rings</th>\n      <th>n_aromatic_carbocycles</th>\n      <th>n_aromatic_heterocyles</th>\n      <th>n_aromatic_rings</th>\n      <th>n_saturated_carbocycles</th>\n      <th>n_saturated_heterocyles</th>\n      <th>n_saturated_rings</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>CHEMBL60745</td>\n      <td>8.787812</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>245.041526</td>\n      <td>0.400000</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>3.185866</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>CHEMBL208599</td>\n      <td>10.585027</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>298.123676</td>\n      <td>0.388889</td>\n      <td>2</td>\n      <td>2</td>\n      <td>4</td>\n      <td>...</td>\n      <td>4.331775</td>\n      <td>2</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>CHEMBL95</td>\n      <td>6.821023</td>\n      <td>4.0</td>\n      <td>2</td>\n      <td>198.115698</td>\n      <td>0.307692</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>...</td>\n      <td>2.014719</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows × 27 columns</p>\n</div>\n```\n:::\n:::\n\n\nThe two index columns (\"index_x\" and \"index_y\") were removed, which brought out the final preprocessed dataframe.\n\n::: {.cell execution_count=30}\n``` {.python .cell-code}\n# Remove index_x & index_y\ndtree_f_df.drop([\"index_x\", \"index_y\"], axis = 1, inplace = True)\ndtree_f_df.head(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=30}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>molecule_chembl_id</th>\n      <th>pKi</th>\n      <th>max_phase</th>\n      <th>mw</th>\n      <th>fsp3</th>\n      <th>n_lipinski_hba</th>\n      <th>n_lipinski_hbd</th>\n      <th>n_rings</th>\n      <th>n_hetero_atoms</th>\n      <th>n_heavy_atoms</th>\n      <th>...</th>\n      <th>sas</th>\n      <th>n_aliphatic_carbocycles</th>\n      <th>n_aliphatic_heterocyles</th>\n      <th>n_aliphatic_rings</th>\n      <th>n_aromatic_carbocycles</th>\n      <th>n_aromatic_heterocyles</th>\n      <th>n_aromatic_rings</th>\n      <th>n_saturated_carbocycles</th>\n      <th>n_saturated_heterocyles</th>\n      <th>n_saturated_rings</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CHEMBL60745</td>\n      <td>8.787812</td>\n      <td>NaN</td>\n      <td>245.041526</td>\n      <td>0.400000</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>13</td>\n      <td>...</td>\n      <td>3.185866</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CHEMBL208599</td>\n      <td>10.585027</td>\n      <td>NaN</td>\n      <td>298.123676</td>\n      <td>0.388889</td>\n      <td>2</td>\n      <td>2</td>\n      <td>4</td>\n      <td>3</td>\n      <td>21</td>\n      <td>...</td>\n      <td>4.331775</td>\n      <td>2</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CHEMBL95</td>\n      <td>6.821023</td>\n      <td>4.0</td>\n      <td>198.115698</td>\n      <td>0.307692</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>2</td>\n      <td>15</td>\n      <td>...</td>\n      <td>2.014719</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows × 25 columns</p>\n</div>\n```\n:::\n:::\n\n\nI then saved this preprocessed dataframe as another file in my working directory, so that it could be used for estimating experimental errors and model building in the next post.\n\n::: {.cell execution_count=31}\n``` {.python .cell-code}\ndtree_f_df.to_csv(\"ache_2d_chembl.csv\")\n```\n:::\n\n\n<br>\n\n##### **Data preprocessing reflections**\n\nIn general, the order of steps could be swapped in a more logical way. The subsections presented in this post bascially reflected my thought processes, as there were some back-and-forths. The whole data preprocessing step was probably still not thorough enough, but I've tried to cover as much as I could (hopefully I didn't go overboard with it...). Also, it might still not be ideal to use Ki values this freely as mentioned in post 1 (noises in data issues).\n\nIt was mentioned in *scikit-learn* that for decision tree models, because of its non-parametric nature, there were not a lot of data cleaning required. However, I think that might be domain-specific, since for the purpose of drug discovery, if this step wasn't done properly, whatever result that came out of the ML model most likely would not work and also would not reflect real-life scenarios. I was also planning on extending this series to add more trees to the model, that is, from one tree (decision tree), to multiple trees (random forests), and then hopefully move on to boosted trees (XGBoost and LightGBM). Therefore, I'd better do this data cleaning step well first to save some time later (if using the same set of data).\n\nNext post will be about model building using *scikit-learn* and also a small part on estimating experimental errors on the dataset - this is going to be in post 3.\n\n",
    "supporting": [
      "Data_prep_2_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n<script src=\"https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js\" crossorigin=\"anonymous\"></script>\n"
      ],
      "include-after-body": [
        "<script type=application/vnd.jupyter.widget-state+json>\n{\"state\":{\"0ed8e1f07ca84eecbd8a40d942848185\":{\"model_module\":\"@jupyter-widgets/base\",\"model_module_version\":\"1.2.0\",\"model_name\":\"LayoutModel\",\"state\":{\"_model_module\":\"@jupyter-widgets/base\",\"_model_module_version\":\"1.2.0\",\"_model_name\":\"LayoutModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"1.2.0\",\"_view_name\":\"LayoutView\",\"align_content\":null,\"align_items\":null,\"align_self\":null,\"border\":null,\"bottom\":null,\"display\":null,\"flex\":null,\"flex_flow\":null,\"grid_area\":null,\"grid_auto_columns\":null,\"grid_auto_flow\":null,\"grid_auto_rows\":null,\"grid_column\":null,\"grid_gap\":null,\"grid_row\":null,\"grid_template_areas\":null,\"grid_template_columns\":null,\"grid_template_rows\":null,\"height\":null,\"justify_content\":null,\"justify_items\":null,\"left\":null,\"margin\":null,\"max_height\":null,\"max_width\":null,\"min_height\":null,\"min_width\":null,\"object_fit\":null,\"object_position\":null,\"order\":null,\"overflow\":null,\"overflow_x\":null,\"overflow_y\":null,\"padding\":null,\"right\":null,\"top\":null,\"visibility\":null,\"width\":null}},\"890a180f35d34813ae730810328a6072\":{\"model_module\":\"mols2grid\",\"model_module_version\":\"^1.0.0\",\"model_name\":\"MolGridModel\",\"state\":{\"_dom_classes\":[],\"_model_module\":\"mols2grid\",\"_model_module_version\":\"^1.0.0\",\"_model_name\":\"MolGridModel\",\"_view_count\":null,\"_view_module\":\"mols2grid\",\"_view_module_version\":\"^1.0.0\",\"_view_name\":\"MolGridView\",\"callback_kwargs\":\"{}\",\"filter_mask\":[],\"grid_id\":\"default\",\"layout\":\"IPY_MODEL_0ed8e1f07ca84eecbd8a40d942848185\",\"selection\":\"{}\"}}},\"version_major\":2,\"version_minor\":0}\n</script>\n"
      ]
    }
  }
}