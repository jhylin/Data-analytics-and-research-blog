{
  "hash": "fb7bd67e46dffa8551a47f5fe659c96f",
  "result": {
    "markdown": "---\ndraft: true\n---\n\n**Using datamol - Python library that works with molecules**\n\n**Current post**\n\n**Key question**: Will compound 3's scaffold be similar to the scaffolds of any approved anti-infectives? - if similar implying it might be a good hit (with similar bacterial targets? if so this can be backed up with experimental findings from the paper, or if different targets, it might lead to a new type of anti-infective hits)\n\n**Tasks for current post**: - Convert anti-infective compounds & compounds 1-3's SMILES into SELFIES (more robust for ML models) - Get scaffolds of the anti-infective compounds from ChEMBL + compounds 1-3 - Get fragments of these anti-infective compounds + compounds 1-3 (?optional) - Align compounds 1-3 with other scaffolds from ChEMBL - Look for MCS (maximum common structure) - Identify any similarities or differences between anti-infectives from ChEMBL and compound 3\n\n**Features to demonstrate:** - Using Polars dataframe library along with datamol Python library (probably a small degree only, as datamol was written with Pandas in mind only) - Integrating experimental results from paper from PhD work into cheminformatics project (validation always crucial for computational predictions) - Advancing from pure organic chemistry and computational chemistry without code into utilising data science tools and packages by coding in Python to direct project pathway\n\n**Tentative future plan for next post**: - Once found scaffolds, fragments or MCS, set up a ML model as a predictive model prototype foraging for potential small molecules as anti-infective hits (random forest or other types e.g. ?XGBoost and so on)\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport polars as pl\nimport datamol as dm\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndf_ai = pl.read_csv(\"chembl_anti-inf.csv\", sep = \";\")\ndf_ai.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\n    .dataframe td {\n        white-space: pre;\n    }\n\n    .dataframe td {\n        padding-top: 0;\n    }\n\n    .dataframe td {\n        padding-bottom: 0;\n    }\n\n    .dataframe td {\n        line-height: 95%;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n<small>shape: (5, 29)</small>\n<thead>\n<tr>\n<th>\nParent Molecule\n</th>\n<th>\nName\n</th>\n<th>\nSynonyms\n</th>\n<th>\nResearch Codes\n</th>\n<th>\nPhase\n</th>\n<th>\nDrug Applicants\n</th>\n<th>\nUSAN Stem\n</th>\n<th>\nUSAN Year\n</th>\n<th>\nUSAN Definition\n</th>\n<th>\nUSAN Stem - Substem\n</th>\n<th>\nFirst Approval\n</th>\n<th>\nATC Codes\n</th>\n<th>\nLevel 4 ATC Codes\n</th>\n<th>\nLevel 3 ATC Codes\n</th>\n<th>\nLevel 2 ATC Codes\n</th>\n<th>\nLevel 1 ATC Codes\n</th>\n<th>\nIndication Class\n</th>\n<th>\nPatent\n</th>\n<th>\nDrug Type\n</th>\n<th>\nPasses Rule of Five\n</th>\n<th>\nFirst In Class\n</th>\n<th>\nChirality\n</th>\n<th>\nProdrug\n</th>\n<th>\nOral\n</th>\n<th>\nParenteral\n</th>\n<th>\nTopical\n</th>\n<th>\nBlack Box\n</th>\n<th>\nAvailability Type\n</th>\n<th>\nSmiles\n</th>\n</tr>\n<tr>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nf64\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n<td>\ni64\n</td>\n<td>\ni64\n</td>\n<td>\nstr\n</td>\n<td>\ni64\n</td>\n<td>\ni64\n</td>\n<td>\ni64\n</td>\n<td>\ni64\n</td>\n<td>\ni64\n</td>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n&quot;CHEMBL374975&quot;\n</td>\n<td>\n&quot;FUSIDIC ACID&quot;\n</td>\n<td>\n&quot;ANHYDROUS FUSI...\n</td>\n<td>\n&quot;CEM-102|NSC-56...\n</td>\n<td>\n4.0\n</td>\n<td>\n&quot;&quot;\n</td>\n<td>\n&quot;&quot;\n</td>\n<td>\n&quot;1967&quot;\n</td>\n<td>\n&quot;&quot;\n</td>\n<td>\n&quot;&quot;\n</td>\n<td>\n&quot;&quot;\n</td>\n<td>\n&quot;J01XC01 | S01A...\n</td>\n<td>\n&quot;J01XC - Steroi...\n</td>\n<td>\n&quot;J01X - OTHER A...\n</td>\n<td>\n&quot;J01 - ANTIBACT...\n</td>\n<td>\n&quot;J - ANTIINFECT...\n</td>\n<td>\n&quot;Antibacterial&quot;\n</td>\n<td>\n&quot;None&quot;\n</td>\n<td>\n&quot;1:Synthetic Sm...\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n&quot;Single Stereoi...\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n&quot;Unknown&quot;\n</td>\n<td>\n&quot;CC(=O)O[C@H]1C...\n</td>\n</tr>\n<tr>\n<td>\n&quot;CHEMBL130&quot;\n</td>\n<td>\n&quot;CHLORAMPHENICO...\n</td>\n<td>\n&quot;9-HYDROXY-9-PH...\n</td>\n<td>\n&quot;NSC-16331|NSC-...\n</td>\n<td>\n4.0\n</td>\n<td>\n&quot;Ivax Pharmaceu...\n</td>\n<td>\n&quot;&quot;\n</td>\n<td>\n&quot;&quot;\n</td>\n<td>\n&quot;&quot;\n</td>\n<td>\n&quot;&quot;\n</td>\n<td>\n&quot;1950&quot;\n</td>\n<td>\n&quot;S01AA01 | S03A...\n</td>\n<td>\n&quot;S01AA - Antibi...\n</td>\n<td>\n&quot;S01A - ANTIINF...\n</td>\n<td>\n&quot;S01 - OPHTHALM...\n</td>\n<td>\n&quot;S - SENSORY OR...\n</td>\n<td>\n&quot;Antibacterial;...\n</td>\n<td>\n&quot;None&quot;\n</td>\n<td>\n&quot;1:Synthetic Sm...\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n&quot;Single Stereoi...\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n&quot;Unknown&quot;\n</td>\n<td>\n&quot;O=C(N[C@H](CO)...\n</td>\n</tr>\n<tr>\n<td>\n&quot;CHEMBL186&quot;\n</td>\n<td>\n&quot;CEFEPIME&quot;\n</td>\n<td>\n&quot;BMY-28142|CEFE...\n</td>\n<td>\n&quot;BMY-28142|J01D...\n</td>\n<td>\n4.0\n</td>\n<td>\n&quot;Samson Medical...\n</td>\n<td>\n&quot;&#x27;cef-&#x27;&quot;\n</td>\n<td>\n&quot;1987&quot;\n</td>\n<td>\n&quot;cephalosporins...\n</td>\n<td>\n&quot;&#x27;cef-(cef-)&#x27;&quot;\n</td>\n<td>\n&quot;1996&quot;\n</td>\n<td>\n&quot;J01DE01&quot;\n</td>\n<td>\n&quot;J01DE - Fourth...\n</td>\n<td>\n&quot;J01D - OTHER B...\n</td>\n<td>\n&quot;J01 - ANTIBACT...\n</td>\n<td>\n&quot;J - ANTIINFECT...\n</td>\n<td>\n&quot;Antibacterial&quot;\n</td>\n<td>\n&quot;None&quot;\n</td>\n<td>\n&quot;1:Synthetic Sm...\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n&quot;Single Stereoi...\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n&quot;Prescription O...\n</td>\n<td>\n&quot;CO/N=C(\\C(=O)N...\n</td>\n</tr>\n<tr>\n<td>\n&quot;CHEMBL222645&quot;\n</td>\n<td>\n&quot;FLOXACILLIN&quot;\n</td>\n<td>\n&quot;ABBOFLOX|BRL 2...\n</td>\n<td>\n&quot;BRL 2039|BRL-2...\n</td>\n<td>\n4.0\n</td>\n<td>\n&quot;&quot;\n</td>\n<td>\n&quot;&#x27;-cillin&#x27;&quot;\n</td>\n<td>\n&quot;1972&quot;\n</td>\n<td>\n&quot;penicillins&quot;\n</td>\n<td>\n&quot;&#x27;-cillin(-cill...\n</td>\n<td>\n&quot;&quot;\n</td>\n<td>\n&quot;J01CF05&quot;\n</td>\n<td>\n&quot;J01CF - Beta-l...\n</td>\n<td>\n&quot;J01C - BETA-LA...\n</td>\n<td>\n&quot;J01 - ANTIBACT...\n</td>\n<td>\n&quot;J - ANTIINFECT...\n</td>\n<td>\n&quot;Antibacterial&quot;\n</td>\n<td>\n&quot;None&quot;\n</td>\n<td>\n&quot;1:Synthetic Sm...\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n&quot;Single Stereoi...\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n&quot;Unknown&quot;\n</td>\n<td>\n&quot;Cc1onc(-c2c(F)...\n</td>\n</tr>\n<tr>\n<td>\n&quot;CHEMBL2364632&quot;\n</td>\n<td>\n&quot;SARECYCLINE&quot;\n</td>\n<td>\n&quot;P-005672|P0056...\n</td>\n<td>\n&quot;P-005672|P0056...\n</td>\n<td>\n4.0\n</td>\n<td>\n&quot;Almirall Llc&quot;\n</td>\n<td>\n&quot;&#x27;-cycline&#x27;&quot;\n</td>\n<td>\n&quot;2012&quot;\n</td>\n<td>\n&quot;antibiotics (t...\n</td>\n<td>\n&quot;&#x27;-cycline(-cyc...\n</td>\n<td>\n&quot;2018&quot;\n</td>\n<td>\n&quot;J01AA14&quot;\n</td>\n<td>\n&quot;J01AA - Tetrac...\n</td>\n<td>\n&quot;J01A - TETRACY...\n</td>\n<td>\n&quot;J01 - ANTIBACT...\n</td>\n<td>\n&quot;J - ANTIINFECT...\n</td>\n<td>\n&quot;&quot;\n</td>\n<td>\n&quot;US-8318706-B2&quot;\n</td>\n<td>\n&quot;1:Synthetic Sm...\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n&quot;Single Stereoi...\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n&quot;Prescription O...\n</td>\n<td>\n&quot;CON(C)Cc1ccc(O...\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nprint(df_ai.glimpse())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 144\nColumns: 29\n$ Parent Molecule        <Utf8> CHEMBL374975, CHEMBL130, CHEMBL186, CHEMBL222645, CHEMBL2364632, CHEMBL62193, CHEMBL2303613, CHEMBL31, CHEMBL268869, CHEMBL3039597\n$ Name                   <Utf8> FUSIDIC ACID, CHLORAMPHENICOL, CEFEPIME, FLOXACILLIN, SARECYCLINE, SULFADIMETHOXINE, CEFODIZIME, GATIFLOXACIN, SULFAMETHOXYPYRIDAZINE, GENTAMICIN\n$ Synonyms               <Utf8> ANHYDROUS FUSIDIC ACID|CEM-102|FUCIDIN CAVIJECT|FUCITHALMIC|FUSIDATE|FUSIDIC ACID|NSC-56192|RAMYCIN|SQ 16,603|SQ-16603|TAKSTA, 9-HYDROXY-9-PHENYLXANTHENE|9-PHENYL-9H-XANTHEN-9-OL|AMPHICOL|BROCHLOR|BROLENE ANTIBIOTIC|CHLORAMPHENICOL|CHLOROFAIR|CHLOROPTIC|CHLOROPTIC S.O.P.|Chloramex|Chloramphenicol|Chlorbiotic|Chloromycetin|ECONOCHLOR|GOLDEN EYE ANTIBIOTIC|KEMICETINE|KLORAFECT|Kernispray|MYCHEL|Mychel-S|NSC-16331|NSC-3069|OPHTHOCHLOR|OPTOMYCIN|SNO PHENICOL|TUBILUX INFECTED EYES|Tevcocin|XANTHEN-9-OL, 9-PHENYL-, BMY-28142|CEFEPIME|J01DE01|Maxipime|RENAPIME|VNRX-5022, ABBOFLOX|BRL 2039|BRL-2039|CULPEN|FLOXACILLIN|FLOXACILLIN SODIUM|FLOXACILLIN SODIUM ANHYDROUS|FLUCLOMIX-250|FLUCLOMIX-500|FLUCLOXACILLIN|FLUCLOXACILLIN SODIUM|FLUCLOXACILLIN SODIUM ANHYDROUS|FLUCLOXACILLIN SODIUM MONOHYDRATE|FLUCLOXIN|Floxapen|GALFLOXIN|LADROPEN|NSC-277175|RIMAFLOX|STAFOXIL|STAPHLIPEN|STAPHYLEX|ZOXIN 250|ZOXIN 500, P-005672|P005672|SARECYCLINE, Madribon|NSC-683544|NSC-757860|SULFADIMETHOXINE|SULPHADIMETHOXINE, CEFODIZIME|CEFODIZIME DISODIUM|CEFODIZIME DISODIUM SALT|CEFODIZIME SODIUM|Cefodizime|HR 221|HR 221 [AS SODIUM]|HR-221|S 77 1221 B|S 77 1221 B [AS SODIUM]|S 77-1221B|S-77-1221-B|S-77-1221B|THR 221|THR 221 [AS SODIUM]|THR-221|TIMECEF, AM-1155|BMS-206584-01|BMS-20658401|GATIFLO|GATIFLOXACIN|GATIFLOXACIN (SESQUIHYDRATE)|GATIFLOXACIN ANHYDROUS|GATIFLOXACIN HYDRATE|GATIFLOXACIN SESQUIHYDRATE|NSC-758701|PD-135432|Tequin|ZYMAXID|ZYMER|Zymar, CL-13494|DEPOVERNIL|LEDERKYN|Midicel|NSC-757875|RETASULPHINE|SUCCINYLSULFATHI|SULFAMETHOXYPYRIDAZINE|SULFAMETHOXYPYRIDAZINUM|SULFASUXIDINE|SULPHAMETHOXYPYRIDAZINE, GENTAMICIN|GENTAMYCIN|LYRAMYCIN|OKSITSELANIM|SCH-9724|SEPTIGEN|Uromycine\n$ Research Codes         <Utf8> CEM-102|NSC-56192|SQ 16,603|SQ-16603, NSC-16331|NSC-3069, BMY-28142|J01DE01|VNRX-5022, BRL 2039|BRL-2039|NSC-277175, P-005672|P005672, NSC-683544|NSC-757860, HR 221|HR 221 [AS SODIUM]|HR-221|S 77 1221 B|S 77 1221 B [AS SODIUM]|S 77-1221B|S-77-1221-B|S-77-1221B|THR 221|THR 221 [AS SODIUM]|THR-221, AM-1155|BMS-206584-01|BMS-20658401|NSC-758701|PD-135432, CL-13494|NSC-757875, SCH-9724\n$ Phase               <Float64> 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0                        \n$ Drug Applicants        <Utf8> , Ivax Pharmaceuticals Inc Sub Teva Pharmaceuticals Usa|Armenpharm Ltd|Optopics Laboratories Corp|John J Ferrante|Parkedale Pharmaceuticals Inc|Alcon Laboratories Inc|Pharmafair Inc|Parke Davis Pharmaceutical Research Div Warner Lambert Co|Allergan Pharmaceutical|Akorn Operating Co Llc, Samson Medical Technologies Llc|Fosun Pharma Usa Inc|Sagent Pharmaceuticals Inc|Hospira Inc|B Braun Medical Inc|Acs Dobfar Spa|Astral Steritech Pvt Ltd|Qilu Pharmaceutical Co Ltd|Baxter Healthcare Corp, , Almirall Llc, , , Apotex Inc|Bristol Myers Squibb|Sandoz Inc|Allergan|Bristol Myers Squibb Co Pharmaceutical Research Institute|Allergan Inc|Akorn Operating Co Llc|Torrent Pharmaceuticals Ltd|Lupin Ltd|Rising Pharma Holdings Inc, , Schering Corp Sub Schering Plough Corp|Watson Laboratories Inc|Abbott Laboratories Pharmaceutical Products Div|Fougera Pharmaceuticals Inc|Bausch And Lomb Pharmaceuticals Inc|Taro Pharmaceuticals Usa Inc|Novartis Pharmaceuticals Corp|Allergan Pharmaceutical|Akorn Operating Co Llc|Cosette Pharmaceuticals Inc\n$ USAN Stem              <Utf8> , , 'cef-', '-cillin', '-cycline', 'sulfa-', 'cef-', '-oxacin', 'sulfa-', '-micin'\n$ USAN Year              <Utf8> 1967, , 1987, 1972, 2012, , , 1997, , 1963                              \n$ USAN Definition        <Utf8> , , cephalosporins, penicillins, antibiotics (tetracycline derivatives), antimicrobials (sulfonamides derivatives), cephalosporins, antibacterials (quinolone derivatives), antimicrobials (sulfonamides derivatives), antibiotics (Micromonospora strains)\n$ USAN Stem - Substem    <Utf8> , , 'cef-(cef-)', '-cillin(-cillin)', '-cycline(-cycline)', 'sulfa-(sulfa-)', 'cef-(cef-)', '-oxacin(-oxacin)', 'sulfa-(sulfa-)', '-micin(-micin)'\n$ First Approval         <Utf8> , 1950, 1996, , 2018, , , 1999, , 1970                                  \n$ ATC Codes              <Utf8> J01XC01 | S01AA13 | D06AX01 | D09AA02, S01AA01 | S03AA08 | D06AX02 | G01AA05 | S02AA01 | D10AF03 | J01BA01, J01DE01, J01CF05, J01AA14, J01ED01, J01DD09, S01AE06 | J01MA16, J01ED05, S01AA11 | S02AA14 | J01GB03 | S03AA06 | D06AX07\n$ Level 4 ATC Codes      <Utf8> J01XC - Steroid antibacterials | S01AA - Antibiotics | D06AX - Other antibiotics for topical use | D09AA - Medicated dressings with antiinfectives, S01AA - Antibiotics | S03AA - Antiinfectives | D06AX - Other antibiotics for topical use | G01AA - Antibiotics | S02AA - Antiinfectives | D10AF - Antiinfectives for treatment of acne | J01BA - Amphenicols, J01DE - Fourth-generation cephalosporins, J01CF - Beta-lactamase resistant penicillins, J01AA - Tetracyclines, J01ED - Long-acting sulfonamides, J01DD - Third-generation cephalosporins, S01AE - Fluoroquinolones | J01MA - Fluoroquinolones, J01ED - Long-acting sulfonamides, S01AA - Antibiotics | S02AA - Antiinfectives | J01GB - Other aminoglycosides | S03AA - Antiinfectives | D06AX - Other antibiotics for topical use\n$ Level 3 ATC Codes      <Utf8> J01X - OTHER ANTIBACTERIALS | S01A - ANTIINFECTIVES | D06A - ANTIBIOTICS FOR TOPICAL USE | D09A - MEDICATED DRESSINGS, S01A - ANTIINFECTIVES | S03A - ANTIINFECTIVES | D06A - ANTIBIOTICS FOR TOPICAL USE | G01A - ANTIINFECTIVES AND ANTISEPTICS, EXCL. COMBINATIONS WITH CORTICOSTEROIDS | S02A - ANTIINFECTIVES | D10A - ANTI-ACNE PREPARATIONS FOR TOPICAL USE | J01B - AMPHENICOLS, J01D - OTHER BETA-LACTAM ANTIBACTERIALS, J01C - BETA-LACTAM ANTIBACTERIALS, PENICILLINS, J01A - TETRACYCLINES, J01E - SULFONAMIDES AND TRIMETHOPRIM, J01D - OTHER BETA-LACTAM ANTIBACTERIALS, S01A - ANTIINFECTIVES | J01M - QUINOLONE ANTIBACTERIALS, J01E - SULFONAMIDES AND TRIMETHOPRIM, S01A - ANTIINFECTIVES | S02A - ANTIINFECTIVES | J01G - AMINOGLYCOSIDE ANTIBACTERIALS | S03A - ANTIINFECTIVES | D06A - ANTIBIOTICS FOR TOPICAL USE\n$ Level 2 ATC Codes      <Utf8> J01 - ANTIBACTERIALS FOR SYSTEMIC USE | S01 - OPHTHALMOLOGICALS | D06 - ANTIBIOTICS AND CHEMOTHERAPEUTICS FOR DERMATOLOGICAL USE | D09 - MEDICATED DRESSINGS, S01 - OPHTHALMOLOGICALS | S03 - OPHTHALMOLOGICAL AND OTOLOGICAL PREPARATIONS | D06 - ANTIBIOTICS AND CHEMOTHERAPEUTICS FOR DERMATOLOGICAL USE | G01 - GYNECOLOGICAL ANTIINFECTIVES AND ANTISEPTICS | S02 - OTOLOGICALS | D10 - ANTI-ACNE PREPARATIONS | J01 - ANTIBACTERIALS FOR SYSTEMIC USE, J01 - ANTIBACTERIALS FOR SYSTEMIC USE, J01 - ANTIBACTERIALS FOR SYSTEMIC USE, J01 - ANTIBACTERIALS FOR SYSTEMIC USE, J01 - ANTIBACTERIALS FOR SYSTEMIC USE, J01 - ANTIBACTERIALS FOR SYSTEMIC USE, S01 - OPHTHALMOLOGICALS | J01 - ANTIBACTERIALS FOR SYSTEMIC USE, J01 - ANTIBACTERIALS FOR SYSTEMIC USE, S01 - OPHTHALMOLOGICALS | S02 - OTOLOGICALS | J01 - ANTIBACTERIALS FOR SYSTEMIC USE | S03 - OPHTHALMOLOGICAL AND OTOLOGICAL PREPARATIONS | D06 - ANTIBIOTICS AND CHEMOTHERAPEUTICS FOR DERMATOLOGICAL USE\n$ Level 1 ATC Codes      <Utf8> J - ANTIINFECTIVES FOR SYSTEMIC USE | S - SENSORY ORGANS | D - DERMATOLOGICALS | D - DERMATOLOGICALS, S - SENSORY ORGANS | S - SENSORY ORGANS | D - DERMATOLOGICALS | G - GENITO URINARY SYSTEM AND SEX HORMONES | S - SENSORY ORGANS | D - DERMATOLOGICALS | J - ANTIINFECTIVES FOR SYSTEMIC USE, J - ANTIINFECTIVES FOR SYSTEMIC USE, J - ANTIINFECTIVES FOR SYSTEMIC USE, J - ANTIINFECTIVES FOR SYSTEMIC USE, J - ANTIINFECTIVES FOR SYSTEMIC USE, J - ANTIINFECTIVES FOR SYSTEMIC USE, S - SENSORY ORGANS | J - ANTIINFECTIVES FOR SYSTEMIC USE, J - ANTIINFECTIVES FOR SYSTEMIC USE, S - SENSORY ORGANS | S - SENSORY ORGANS | J - ANTIINFECTIVES FOR SYSTEMIC USE | S - SENSORY ORGANS | D - DERMATOLOGICALS\n$ Indication Class       <Utf8> Antibacterial, Antibacterial; Antirickettsial, Antibacterial, Antibacterial, , , , Antibacterial, , Antibacterial\n$ Patent                 <Utf8> None, None, None, None, US-8318706-B2, None, None, None, None, None     \n$ Drug Type              <Utf8> 1:Synthetic Small Molecule, 1:Synthetic Small Molecule, 1:Synthetic Small Molecule, 1:Synthetic Small Molecule, 1:Synthetic Small Molecule, 1:Synthetic Small Molecule, 1:Synthetic Small Molecule, 1:Synthetic Small Molecule, 1:Synthetic Small Molecule, 1:Synthetic Small Molecule\n$ Passes Rule of Five   <Int64> 0, 1, 1, 1, 1, 1, 0, 1, 1, 0                                            \n$ First In Class        <Int64> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0                                            \n$ Chirality              <Utf8> Single Stereoisomer, Single Stereoisomer, Single Stereoisomer, Single Stereoisomer, Single Stereoisomer, Achiral Molecule, Single Stereoisomer, Racemic Mixture, Achiral Molecule, Unknown\n$ Prodrug               <Int64> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0                                            \n$ Oral                  <Int64> 0, 1, 0, 0, 1, 0, 0, 1, 0, 0                                            \n$ Parenteral            <Int64> 0, 1, 1, 0, 0, 0, 0, 1, 0, 1                                            \n$ Topical               <Int64> 0, 1, 0, 0, 0, 0, 0, 1, 0, 1                                            \n$ Black Box             <Int64> 0, 0, 0, 0, 0, 0, 0, 0, 0, 1                                            \n$ Availability Type      <Utf8> Unknown, Unknown, Prescription Only, Unknown, Prescription Only, Withdrawn, Unknown, Prescription Only, Withdrawn, Prescription Only\n$ Smiles                 <Utf8> CC(=O)O[C@H]1C[C@@]2(C)[C@@H](C[C@@H](O)[C@H]3[C@@]4(C)CC[C@@H](O)[C@@H](C)[C@@H]4CC[C@@]32C)/C1=C(\\CCC=C(C)C)C(=O)O, O=C(N[C@H](CO)[C@H](O)c1ccc([N+](=O)[O-])cc1)C(Cl)Cl, CO/N=C(\\C(=O)N[C@@H]1C(=O)N2C(C(=O)[O-])=C(C[N+]3(C)CCCC3)CS[C@H]12)c1csc(N)n1, Cc1onc(-c2c(F)cccc2Cl)c1C(=O)N[C@@H]1C(=O)N2[C@@H]1SC(C)(C)[C@@H]2C(=O)O, CON(C)Cc1ccc(O)c2c1C[C@H]1C[C@H]3[C@H](N(C)C)C(O)=C(C(N)=O)C(=O)[C@@]3(O)C(O)=C1C2=O, COc1cc(NS(=O)(=O)c2ccc(N)cc2)nc(OC)n1, CO/N=C(\\C(=O)N[C@@H]1C(=O)N2C(C(=O)O)=C(CSc3nc(C)c(CC(=O)O)s3)CS[C@H]12)c1csc(N)n1, COc1c(N2CCNC(C)C2)c(F)cc2c(=O)c(C(=O)O)cn(C3CC3)c12, COc1ccc(NS(=O)(=O)c2ccc(N)cc2)nn1, CNC(C)[C@@H]1CC[C@@H](N)[C@@H](O[C@H]2[C@H](O)[C@@H](O[C@H]3OC[C@](C)(O)[C@H](NC)[C@H]3O)[C@H](N)C[C@@H]2N)O1.CN[C@@H]1[C@@H](O)[C@@H](O[C@@H]2[C@@H](O)[C@H](O[C@H]3O[C@H](C(C)N)CC[C@H]3N)[C@@H](N)C[C@H]2N)OC[C@]1(C)O.CN[C@@H]1[C@@H](O)[C@@H](O[C@@H]2[C@@H](O)[C@H](O[C@H]3O[C@H](CN)CC[C@H]3N)[C@@H](N)C[C@H]2N)OC[C@]1(C)O\n\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndf_ai_name_sm = df_ai.select([\"Name\", \"Smiles\"])\ndf_ai_name_sm.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\n    .dataframe td {\n        white-space: pre;\n    }\n\n    .dataframe td {\n        padding-top: 0;\n    }\n\n    .dataframe td {\n        padding-bottom: 0;\n    }\n\n    .dataframe td {\n        line-height: 95%;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n<small>shape: (5, 2)</small>\n<thead>\n<tr>\n<th>\nName\n</th>\n<th>\nSmiles\n</th>\n</tr>\n<tr>\n<td>\nstr\n</td>\n<td>\nstr\n</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n&quot;FUSIDIC ACID&quot;\n</td>\n<td>\n&quot;CC(=O)O[C@H]1C...\n</td>\n</tr>\n<tr>\n<td>\n&quot;CHLORAMPHENICO...\n</td>\n<td>\n&quot;O=C(N[C@H](CO)...\n</td>\n</tr>\n<tr>\n<td>\n&quot;CEFEPIME&quot;\n</td>\n<td>\n&quot;CO/N=C(\\C(=O)N...\n</td>\n</tr>\n<tr>\n<td>\n&quot;FLOXACILLIN&quot;\n</td>\n<td>\n&quot;Cc1onc(-c2c(F)...\n</td>\n</tr>\n<tr>\n<td>\n&quot;SARECYCLINE&quot;\n</td>\n<td>\n&quot;CON(C)Cc1ccc(O...\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Convert polars dataframe into a pandas dataframe\ndf_ai_pd = df_ai_name_sm.to_pandas()\ndf_ai_pd\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>Smiles</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>FUSIDIC ACID</td>\n      <td>CC(=O)O[C@H]1C[C@@]2(C)[C@@H](C[C@@H](O)[C@H]3...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CHLORAMPHENICOL</td>\n      <td>O=C(N[C@H](CO)[C@H](O)c1ccc([N+](=O)[O-])cc1)C...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CEFEPIME</td>\n      <td>CO/N=C(\\C(=O)N[C@@H]1C(=O)N2C(C(=O)[O-])=C(C[N...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>FLOXACILLIN</td>\n      <td>Cc1onc(-c2c(F)cccc2Cl)c1C(=O)N[C@@H]1C(=O)N2[C...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>SARECYCLINE</td>\n      <td>CON(C)Cc1ccc(O)c2c1C[C@H]1C[C@H]3[C@H](N(C)C)C...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>139</th>\n      <td>CIPROFLOXACIN</td>\n      <td>O=C(O)c1cn(C2CC2)c2cc(N3CCNCC3)c(F)cc2c1=O</td>\n    </tr>\n    <tr>\n      <th>140</th>\n      <td>NORFLOXACIN</td>\n      <td>CCn1cc(C(=O)O)c(=O)c2cc(F)c(N3CCNCC3)cc21</td>\n    </tr>\n    <tr>\n      <th>141</th>\n      <td>SULFANILAMIDE</td>\n      <td>Nc1ccc(S(N)(=O)=O)cc1</td>\n    </tr>\n    <tr>\n      <th>142</th>\n      <td>OFLOXACIN</td>\n      <td>CC1COc2c(N3CCN(C)CC3)c(F)cc3c(=O)c(C(=O)O)cn1c23</td>\n    </tr>\n    <tr>\n      <th>143</th>\n      <td>AMDINOCILLIN</td>\n      <td>CC1(C)S[C@@H]2[C@H](/N=C/N3CCCCCC3)C(=O)N2[C@H...</td>\n    </tr>\n  </tbody>\n</table>\n<p>144 rows × 2 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n# Make a molecule column from the smiles column\ndf_ai_pd[\"mol\"] = df_ai_pd[\"Smiles\"].apply(lambda x: dm.to_mol(x))\ndf_ai_pd.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>Smiles</th>\n      <th>mol</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>FUSIDIC ACID</td>\n      <td>CC(=O)O[C@H]1C[C@@]2(C)[C@@H](C[C@@H](O)[C@H]3...</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x126d47ed0&gt;</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CHLORAMPHENICOL</td>\n      <td>O=C(N[C@H](CO)[C@H](O)c1ccc([N+](=O)[O-])cc1)C...</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x126de80b0&gt;</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CEFEPIME</td>\n      <td>CO/N=C(\\C(=O)N[C@@H]1C(=O)N2C(C(=O)[O-])=C(C[N...</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x126de8120&gt;</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>FLOXACILLIN</td>\n      <td>Cc1onc(-c2c(F)cccc2Cl)c1C(=O)N[C@@H]1C(=O)N2[C...</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x126de8190&gt;</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>SARECYCLINE</td>\n      <td>CON(C)Cc1ccc(O)c2c1C[C@H]1C[C@H]3[C@H](N(C)C)C...</td>\n      <td>&lt;rdkit.Chem.rdchem.Mol object at 0x126de8200&gt;</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n#selfies = dm.to_selfies(mol)\n```\n:::\n\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n# Grab all SMILES from df_ai\ndf_ai_sm = df_ai[\"Smiles\"]\n# Load a list of molecules in SMILES\n# dm.to_mol default set with sanitize = True\nmol_ls = [dm.to_mol(smile) for smile in df_ai_sm]\n# Alternative way to convert dataframe into a list of mols (same as mol_ls)\n# mols = dm.from_df(df_ai_pd, smiles_column=\"Smiles\")\n# Convert the list of molecules into 2D images\ndm.to_image(mol_ls, n_cols = 5, mol_size = (400, 400))\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n![](chembl_anti-inf_data_prep_files/figure-html/cell-9-output-1.svg){}\n:::\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n# Extract Murcko scaffolds from mol_ls (ChEMBL anti-infectives)\nm_scaffolds = [dm.to_scaffold_murcko(mol) for mol in mol_ls]\ndm.to_image(m_scaffolds, mol_size = (400, 400))\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n![](chembl_anti-inf_data_prep_files/figure-html/cell-10-output-1.svg){}\n:::\n:::\n\n\nThe section below focuses on 3 compounds from this paper - Lin, H.-Y.J.; Battaje, R.R.; Tan, J.; Doddareddy, M.; Dhaked, H.P.S.; Srivastava, S.; Hawkins, B.A.; Al-Shdifat, L.M.H.; Hibbs, D.E.; Panda, D.; et al. Discovery of 2',6-Bis(4-hydroxybenzyl)-2-acetylcyclohexanone, a Novel FtsZ Inhibitor. Molecules 2022, 27, 6993. https://doi.org/10.3390/molecules27206993\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\n# Convert compound 1 to mol from InChI\ncpd1 = dm.from_inchi(\"InChI=1S/C22H20O4/c23-18-9-4-15(5-10-18)8-13-21(25)20-3-1-2-17(22(20)26)14-16-6-11-19(24)12-7-16/h4-14,20,23-24H,1-3H2/b13-8+,17-14+\")\ncpd1\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n![](chembl_anti-inf_data_prep_files/figure-html/cell-11-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\n# Convert compound 2 SMILES to mol\ncpd2 = dm.to_mol(\"OC1=C(C=CC=C1CC1=CC=C(C=C1)O)C(CCC1=CC=C(C=C1)O)=O\")\ncpd2\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n![](chembl_anti-inf_data_prep_files/figure-html/cell-12-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\n# Convert compound 3 SMILES to mol\ncpd3 = dm.to_mol(\"OC1=CC=C(CC2C(C(CCC2)C(CCC2=CC=C(C=C2)O)=O)=O)C=C1\")\ncpd3\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n![](chembl_anti-inf_data_prep_files/figure-html/cell-13-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\n# Save these 3 compounds into a list\nmol_lst = [cpd1, cpd2, cpd3]\nmol_lst\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\n[<rdkit.Chem.rdchem.Mol at 0x127d6dd20>,\n <rdkit.Chem.rdchem.Mol at 0x127d6dee0>,\n <rdkit.Chem.rdchem.Mol at 0x127d6e110>]\n```\n:::\n:::\n\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\n# Convert a list of mols to a dataframe\ndf = dm.to_df(mol_lst)\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>smiles</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>O=C(/C=C/c1ccc(O)cc1)C1CCC/C(=C\\c2ccc(O)cc2)C1=O</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>O=C(CCc1ccc(O)cc1)c1cccc(Cc2ccc(O)cc2)c1O</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>O=C(CCc1ccc(O)cc1)C1CCCC(Cc2ccc(O)cc2)C1=O</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nnames = [\"Compound 1\", \"Compound 2\", \"Compound 3\"]\ndf[\"names\"] = names\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>smiles</th>\n      <th>names</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>O=C(/C=C/c1ccc(O)cc1)C1CCC/C(=C\\c2ccc(O)cc2)C1=O</td>\n      <td>Compound 1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>O=C(CCc1ccc(O)cc1)c1cccc(Cc2ccc(O)cc2)c1O</td>\n      <td>Compound 2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>O=C(CCc1ccc(O)cc1)C1CCCC(Cc2ccc(O)cc2)C1=O</td>\n      <td>Compound 3</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\n# Pre-process molecules using _preprocess function - adapted with courtesy from datamol.io\n\nsmiles_column = \"smiles\"\n\ndm.disable_rdkit_log()\n\ndef _preprocess(row):\n    mol = dm.to_mol(row[smiles_column], ordered=True)\n    mol = dm.fix_mol(mol)\n    mol = dm.sanitize_mol(mol, sanifix=True, charge_neutral=False)\n    mol = dm.standardize_mol(\n        mol,\n        disconnect_metals=False,\n        normalize=True,\n        reionize=True,\n        uncharge=False,\n        stereo=True,\n    )\n\n    row[\"standard_smiles\"] = dm.standardize_smiles(dm.to_smiles(mol))\n    row[\"selfies\"] = dm.to_selfies(mol)\n    row[\"inchi\"] = dm.to_inchi(mol)\n    row[\"inchikey\"] = dm.to_inchikey(mol)\n    return row\n```\n:::\n\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\ndata_cleaned = df.apply(_preprocess, axis=1)\ndata_cleaned\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>smiles</th>\n      <th>names</th>\n      <th>standard_smiles</th>\n      <th>selfies</th>\n      <th>inchi</th>\n      <th>inchikey</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>O=C(/C=C/c1ccc(O)cc1)C1CCC/C(=C\\c2ccc(O)cc2)C1=O</td>\n      <td>Compound 1</td>\n      <td>O=C(/C=C/c1ccc(O)cc1)C1CCC/C(=C\\c2ccc(O)cc2)C1=O</td>\n      <td>[O][=C][Branch1][=C][/C][=C][/C][=C][C][=C][Br...</td>\n      <td>InChI=1S/C22H20O4/c23-18-9-4-15(5-10-18)8-13-2...</td>\n      <td>QNBFRAOWJNMPAF-ZIQQYUHESA-N</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>O=C(CCc1ccc(O)cc1)c1cccc(Cc2ccc(O)cc2)c1O</td>\n      <td>Compound 2</td>\n      <td>O=C(CCc1ccc(O)cc1)c1cccc(Cc2ccc(O)cc2)c1O</td>\n      <td>[O][=C][Branch1][=C][C][C][C][=C][C][=C][Branc...</td>\n      <td>InChI=1S/C22H20O4/c23-18-9-4-15(5-10-18)8-13-2...</td>\n      <td>CWVXMBYGWRWONE-UHFFFAOYSA-N</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>O=C(CCc1ccc(O)cc1)C1CCCC(Cc2ccc(O)cc2)C1=O</td>\n      <td>Compound 3</td>\n      <td>O=C(CCc1ccc(O)cc1)C1CCCC(Cc2ccc(O)cc2)C1=O</td>\n      <td>[O][=C][Branch1][=C][C][C][C][=C][C][=C][Branc...</td>\n      <td>InChI=1S/C22H24O4/c23-18-9-4-15(5-10-18)8-13-2...</td>\n      <td>KWPXNGBFYRHREW-UHFFFAOYSA-N</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "chembl_anti-inf_data_prep_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}